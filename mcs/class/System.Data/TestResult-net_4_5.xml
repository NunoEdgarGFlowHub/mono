<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="System.Data_test_net_4_5.dll" total="2114" failures="0" not-run="17" date="2014-06-29" time="12:49:39">
  <environment nunit-version="2.4.8.0" clr-version="4.0.30319.17020" os-version="Unix 3.15.0.8" platform="Unix" cwd="/store/dash/mono-tizen/mono-sources/mcs/class/System.Data" machine-name="mini" user="dash" user-domain="mini" />
  <culture-info current-culture="" current-uiculture="" />
  <test-suite name="System.Data_test_net_4_5.dll" success="True" time="12.841" asserts="0">
    <results>
      <test-suite name="BinarySerializationTest" success="True" time="0.464" asserts="0">
        <results>
          <test-case name="BinarySerializationTest.Constraint_Relations_Test1" executed="True" success="True" time="0.225" asserts="16" />
          <test-case name="BinarySerializationTest.Constraint_Relations_Test2" executed="True" success="True" time="0.059" asserts="16" />
          <test-case name="BinarySerializationTest.DataSetSerializationTest1" executed="True" success="True" time="0.007" asserts="25" />
          <test-case name="BinarySerializationTest.DataSetSerializationTest2" executed="True" success="True" time="0.017" asserts="25" />
          <test-case name="BinarySerializationTest.DataTableSerializationTest1" executed="True" success="True" time="0.017" asserts="14" />
          <test-case name="BinarySerializationTest.DataTableSerializationTest2" executed="True" success="True" time="0.031" asserts="14" />
          <test-case name="BinarySerializationTest.RemotingFormatDataSetTest" executed="True" success="True" time="0.001" asserts="8" />
          <test-case name="BinarySerializationTest.RemotingFormatDataTableTest" executed="True" success="True" time="0.000" asserts="2" />
          <test-case name="BinarySerializationTest.Test_With_DateTime_Values1" executed="True" success="True" time="0.003" asserts="4" />
          <test-case name="BinarySerializationTest.Test_With_Null_Values1" executed="True" success="True" time="0.002" asserts="8" />
          <test-case name="BinarySerializationTest.Test_With_Null_Values2" executed="True" success="True" time="0.058" asserts="8" />
          <test-case name="BinarySerializationTest.TestDefaultValues" executed="True" success="True" time="0.006" asserts="4" />
          <test-case name="BinarySerializationTest.TestEmptyTable" executed="True" success="True" time="0.003" asserts="1" />
        </results>
      </test-suite>
      <test-suite name="MonoTests" success="True" time="7.807" asserts="0">
        <results>
          <test-suite name="System" success="True" time="7.798" asserts="0">
            <results>
              <test-suite name="Configuration" success="True" time="0.024" asserts="0">
                <results>
                  <test-suite name="ConnectionStringsSectionTest" success="True" time="0.023" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Configuration.ConnectionStringsSectionTest.GetConfigTest" executed="True" success="True" time="0.023" asserts="5" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="Data" success="True" time="7.592" asserts="0">
                <results>
                  <test-suite name="AppDomainsAndFormatInfo" success="True" time="0.292" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Data.AppDomainsAndFormatInfo.Bug55978" executed="True" success="True" time="0.031" asserts="2" />
                      <test-case name="MonoTests.System.Data.AppDomainsAndFormatInfo.Bug82109" executed="True" success="True" time="0.003" asserts="3" />
                      <test-case name="MonoTests.System.Data.AppDomainsAndFormatInfo.NFIFromBug55978" executed="True" success="True" time="0.256" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="Common" success="True" time="0.461" asserts="0">
                    <results>
                      <test-suite name="DataAdapterTest" success="True" time="0.026" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.Common.DataAdapterTest.AcceptChangesDuringFill" executed="True" success="True" time="0.002" asserts="3" />
                          <test-case name="MonoTests.System.Data.Common.DataAdapterTest.AcceptChangesDuringUpdate" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.Common.DataAdapterTest.ContinueUpdateOnError" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.Common.DataAdapterTest.Fill_Direct" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.Common.DataAdapterTest.FillLoadOption" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.Common.DataAdapterTest.FillLoadOption_Invalid" executed="True" success="True" time="0.002" asserts="7" />
                          <test-case name="MonoTests.System.Data.Common.DataAdapterTest.MissingMappingAction_Invalid" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Data.Common.DataAdapterTest.MissingMappingAction_Valid" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.Common.DataAdapterTest.MissingSchemaAction_Invalid" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Data.Common.DataAdapterTest.MissingSchemaAction_Valid" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.Common.DataAdapterTest.ReturnProviderSpecificTypes" executed="True" success="True" time="0.000" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="DataColumnMappingCollectionTest" success="True" time="0.032" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.Common.DataColumnMappingCollectionTest.Add" executed="True" success="True" time="0.003" asserts="5" />
                          <test-case name="MonoTests.System.Data.Common.DataColumnMappingCollectionTest.AddException1" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Data.Common.DataColumnMappingCollectionTest.AddRange" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Data.Common.DataColumnMappingCollectionTest.Clear" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.Common.DataColumnMappingCollectionTest.Contains" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Data.Common.DataColumnMappingCollectionTest.ContainsException1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.Common.DataColumnMappingCollectionTest.CopyTo" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="MonoTests.System.Data.Common.DataColumnMappingCollectionTest.Equals" executed="True" success="True" time="0.001" asserts="13" />
                          <test-case name="MonoTests.System.Data.Common.DataColumnMappingCollectionTest.GetByDataSetColumn" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Data.Common.DataColumnMappingCollectionTest.GetColumnMappingBySchemaAction" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Data.Common.DataColumnMappingCollectionTest.GetColumnMappingBySchemaActionException1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.Common.DataColumnMappingCollectionTest.IndexOf" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Data.Common.DataColumnMappingCollectionTest.IndexOfDataSetColumn" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Data.Common.DataColumnMappingCollectionTest.Insert" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Data.Common.DataColumnMappingCollectionTest.Remove" executed="False">
                            <reason>
                              <message><![CDATA[This test is wrong. A mapping in a DataColumnMappingCollection must be identical.]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Data.Common.DataColumnMappingCollectionTest.RemoveAt" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Data.Common.DataColumnMappingCollectionTest.RemoveAtException1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.Common.DataColumnMappingCollectionTest.RemoveAtException2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.Common.DataColumnMappingCollectionTest.RemoveException1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.Common.DataColumnMappingCollectionTest.RemoveException2" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Data.Common.DataColumnMappingCollectionTest.ToStringTest" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="DataTableMappingCollectionTest" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.Common.DataTableMappingCollectionTest.Add" executed="True" success="True" time="0.003" asserts="5" />
                          <test-case name="MonoTests.System.Data.Common.DataTableMappingCollectionTest.AddException1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.Common.DataTableMappingCollectionTest.AddRange" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Data.Common.DataTableMappingCollectionTest.Clear" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.Common.DataTableMappingCollectionTest.Contains" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Data.Common.DataTableMappingCollectionTest.CopyTo" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="MonoTests.System.Data.Common.DataTableMappingCollectionTest.Equals" executed="True" success="True" time="0.001" asserts="13" />
                          <test-case name="MonoTests.System.Data.Common.DataTableMappingCollectionTest.GetByDataSetTable" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Data.Common.DataTableMappingCollectionTest.GetTableMappingBySchemaAction" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Data.Common.DataTableMappingCollectionTest.GetTableMappingBySchemaActionException1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.Common.DataTableMappingCollectionTest.IndexOf" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Data.Common.DataTableMappingCollectionTest.IndexOfDataSetTable" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Data.Common.DataTableMappingCollectionTest.Insert" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Data.Common.DataTableMappingCollectionTest.Remove" executed="False">
                            <reason>
                              <message><![CDATA[This test is invalid; a mapping in a mapcollection must be identical.]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Data.Common.DataTableMappingCollectionTest.RemoveAt" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Data.Common.DataTableMappingCollectionTest.RemoveAtException1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.Common.DataTableMappingCollectionTest.RemoveAtException2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.Common.DataTableMappingCollectionTest.RemoveException1" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Data.Common.DataTableMappingCollectionTest.RemoveException2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.Common.DataTableMappingCollectionTest.ToStringTest" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="DbCommandBuilderTest" success="True" time="0.039" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.Common.DbCommandBuilderTest.CatalogLocation_Value_Invalid" executed="True" success="True" time="0.002" asserts="7" />
                          <test-case name="MonoTests.System.Data.Common.DbCommandBuilderTest.CatalogLocationTest" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.Common.DbCommandBuilderTest.CatalogSeparator" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Data.Common.DbCommandBuilderTest.ConflictOption_Value_Invalid" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Data.Common.DbCommandBuilderTest.ConflictOptionTest" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.Common.DbCommandBuilderTest.QuoteIdentifier" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Data.Common.DbCommandBuilderTest.QuotePrefix" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Data.Common.DbCommandBuilderTest.QuoteSuffix" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Data.Common.DbCommandBuilderTest.SchemaSeparator" executed="True" success="True" time="0.000" asserts="6" />
                        </results>
                      </test-suite>
                      <test-suite name="DbConnectionStringBuilderTest" success="True" time="0.130" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.Add" executed="True" success="True" time="0.010" asserts="10" />
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.Add_Keyword_Invalid" executed="True" success="True" time="0.001" asserts="40" />
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.Add_Keyword_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.AddDuplicateTest" executed="True" success="True" time="0.004" asserts="1" />
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.AppendKeyValuePair1" executed="True" success="True" time="0.006" asserts="35" />
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.AppendKeyValuePair1_Builder_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.AppendKeyValuePair1_Keyword_Empty" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.AppendKeyValuePair1_Keyword_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.AppendKeyValuePair2_Builder_Null" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.AppendKeyValuePair2_Keyword_Empty" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.AppendKeyValuePair2_Keyword_Null" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.AppendKeyValuePair2_UseOdbcRules_False" executed="True" success="True" time="0.006" asserts="91" />
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.AppendKeyValuePair2_UseOdbcRules_True" executed="True" success="True" time="0.013" asserts="177" />
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.Clear" executed="True" success="True" time="0.003" asserts="21" />
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.ConnectionString" executed="True" success="True" time="0.002" asserts="16" />
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.ConnectionString_Value_Empty" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.ContainsKey" executed="True" success="True" time="0.001" asserts="27" />
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.ContainsKey_Keyword_Null" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.EmbeddedChar_ConnectionString_Invalid" executed="True" success="True" time="0.002" asserts="132" />
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.EmbeddedCharTest1" executed="True" success="True" time="0.002" asserts="18" />
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.EmbeddedCharTest2" executed="True" success="True" time="0.002" asserts="24" />
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.EmbeddedCharTest3" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.EmbeddedCharTest4" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.EmbeddedCharTest5" executed="True" success="True" time="0.002" asserts="30" />
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.EmbeddedCharTest6" executed="True" success="True" time="0.016" asserts="558" />
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.EquivalentToTest" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.ICollectionCopyToTest" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.ICTD_GetClassNameTest" executed="True" success="True" time="0.002" asserts="7">
                            <categories>
                              <category name="MobileNotWorking" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.Indexer" executed="True" success="True" time="0.002" asserts="36" />
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.Indexer_Keyword_Invalid" executed="True" success="True" time="0.003" asserts="88" />
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.Indexer_Keyword_NotSupported" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.Indexer_Keyword_Null" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.Indexer_Value_Null" executed="True" success="True" time="0.001" asserts="11" />
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.ItemTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.NegICollectionCopyToTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.Remove" executed="True" success="True" time="0.002" asserts="57" />
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.Remove_Keyword_Null" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.ToStringTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.TryGetValue_Keyword_Null" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Data.Common.DbConnectionStringBuilderTest.TryGetValueTest" executed="True" success="True" time="0.002" asserts="54" />
                        </results>
                      </test-suite>
                      <test-suite name="DbDataAdapterTest" success="True" time="0.035" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.Common.DbDataAdapterTest.AddToBatch" executed="True" success="True" time="0.023" asserts="3" />
                          <test-case name="MonoTests.System.Data.Common.DbDataAdapterTest.ClearBatch" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.Common.DbDataAdapterTest.ExecuteBatch" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.Common.DbDataAdapterTest.GetBatchedParameter" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.Common.DbDataAdapterTest.GetBatchedRecordsAffected" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.Common.DbDataAdapterTest.InitializeBatching" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.Common.DbDataAdapterTest.TerminateBatching" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.Common.DbDataAdapterTest.UpdateBatchSize" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Data.Common.DbDataAdapterTest.UpdateBatchSize_Negative" executed="True" success="True" time="0.001" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="DBDataPermissionAttributeTest" success="True" time="0.012" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionAttributeTest.Action" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionAttributeTest.Action_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionAttributeTest.AllowBlankPassword" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionAttributeTest.Attributes" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionAttributeTest.ConnectionString" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionAttributeTest.Default" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionAttributeTest.KeyRestriction" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionAttributeTest.KeyRestrictionBehavior_All" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionAttributeTest.KeyRestrictionBehavior_Invalid" executed="True" success="True" time="0.001" asserts="7" />
                        </results>
                      </test-suite>
                      <test-suite name="DBDataPermissionTest" success="True" time="0.068" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionTest.Add" executed="True" success="True" time="0.007" asserts="4" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionTest.Add_Differents" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionTest.Add_Duplicates" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionTest.Add_Unrestricted" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionTest.AllowBlankPassword" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionTest.Constructor_DBDataPermission" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionTest.Constructor_DBDataPermission_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionTest.Constructor_DBDataPermissionAttribute" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionTest.Constructor_DBDataPermissionAttribute_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionTest.Constructor_PermissionState_Invalid" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionTest.Constructor_PermissionState_None" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionTest.Constructor_PermissionState_Unrestricted" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionTest.CreateInstance" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionTest.FromXml_NoClass" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionTest.FromXml_NoVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionTest.FromXml_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionTest.FromXml_WrongClass" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionTest.FromXml_WrongTag" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionTest.FromXml_WrongTagCase" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionTest.FromXml_WrongVersion" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionTest.Intersect" executed="True" success="True" time="0.001" asserts="23" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionTest.Intersect_AllowBlankPassword" executed="True" success="True" time="0.000" asserts="12" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionTest.Intersect_BadPermission" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionTest.Intersect_Null" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionTest.IsSubset" executed="True" success="True" time="0.001" asserts="17" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionTest.IsSubset_Null" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionTest.IsSubsetOf_Allow_EmptyPrevent_KeyRestrictionBehavior" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionTest.IsSubsetOf_AllowBlankPassword" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionTest.IsSubsetOf_AllowPreventDifferent_KeyRestrictionBehavior" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionTest.IsSubsetOf_AllowPreventSame_KeyRestrictionBehavior" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionTest.IsSubsetOf_BadPermission" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionTest.IsSubsetOf_BothEmpty_KeyRestrictionBehavior" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionTest.IsSubsetOf_EmptyAllow_Prevent_KeyRestrictionBehavior" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionTest.Union" executed="True" success="True" time="0.001" asserts="19" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionTest.Union_AllowBlankPassword" executed="True" success="True" time="0.000" asserts="12" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionTest.Union_BadPermission" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.Common.DBDataPermissionTest.Union_Null" executed="True" success="True" time="0.000" asserts="9" />
                        </results>
                      </test-suite>
                      <test-suite name="DbProviderFactoriesConfigurationHandlerTest" success="True" time="0.036" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.Common.DbProviderFactoriesConfigurationHandlerTest.GetConfigTest" executed="True" success="True" time="0.016" asserts="11" />
                          <test-case name="MonoTests.System.Data.Common.DbProviderFactoriesConfigurationHandlerTest.PopulateFactoriesTest" executed="True" success="True" time="0.005" asserts="0" />
                          <test-case name="MonoTests.System.Data.Common.DbProviderFactoriesConfigurationHandlerTest.PopulateTest" executed="True" success="True" time="0.003" asserts="9" />
                        </results>
                      </test-suite>
                      <test-suite name="DbTransactionTest" success="True" time="0.012" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.Common.DbTransactionTest.DisposeTest" executed="True" success="True" time="0.001" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite name="SqlConnectionStringBuilderTest" success="True" time="0.027" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.Common.SqlConnectionStringBuilderTest.DefaultValuestTest" executed="True" success="True" time="0.007" asserts="1" />
                          <test-case name="MonoTests.System.Data.Common.SqlConnectionStringBuilderTest.DefaultValuestTest2" executed="True" success="True" time="0.003" asserts="1" />
                          <test-case name="MonoTests.System.Data.Common.SqlConnectionStringBuilderTest.InvalidKeyTest" executed="True" success="True" time="0.003" asserts="0" />
                          <test-case name="MonoTests.System.Data.Common.SqlConnectionStringBuilderTest.ItemTest" executed="True" success="True" time="0.009" asserts="1" />
                          <test-case name="MonoTests.System.Data.Common.SqlConnectionStringBuilderTest.PropertiesTest" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Data.Common.SqlConnectionStringBuilderTest.RemoveTest" executed="True" success="True" time="0.001" asserts="3" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="ConstraintCollectionTest" success="True" time="0.048" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest.Add" executed="True" success="True" time="0.004" asserts="1" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest.AddExceptions" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest.AddFkException1" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest.AddFkException2" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest.AddRange" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest.AddRemoveTest" executed="True" success="True" time="0.002" asserts="7" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest.AddUniqueExceptions" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest.CanRemove" executed="False">
                        <reason>
                          <message><![CDATA[This never works on MS.NET (and it should not)]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest.Clear" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest.CollectionChanged" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest.Contains" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest.Indexer" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest.IndexerFailures" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest.IndexOf" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest.RemoveExceptions" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest.TestAddRange2" executed="True" success="True" time="0.002" asserts="5">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                    </results>
                  </test-suite>
                  <test-suite name="ConstraintCollectionTest2" success="True" time="0.080" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest2.add_CollectionChanged" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest2.Add_Constraint" executed="True" success="True" time="0.009" asserts="4" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest2.Add_Constraint_Column_Column" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest2.Add_ConstraintFirst_RelationNext" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest2.Add_RelationFirst_ConstraintNext" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest2.Add_SDB1" executed="True" success="True" time="0.002" asserts="2" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest2.Add_SDB2" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest2.Add_SDB3" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest2.Add_SDB4" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest2.AddRange_C1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest2.AddRange_C2" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest2.AddRange_C3" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest2.AddRange_C4" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest2.CanRemove_ChildForeign" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest2.CanRemove_ParentAndChildForeign" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest2.CanRemove_ParentForeign" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest2.Clear_Foreign" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest2.Clear_Unique" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest2.CollectionChanged" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest2.Contains_ByName" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest2.CopyTo" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest2.Count" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest2.GetEnumerator" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest2.IndexOf" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest2.IndexOf_ByName" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest2.IndexOf_SameColumns" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest2.IsReadOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest2.IsSynchronized" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest2.Item" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest2.Remove" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest2.Remove_ByNameCollectionChangedEvent" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest2.Remove_ByNameSimple" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest2.Remove_ByNameWithAdd" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest2.Remove_CheckUnique" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest2.Remove_CollectionChangedEvent" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest2.Remove_Constraint" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest2.RemoveAt_Integer" executed="True" success="True" time="0.003" asserts="4" />
                      <test-case name="MonoTests.System.Data.ConstraintCollectionTest2.RemoveTest" executed="True" success="True" time="0.001" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite name="ConstraintTest" success="True" time="0.002" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Data.ConstraintTest.GetExtendedProperties" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.ConstraintTest.SetConstraintNameDuplicateException" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.ConstraintTest.SetConstraintNameNullOrEmptyExceptions" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Data.ConstraintTest.ToStringTest" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="DataColumnCollectionTest" success="True" time="0.064" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest.Add" executed="True" success="True" time="0.011" asserts="110" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest.Add3_ColumnName_Empty" executed="True" success="True" time="0.004" asserts="12" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest.Add3_ColumnName_Null" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest.AddExceptions" executed="True" success="True" time="0.004" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest.AddRange" executed="True" success="True" time="0.003" asserts="44" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest.AddValidationExceptions" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest.CanRemove" executed="True" success="True" time="0.008" asserts="6" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest.CaseSensitiveIndexOfTest" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest.Clear" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest.Clear_ExpressionColumn" executed="True" success="True" time="0.003" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest.Contains" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest.CopyTo" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest.Equals" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest.IndexOf" executed="True" success="True" time="0.002" asserts="6" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest.Remove" executed="True" success="True" time="0.003" asserts="13" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest.Remove_Dep_Rel_Col" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest.ToStringTest" executed="True" success="True" time="0.001" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="DataColumnCollectionTest2" success="True" time="0.089" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest2.Add" executed="True" success="True" time="0.007" asserts="31" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest2.Add_DataColumn1" executed="True" success="True" time="0.002" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest2.Add_DataColumn2" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest2.Add_DataColumn3" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest2.Add_String1" executed="True" success="True" time="0.003" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest2.Add_String2" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest2.AddRange_DataColumn1" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest2.AddRange_DataColumn2" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest2.Clear1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest2.Clear2" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest2.Clear3" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest2.Count" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest2.DataColumnCollection_AddRange_DataColumn3" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest2.GetEnumerator" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest2.Indexer1" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest2.Indexer1_Index_Negative" executed="True" success="True" time="0.003" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest2.Indexer1_Index_Overflow" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest2.Indexer2" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest2.Indexer2_Name_Empty" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest2.Indexer2_Name_Null" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest2.Remove" executed="True" success="True" time="0.002" asserts="12" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest2.RemoveAt_Integer" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest2.Test_Indexes" executed="True" success="True" time="0.011" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest2.TestAdd_ByTableName" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest2.TestAdd_CollectionChanged" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest2.TestCanRemove_ByDataColumn" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest2.TestCanRemove_Expression" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest2.TestCanRemove_ForigenConstraint" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest2.TestCanRemove_ParentRelations" executed="True" success="True" time="0.002" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest2.TestContains_ByColumnName" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest2.TestIndexOf_ByColumnName" executed="True" success="True" time="0.000" asserts="8" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest2.TestIndexOf_ByDataColumn" executed="True" success="True" time="0.002" asserts="8" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest2.TestRemove_ByDataColumn" executed="True" success="True" time="0.003" asserts="12" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest2.TestRemove_CollectionChanged" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataColumnCollectionTest2.TestSetName_CollectionChanged" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="DataColumnTest" success="True" time="0.177" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Data.DataColumnTest.AdditionToConstraintCollectionTest" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataColumnTest.Aggregation_CheckIfChangesDynamically" executed="True" success="True" time="0.014" asserts="14" />
                      <test-case name="MonoTests.System.Data.DataColumnTest.Aggregation_CheckIfChangesDynamically_ChildTable" executed="True" success="True" time="0.004" asserts="14" />
                      <test-case name="MonoTests.System.Data.DataColumnTest.Aggregation_TestForSyntaxErrors" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataColumnTest.AllowDBNull" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataColumnTest.AllowDBNull1" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataColumnTest.AutoIncrement" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataColumnTest.AutoIncrementExceptions" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataColumnTest.B565616_NonIConvertibleTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataColumnTest.B623451_SetOrdinalTest" executed="True" success="True" time="0.001" asserts="9" />
                      <test-case name="MonoTests.System.Data.DataColumnTest.CalcStatisticalFunction_SingleElement" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataColumnTest.Caption" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataColumnTest.ChangeTypeAfterSettingDefaultValue" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataColumnTest.CheckValuesAfterRemovedFromCollection" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Data.DataColumnTest.Constructor3_DataType_Null" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Data.DataColumnTest.Ctor" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataColumnTest.DateTime_DataType_Invalid" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Data.DataColumnTest.DateTimeMode_Invalid" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Data.DataColumnTest.DateTimeMode_Valid" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataColumnTest.Defaults1" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Data.DataColumnTest.Defaults2" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Data.DataColumnTest.Defaults3" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataColumnTest.DefaultValue" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataColumnTest.ExpressionAggregates" executed="True" success="True" time="0.039" asserts="14" />
                      <test-case name="MonoTests.System.Data.DataColumnTest.ExpressionColumns_CheckConversions" executed="False">
                        <reason>
                          <message><![CDATA[passes in ms.net but looks more like a bug in ms.net]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Data.DataColumnTest.ExpressionFunctions" executed="True" success="True" time="0.005" asserts="10" />
                      <test-case name="MonoTests.System.Data.DataColumnTest.ExpressionOperator" executed="True" success="True" time="0.005" asserts="21" />
                      <test-case name="MonoTests.System.Data.DataColumnTest.ExpressionSubstringlimits" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataColumnTest.ForColumnNameException" executed="True" success="True" time="0.003" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataColumnTest.SetDataType" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataColumnTest.SetMaxLengthException" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataColumnTest.SetMaxLengthNegativeValue" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataColumnTest.Xamarin665" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="DataColumnTest2" success="True" time="0.143" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Data.DataColumnTest2.AllowDBNull" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataColumnTest2.AutoIncrement" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataColumnTest2.AutoIncrementSeed" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataColumnTest2.AutoIncrementStep" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataColumnTest2.bug672113_MulpleColConstraint" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataColumnTest2.Caption" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataColumnTest2.ColumnName" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataColumnTest2.ctor" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataColumnTest2.ctor_ByColumnName" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataColumnTest2.ctor_ByColumnNameType" executed="True" success="True" time="0.001" asserts="32" />
                      <test-case name="MonoTests.System.Data.DataColumnTest2.ctor_ByColumnNameTypeExpression" executed="True" success="True" time="0.003" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataColumnTest2.ctor_ByColumnNameTypeExpressionMappingType" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Data.DataColumnTest2.DataType" executed="True" success="True" time="0.001" asserts="17" />
                      <test-case name="MonoTests.System.Data.DataColumnTest2.DateTimeMode_DataType" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataColumnTest2.DateTimeMode_InvalidValues" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataColumnTest2.DateTimeMode_RowsAdded" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataColumnTest2.Equals" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataColumnTest2.Expression" executed="True" success="True" time="0.002" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataColumnTest2.Expression_Aggregate" executed="True" success="True" time="0.010" asserts="6" />
                      <test-case name="MonoTests.System.Data.DataColumnTest2.Expression_AggregateRelation" executed="True" success="True" time="0.005" asserts="18" />
                      <test-case name="MonoTests.System.Data.DataColumnTest2.Expression_Exceptions" executed="True" success="True" time="0.003" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataColumnTest2.Expression_IIF" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.Data.DataColumnTest2.Expression_ISNULL" executed="True" success="True" time="0.003" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataColumnTest2.Expression_Simple" executed="True" success="True" time="0.003" asserts="6" />
                      <test-case name="MonoTests.System.Data.DataColumnTest2.ExtendedProperties" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataColumnTest2.MaxLength" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataColumnTest2.Namespace" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataColumnTest2.ordinal" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataColumnTest2.Prefix" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataColumnTest2.ReadOnly" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataColumnTest2.SetOrdinalTest" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Data.DataColumnTest2.Table" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataColumnTest2.TestGetHashCode" executed="True" success="True" time="0.000" asserts="10" />
                      <test-case name="MonoTests.System.Data.DataColumnTest2.TestGetType" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataColumnTest2.TestToString" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataColumnTest2.Unique" executed="True" success="True" time="0.002" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataColumnTest2.Unique_PrimaryKey" executed="True" success="True" time="0.001" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="DataRelationCollectionTest" success="True" time="0.048" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Data.DataRelationCollectionTest.Add" executed="True" success="True" time="0.005" asserts="5" />
                      <test-case name="MonoTests.System.Data.DataRelationCollectionTest.AddException1" executed="False">
                        <reason>
                          <message><![CDATA[It does not pass under MS.NET]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Data.DataRelationCollectionTest.AddException2" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataRelationCollectionTest.AddException3" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataRelationCollectionTest.AddRange" executed="True" success="True" time="0.002" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataRelationCollectionTest.CanRemove" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataRelationCollectionTest.Clear" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataRelationCollectionTest.Contains" executed="True" success="True" time="0.002" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataRelationCollectionTest.CopyTo" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Data.DataRelationCollectionTest.Equals" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Data.DataRelationCollectionTest.IndexOf" executed="True" success="True" time="0.004" asserts="8" />
                      <test-case name="MonoTests.System.Data.DataRelationCollectionTest.Remove" executed="True" success="True" time="0.003" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataRelationCollectionTest.RemoveAt" executed="True" success="True" time="0.003" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="DataRelationCollectionTest2" success="True" time="0.096" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Data.DataRelationCollectionTest2.Add_ByDataColumns" executed="True" success="True" time="0.003" asserts="5" />
                      <test-case name="MonoTests.System.Data.DataRelationCollectionTest2.Add_ByNameDataColumns" executed="True" success="True" time="0.003" asserts="8" />
                      <test-case name="MonoTests.System.Data.DataRelationCollectionTest2.Add_ByNameDataColumnsWithConstraint" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Data.DataRelationCollectionTest2.Add_ByNameDataColumnsWithOutConstraint" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Data.DataRelationCollectionTest2.Add_DataColumn1" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Data.DataRelationCollectionTest2.Add_DataColumn2" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataRelationCollectionTest2.Add_DataColumn3" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataRelationCollectionTest2.Add_DataColumn4" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataRelationCollectionTest2.Add_DataColumn5" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataRelationCollectionTest2.AddRange" executed="True" success="True" time="0.003" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataRelationCollectionTest2.CanRemove" executed="True" success="True" time="0.004" asserts="4" />
                      <test-case name="MonoTests.System.Data.DataRelationCollectionTest2.CanRemove_DataRelation" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataRelationCollectionTest2.Clear" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataRelationCollectionTest2.CollectionChanged" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataRelationCollectionTest2.Contains" executed="True" success="True" time="0.002" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataRelationCollectionTest2.CopyTo" executed="True" success="True" time="0.002" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataRelationCollectionTest2.Count" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Data.DataRelationCollectionTest2.GetEnumerator" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataRelationCollectionTest2.IndexOf_ByDataRelation" executed="True" success="True" time="0.004" asserts="4" />
                      <test-case name="MonoTests.System.Data.DataRelationCollectionTest2.IndexOf_ByDataRelationName" executed="True" success="True" time="0.006" asserts="4" />
                      <test-case name="MonoTests.System.Data.DataRelationCollectionTest2.Item" executed="True" success="True" time="0.003" asserts="4" />
                      <test-case name="MonoTests.System.Data.DataRelationCollectionTest2.Remove_DataColumn" executed="True" success="True" time="0.007" asserts="5" />
                      <test-case name="MonoTests.System.Data.DataRelationCollectionTest2.Remove_String" executed="True" success="True" time="0.007" asserts="5" />
                    </results>
                  </test-suite>
                  <test-suite name="DataRelationTest" success="True" time="0.349" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Data.DataRelationTest.ChildRows" executed="True" success="True" time="0.038" asserts="6" />
                      <test-case name="MonoTests.System.Data.DataRelationTest.Constraints" executed="True" success="True" time="0.005" asserts="6" />
                      <test-case name="MonoTests.System.Data.DataRelationTest.Creation" executed="True" success="True" time="0.007" asserts="15" />
                      <test-case name="MonoTests.System.Data.DataRelationTest.Creation2" executed="True" success="True" time="0.007" asserts="19" />
                      <test-case name="MonoTests.System.Data.DataRelationTest.Creation3" executed="True" success="True" time="0.005" asserts="17" />
                      <test-case name="MonoTests.System.Data.DataRelationTest.Creation4" executed="True" success="True" time="0.009" asserts="16" />
                      <test-case name="MonoTests.System.Data.DataRelationTest.DataSetRelations" executed="True" success="True" time="0.002" asserts="14" />
                      <test-case name="MonoTests.System.Data.DataRelationTest.Foreign" executed="True" success="True" time="0.006" asserts="5" />
                      <test-case name="MonoTests.System.Data.DataRelationTest.InvalidConstraintException" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataRelationTest.InvalidConstraintException2" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataRelationTest.RelationFromSchema" executed="True" success="True" time="0.237" asserts="46" />
                    </results>
                  </test-suite>
                  <test-suite name="DataRelationTest2" success="True" time="0.076" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Data.DataRelationTest2.bug79233" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataRelationTest2.ChildColumns" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataRelationTest2.ChildKeyConstraint" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataRelationTest2.ChildTable" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataRelationTest2.ctor_ByNameDataColumns" executed="True" success="True" time="0.003" asserts="12" />
                      <test-case name="MonoTests.System.Data.DataRelationTest2.ctor_ByNameDataColumnsArrays" executed="True" success="True" time="0.003" asserts="10" />
                      <test-case name="MonoTests.System.Data.DataRelationTest2.ctor_ByNameDataColumnsArraysCreateConstraints" executed="True" success="True" time="0.004" asserts="12" />
                      <test-case name="MonoTests.System.Data.DataRelationTest2.ctor_ByNameDataColumnsCreateConstraints" executed="True" success="True" time="0.003" asserts="12" />
                      <test-case name="MonoTests.System.Data.DataRelationTest2.DataRelationTest" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataRelationTest2.DataSet" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataRelationTest2.extendedProperties" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataRelationTest2.nested" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataRelationTest2.ParentColumns" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataRelationTest2.ParentKeyConstraint" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataRelationTest2.ParentTable" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataRelationTest2.relationName" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataRelationTest2.ToString" executed="True" success="True" time="0.002" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite name="DataRowCollectionTest" success="True" time="0.107" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest.Add" executed="True" success="True" time="0.011" asserts="17" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest.Add_ByValuesNullTest" executed="True" success="True" time="0.004" asserts="9" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest.AutoIncrement" executed="True" success="True" time="0.004" asserts="10" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest.Clear" executed="True" success="True" time="0.007" asserts="4" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest.Contains" executed="True" success="True" time="0.009" asserts="16" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest.CopyTo" executed="True" success="True" time="0.003" asserts="11" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest.Equals" executed="True" success="True" time="0.004" asserts="7" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest.Find" executed="True" success="True" time="0.007" asserts="10" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest.Find_DoesntThrowWithNullObject" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest.Find_DoesntThrowWithNullObjectInArray" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest.Find2" executed="True" success="True" time="0.004" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest.IndexOf" executed="True" success="True" time="0.004" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest.IndexOfTest" executed="True" success="True" time="0.004" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest.InsertAt" executed="True" success="True" time="0.008" asserts="9" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest.Remove" executed="True" success="True" time="0.004" asserts="11" />
                    </results>
                  </test-suite>
                  <test-suite name="DataRowCollectionTest2" success="True" time="0.043" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest2.CopyTo" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest2.Count" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest2.DataRowCollection_Add_D1" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest2.DataRowCollection_Add_D2" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest2.DataRowCollection_Add_D3" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest2.DataRowCollection_Add_D4" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest2.DataRowCollection_Add_O1" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest2.DataRowCollection_Add_O2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest2.DataRowCollection_Add_O4" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest2.DataRowCollection_Clear1" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest2.DataRowCollection_Clear2" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest2.DataRowCollection_Contains_O1" executed="True" success="True" time="0.010" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest2.DataRowCollection_Contains_O2" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest2.DataRowCollection_Contains_O3" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest2.DataRowCollection_Contains_O4" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest2.DataRowCollection_Find_O1" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest2.DataRowCollection_Find_O2" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest2.DataRowCollection_Find_O3" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest2.DataRowCollection_Find_O4" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest2.DataRowCollection_InsertAt_DI1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest2.DataRowCollection_InsertAt_DI2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest2.DataRowCollection_InsertAt_DI3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest2.DataRowCollection_InsertAt_DI4" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest2.DataRowCollection_Item1" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest2.DataRowCollection_Item2" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest2.FindByKey" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest2.FindByKey_DuringDataLoad" executed="True" success="True" time="0.002" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest2.FindByKey_VerifyOrder" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest2.GetEnumerator" executed="True" success="True" time="0.000" asserts="7" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest2.Remove_ByDataRow" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataRowCollectionTest2.RemoveAt_ByIndex" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="DataRowTest" success="True" time="0.073" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Data.DataRowTest.AutoIncrementColumnIntegrity" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataRowTest.AutoIncrementInItemArray" executed="True" success="True" time="0.003" asserts="14" />
                      <test-case name="MonoTests.System.Data.DataRowTest.ChildRowTest" executed="True" success="True" time="0.002" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataRowTest.ChildRowTest2" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataRowTest.DefaultValueInItemArray" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Data.DataRowTest.DeleteRowTest" executed="True" success="True" time="0.003" asserts="5" />
                      <test-case name="MonoTests.System.Data.DataRowTest.DetachedRowItemException" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataRowTest.EditModeTest" executed="True" success="True" time="0.003" asserts="32" />
                      <test-case name="MonoTests.System.Data.DataRowTest.EnforceConstraint" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataRowTest.NullInItemArray" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.Data.DataRowTest.ParentRowTest" executed="True" success="True" time="0.002" asserts="6" />
                      <test-case name="MonoTests.System.Data.DataRowTest.ParentRowTest2" executed="True" success="True" time="0.002" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataRowTest.SetColumnErrorTest" executed="True" success="True" time="0.010" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataRowTest.SetParent_missing_ParentRow" executed="True" success="True" time="0.004" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataRowTest.SetParentRow_DataInheritance" executed="True" success="True" time="0.005" asserts="8" />
                      <test-case name="MonoTests.System.Data.DataRowTest.SetParentRow_Null" executed="True" success="True" time="0.004" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataRowTest.SetParentRow_with_Relation" executed="True" success="True" time="0.006" asserts="10" />
                    </results>
                  </test-suite>
                  <test-suite name="DataRowTest2" success="True" time="0.278" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Data.DataRowTest2.AcceptChanges" executed="True" success="True" time="0.007" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.BeginEdit" executed="True" success="True" time="0.003" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.bug78885" executed="True" success="True" time="0.014" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.CancelEdit" executed="True" success="True" time="0.004" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.ClearErrors" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.DataRow_RowError" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.DataRow_RowError2" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.DataRow_RowError3" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.DataRowExpressionDefaultValueTest" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.Delete" executed="True" success="True" time="0.006" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.EndEdit" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.Equals" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.GetChildRows_ByDataRealtion" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.GetChildRows_ByDataRealtionDataRowVersion" executed="True" success="True" time="0.005" asserts="4" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.GetChildRows_ByName" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.GetChildRows_ByNameDataRowVersion" executed="True" success="True" time="0.002" asserts="4" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.GetChildRows_DataRelation" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.GetColumnError_ByIndex" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.GetColumnError_ByName" executed="True" success="True" time="0.002" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.GetColumnsInError" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.GetHashCode" executed="True" success="True" time="0.000" asserts="10" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.GetParentRow_ByDataRelation" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.GetParentRow_ByDataRelationDataRowVersion" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.GetParentRow_ByName" executed="True" success="True" time="0.008" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.GetParentRow_ByNameDataRowVersion" executed="True" success="True" time="0.010" asserts="4" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.GetParentRows_ByDataRelation" executed="True" success="True" time="0.004" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.GetParentRows_ByName" executed="True" success="True" time="0.004" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.GetParentRows_ByNameDataRowVersion" executed="True" success="True" time="0.005" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.GetParentRows_DataRelation_DataRowVersion" executed="True" success="True" time="0.007" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.GetType" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.HasErrors" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.HasVersion_ByDataRowVersion" executed="True" success="True" time="0.012" asserts="36" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.Indexer1" executed="True" success="True" time="0.005" asserts="46" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.Indexer1_Column_NotInTable" executed="True" success="True" time="0.002" asserts="15" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.Indexer1_Column_Null" executed="True" success="True" time="0.001" asserts="9" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.Indexer1_Value_Null" executed="True" success="True" time="0.008" asserts="107" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.Indexer2" executed="True" success="True" time="0.002" asserts="14" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.Indexer2_Value_Null" executed="True" success="True" time="0.002" asserts="29" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.Indexer3" executed="True" success="True" time="0.001" asserts="14" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.Indexer3_ColumnName_Empty" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.Indexer3_ColumnName_Null" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.Indexer3_Value_Null" executed="True" success="True" time="0.002" asserts="25" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.Indexer4" executed="True" success="True" time="0.004" asserts="64" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.Indexer4_Column_NotInTable" executed="True" success="True" time="0.002" asserts="15" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.Indexer4_Column_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.Indexer4_Version_Invalid" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.Indexer4_Version_NotFound" executed="True" success="True" time="0.009" asserts="8" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.IsNull_ByDataColumn" executed="True" success="True" time="0.007" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.IsNull_ByDataColumnDataRowVersion" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.IsNull_ByIndex" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.IsNull_ByName" executed="True" success="True" time="0.029" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.Item" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.ItemArray" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.ItemArray_NewTable" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.RejectChanges" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.RowError" executed="True" success="True" time="0.002" asserts="9" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.RowState" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.SetAdded_test" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.setAdded_testRollback" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.SetColumnError_ByColumnNameError" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.SetColumnError_ByDataColumnError" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.SetColumnError_ByIndexError" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.SetModified_test" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.setModified_testRollback" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.SetParentRow_ByDataRow" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.SetParentRow_ByDataRowDataRelation" executed="True" success="True" time="0.004" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.Table" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.test" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.testMore" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.TestRowErrors" executed="True" success="True" time="0.001" asserts="10" />
                      <test-case name="MonoTests.System.Data.DataRowTest2.ToString" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="DataRowViewTest" success="True" time="0.013" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Data.DataRowViewTest.CreateChildViewNonExistentName" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataRowViewTest.CreateChildViewNullDataRelationArg" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataRowViewTest.CreateChildViewNullStringArg" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataRowViewTest.CreateChildViewSimple" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataRowViewTest.IsEdit" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataRowViewTest.Item" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataRowViewTest.ItemException" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataRowViewTest.RowVersion1" executed="True" success="True" time="0.002" asserts="8" />
                    </results>
                  </test-suite>
                  <test-suite name="DataRowViewTest2" success="True" time="0.029" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Data.DataRowViewTest2.BeginEdit" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Data.DataRowViewTest2.CancelEdit" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Data.DataRowViewTest2.CreateChildView_ByDataRelation" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Data.DataRowViewTest2.CreateChildView_ByName" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Data.DataRowViewTest2.DataView" executed="True" success="True" time="0.002" asserts="4" />
                      <test-case name="MonoTests.System.Data.DataRowViewTest2.Delete" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataRowViewTest2.EndEdit" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Data.DataRowViewTest2.Equals" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataRowViewTest2.IsEdit" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Data.DataRowViewTest2.IsNew" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataRowViewTest2.Item" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataRowViewTest2.Item_Property" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataRowViewTest2.Row" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataRowViewTest2.RowVersion" executed="True" success="True" time="0.001" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="DataSetInferXmlSchemaTest" success="True" time="0.065" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Data.DataSetInferXmlSchemaTest.ComplexElementAttributeTable1" executed="True" success="True" time="0.005" asserts="303" />
                      <test-case name="MonoTests.System.Data.DataSetInferXmlSchemaTest.ConflictAttributeDataTable" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataSetInferXmlSchemaTest.ConflictColumnTable" executed="True" success="True" time="0.003" asserts="83" />
                      <test-case name="MonoTests.System.Data.DataSetInferXmlSchemaTest.ConflictColumnTableAttribute" executed="True" success="True" time="0.001" asserts="99" />
                      <test-case name="MonoTests.System.Data.DataSetInferXmlSchemaTest.ConflictExistingPrimaryKey" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataSetInferXmlSchemaTest.ConflictSimpleComplexColumns" executed="True" success="True" time="0.005" asserts="85" />
                      <test-case name="MonoTests.System.Data.DataSetInferXmlSchemaTest.ContainsSchema" executed="True" success="True" time="0.027" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataSetInferXmlSchemaTest.IgnoredNamespaces" executed="True" success="True" time="0.001" asserts="20" />
                      <test-case name="MonoTests.System.Data.DataSetInferXmlSchemaTest.MixedContent" executed="True" success="True" time="0.000" asserts="26" />
                      <test-case name="MonoTests.System.Data.DataSetInferXmlSchemaTest.NullFileName" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataSetInferXmlSchemaTest.SignificantWhitespaceIgnored" executed="True" success="True" time="0.005" asserts="27" />
                      <test-case name="MonoTests.System.Data.DataSetInferXmlSchemaTest.SignificantWhitespaceIgnored2" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataSetInferXmlSchemaTest.SimpleDataSet" executed="True" success="True" time="0.000" asserts="58" />
                      <test-case name="MonoTests.System.Data.DataSetInferXmlSchemaTest.SimpleElementTable" executed="True" success="True" time="0.000" asserts="58" />
                      <test-case name="MonoTests.System.Data.DataSetInferXmlSchemaTest.SingleChild" executed="True" success="True" time="0.000" asserts="52" />
                      <test-case name="MonoTests.System.Data.DataSetInferXmlSchemaTest.SingleElement" executed="True" success="True" time="0.001" asserts="15" />
                      <test-case name="MonoTests.System.Data.DataSetInferXmlSchemaTest.SingleElementWithAttribute" executed="True" success="True" time="0.006" asserts="26" />
                      <test-case name="MonoTests.System.Data.DataSetInferXmlSchemaTest.SingleElementWithTwoAttribute" executed="True" success="True" time="0.001" asserts="42" />
                      <test-case name="MonoTests.System.Data.DataSetInferXmlSchemaTest.TwoElementTable" executed="True" success="True" time="0.001" asserts="81" />
                    </results>
                  </test-suite>
                  <test-suite name="DataSetReadXmlSchemaTest" success="True" time="0.481" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Data.DataSetReadXmlSchemaTest.AutoIncrementStep" executed="True" success="True" time="0.006" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlSchemaTest.ElementHasIdentityConstraint" executed="True" success="True" time="0.018" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlSchemaTest.IsDataSetAndTypeIgnored" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlSchemaTest.IsDataSetOnLocalElementIgnored" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlSchemaTest.LocaleOnRootWithoutIsDataSet" executed="True" success="True" time="0.001" asserts="44" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlSchemaTest.NestedReferenceNotAllowed" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlSchemaTest.PrefixedTargetNS" executed="True" success="True" time="0.003" asserts="26" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlSchemaTest.ReadAnnotatedRelations_MultipleColumns" executed="True" success="True" time="0.147" asserts="16" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlSchemaTest.ReadConstraints" executed="True" success="True" time="0.016" asserts="4" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlSchemaTest.ReadTest1" executed="True" success="True" time="0.004" asserts="74" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlSchemaTest.RepeatableSimpleElement" executed="True" success="True" time="0.036" asserts="73" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlSchemaTest.SimpleTypeComponentsIgnored" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlSchemaTest.SingleElementTreatmentDifference" executed="True" success="True" time="0.003" asserts="103" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlSchemaTest.SuspiciousDataSetElement" executed="True" success="True" time="0.001" asserts="10" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlSchemaTest.TestAnnotatedRelation1" executed="True" success="True" time="0.025" asserts="57" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlSchemaTest.TestAnnotatedRelation2" executed="True" success="True" time="0.065" asserts="57" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlSchemaTest.TestMoreThanOneRepeatableColumns" executed="True" success="True" time="0.010" asserts="120" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlSchemaTest.TestSampleFileComplexTables" executed="True" success="True" time="0.022" asserts="130" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlSchemaTest.TestSampleFileComplexTables3" executed="True" success="True" time="0.025" asserts="42" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlSchemaTest.TestSampleFileNoTables" executed="True" success="True" time="0.036" asserts="12" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlSchemaTest.TestSampleFileSimpleTables" executed="True" success="True" time="0.007" asserts="82" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlSchemaTest.TestSampleFileValueConstraints" executed="True" success="True" time="0.020" asserts="119">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Data.DataSetReadXmlSchemaTest.TestSampleFileXPath" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlSchemaTest.UnusedComplexTypesIgnored" executed="True" success="True" time="0.000" asserts="10" />
                    </results>
                  </test-suite>
                  <test-suite name="DataSetReadXmlTest" success="True" time="0.071" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Data.DataSetReadXmlTest.ColumnOrder" executed="True" success="True" time="0.001" asserts="11" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlTest.DataSetExtendedPropertiesTest" executed="True" success="True" time="0.021" asserts="4" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlTest.IgnoreSchemaShouldFillData" executed="True" success="True" time="0.002" asserts="6" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlTest.NameConflictDSAndTable" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlTest.ReadComplexElementDocument" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlTest.ReadSimpleAuto" executed="True" success="True" time="0.002" asserts="53" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlTest.ReadSimpleDiffgram" executed="True" success="True" time="0.001" asserts="32" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlTest.ReadSimpleFragment" executed="True" success="True" time="0.001" asserts="32" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlTest.ReadSimpleIgnoreSchema" executed="True" success="True" time="0.001" asserts="32" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlTest.ReadSimpleInferSchema" executed="True" success="True" time="0.001" asserts="53" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlTest.ReadSimpleReadSchema" executed="True" success="True" time="0.001" asserts="32" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlTest.SequentialRead1" executed="True" success="True" time="0.000" asserts="15" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlTest.SequentialRead2" executed="True" success="True" time="0.001" asserts="37" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlTest.TestSimpleDiffPlusContentAll" executed="True" success="True" time="0.002" asserts="24" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlTest.TestSimpleDiffXmlAll" executed="True" success="True" time="0.001" asserts="24" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlTest.TestSimpleSchemaPlusContentAll" executed="True" success="True" time="0.002" asserts="45" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlTest.TestSimpleSchemaXmlAll" executed="True" success="True" time="0.002" asserts="45" />
                      <test-case name="MonoTests.System.Data.DataSetReadXmlTest.XmlSpace" executed="True" success="True" time="0.002" asserts="9" />
                    </results>
                  </test-suite>
                  <test-suite name="DataSetTest" success="True" time="0.229" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Data.DataSetTest.Bug420862" executed="True" success="True" time="0.005" asserts="4" />
                      <test-case name="MonoTests.System.Data.DataSetTest.CloneCopy" executed="True" success="True" time="0.008" asserts="26" />
                      <test-case name="MonoTests.System.Data.DataSetTest.CloneCopy_TestForeignKeyConstraints" executed="True" success="True" time="0.002" asserts="18" />
                      <test-case name="MonoTests.System.Data.DataSetTest.CloneCopy2" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataSetTest.CloneSubClassTest" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataSetTest.CreateDataReader1" executed="True" success="True" time="0.005" asserts="18" />
                      <test-case name="MonoTests.System.Data.DataSetTest.CreateDataReader2" executed="True" success="True" time="0.001" asserts="18" />
                      <test-case name="MonoTests.System.Data.DataSetTest.CreateDataReader3" executed="True" success="True" time="0.001" asserts="18" />
                      <test-case name="MonoTests.System.Data.DataSetTest.CreateDataReaderNoTable" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataSetTest.DataSetClearTest" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataSetTest.DeserializeDataSet" executed="True" success="True" time="0.020" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataSetTest.DeserializeModifiedDataSet" executed="True" success="True" time="0.012" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataSetTest.IgnoreColumnEmptyNamespace" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataSetTest.Load_Basic" executed="True" success="True" time="0.007" asserts="25" />
                      <test-case name="MonoTests.System.Data.DataSetTest.Load_StringsAsc" executed="True" success="True" time="0.001" asserts="25" />
                      <test-case name="MonoTests.System.Data.DataSetTest.Load_StringsDesc" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Data.DataSetTest.Load_StringsNew" executed="True" success="True" time="0.002" asserts="13" />
                      <test-case name="MonoTests.System.Data.DataSetTest.Load_StringsNewMerge" executed="True" success="True" time="0.002" asserts="10" />
                      <test-case name="MonoTests.System.Data.DataSetTest.Load_TableConflictF" executed="True" success="True" time="0.002" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataSetTest.Load_TableConflictT" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Data.DataSetTest.Load_TableUnknown" executed="True" success="True" time="0.006" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataSetTest.OwnWriteXmlSchema" executed="True" success="True" time="0.010" asserts="44" />
                      <test-case name="MonoTests.System.Data.DataSetTest.Properties" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Data.DataSetTest.ReadDiff" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataSetTest.ReadWriteXml" executed="True" success="True" time="0.057" asserts="12" />
                      <test-case name="MonoTests.System.Data.DataSetTest.ReadWriteXml2" executed="True" success="True" time="0.003" asserts="18" />
                      <test-case name="MonoTests.System.Data.DataSetTest.ReadWriteXml3" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataSetTest.ReadWriteXmlDiffGram" executed="True" success="True" time="0.003" asserts="16" />
                      <test-case name="MonoTests.System.Data.DataSetTest.ReadWriteXmlSchema" executed="False">
                        <reason>
                          <message><![CDATA[MS behavior is far from consistent to be regarded as a reference implementation.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Data.DataSetTest.ReadWriteXmlSchemaIgnoreSchema" executed="False">
                        <reason>
                          <message><![CDATA[MS behavior is far from consistent to be regarded as a reference implementation.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Data.DataSetTest.ReadXmlSchema" executed="True" success="True" time="0.017" asserts="68" />
                      <test-case name="MonoTests.System.Data.DataSetTest.ReflectTypedDataSet" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataSetTest.RuleTest" executed="True" success="True" time="0.002" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataSetTest.SerializeDataSet" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataSetTest.SerializeDataSet2" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataSetTest.WriteNestedTableXml" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataSetTest.WriteXmlEscapeName" executed="True" success="True" time="0.004" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataSetTest.WriteXmlExtendedProperties" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataSetTest.WriteXmlModeSchema" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataSetTest.WriteXmlModeSchema1" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataSetTest.WriteXmlSchema" executed="True" success="True" time="0.002" asserts="17" />
                      <test-case name="MonoTests.System.Data.DataSetTest.WriteXmlSchema2" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataSetTest.WriteXmlSchema3" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataSetTest.WriteXmlSchema4" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataSetTest.WriteXmlSchema5" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataSetTest.WriteXmlSchema6" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataSetTest.WriteXmlSchema7" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataSetTest.WriteXmlToStream" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataSetTest.WtiteXmlEncodedXml" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="DataSetTypedDataSetTest" success="True" time="0.101" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Data.DataSetTypedDataSetTest.TypedDataSet" executed="True" success="True" time="0.100" asserts="31" />
                    </results>
                  </test-suite>
                  <test-suite name="DataTableCollectionTest" success="True" time="0.034" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Data.DataTableCollectionTest.Add" executed="True" success="True" time="0.003" asserts="11" />
                      <test-case name="MonoTests.System.Data.DataTableCollectionTest.AddException1" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataTableCollectionTest.AddException2" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataTableCollectionTest.AddException3" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataTableCollectionTest.AddException4" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataTableCollectionTest.AddRange" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Data.DataTableCollectionTest.CanRemove" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataTableCollectionTest.Clear" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataTableCollectionTest.Contains" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataTableCollectionTest.CopyTo" executed="True" success="True" time="0.001" asserts="11" />
                      <test-case name="MonoTests.System.Data.DataTableCollectionTest.Count" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataTableCollectionTest.Equals" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Data.DataTableCollectionTest.IndexOf" executed="True" success="True" time="0.005" asserts="8" />
                      <test-case name="MonoTests.System.Data.DataTableCollectionTest.Remove" executed="True" success="True" time="0.002" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataTableCollectionTest.RemoveAt" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataTableCollectionTest.TableDataSetNamespaces" executed="True" success="True" time="0.001" asserts="13" />
                      <test-case name="MonoTests.System.Data.DataTableCollectionTest.ToStringTest" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="DataTableReaderTest" success="True" time="0.082" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Data.DataTableReaderTest.AccessAfterClosedTest" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataTableReaderTest.AccessBeforeReadTest" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataTableReaderTest.AddAtPointTest" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataTableReaderTest.AddBeforePointTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataTableReaderTest.ClearTest" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataTableReaderTest.CloseTest" executed="True" success="True" time="0.009" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataTableReaderTest.CtorTest" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataTableReaderTest.DeleteCurrentAndAcceptChangesTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataTableReaderTest.DeleteFirstCurrentAndAcceptChangesTest" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataTableReaderTest.DeleteLastAndAcceptChangesTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataTableReaderTest.DeletePreviousAndAcceptChangesTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataTableReaderTest.DontSeeTheEarlierRowsTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataTableReaderTest.EnumeratorTest" executed="True" success="True" time="0.003" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataTableReaderTest.GetCharsTest" executed="True" success="True" time="0.001" asserts="9" />
                      <test-case name="MonoTests.System.Data.DataTableReaderTest.GetNameTest" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataTableReaderTest.GetOrdinalTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataTableReaderTest.GetProviderSpecificTests" executed="True" success="True" time="0.007" asserts="18" />
                      <test-case name="MonoTests.System.Data.DataTableReaderTest.GetTest" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataTableReaderTest.IgnoreDeletedRowsDynamicTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataTableReaderTest.InvalidIndexTest" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataTableReaderTest.MultipleDeleteTest" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataTableReaderTest.MultipleResultSetsTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataTableReaderTest.NoRowsTest" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataTableReaderTest.NoTablesTest" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataTableReaderTest.ReadAfterClosedTest" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataTableReaderTest.RowInAccessibleTest" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataTableReaderTest.SchemaTest" executed="True" success="True" time="0.005" asserts="4" />
                      <test-case name="MonoTests.System.Data.DataTableReaderTest.SeeTheModifiedTest" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataTableReaderTest.TestExceptionIfSchemaChanges" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataTableReaderTest.TestSchemaTable" executed="True" success="True" time="0.019" asserts="135" />
                    </results>
                  </test-suite>
                  <test-suite name="DataTableReadWriteXmlTest" success="True" time="0.022" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Data.DataTableReadWriteXmlTest.TestReadXml" executed="True" success="True" time="0.013" asserts="9" />
                      <test-case name="MonoTests.System.Data.DataTableReadWriteXmlTest.TestWriteXml" executed="True" success="True" time="0.007" asserts="21" />
                    </results>
                  </test-suite>
                  <test-suite name="DataTableReadXmlSchemaTest" success="True" time="0.025" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Data.DataTableReadXmlSchemaTest.IsDataSetAndTypeIgnored" executed="True" success="True" time="0.002" asserts="7" />
                      <test-case name="MonoTests.System.Data.DataTableReadXmlSchemaTest.LocaleOnRootWithoutIsDataSet" executed="True" success="True" time="0.001" asserts="40" />
                      <test-case name="MonoTests.System.Data.DataTableReadXmlSchemaTest.NestedReferenceNotAllowed" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataTableReadXmlSchemaTest.PrefixedTargetNS" executed="True" success="True" time="0.001" asserts="23" />
                      <test-case name="MonoTests.System.Data.DataTableReadXmlSchemaTest.ReadConstraints" executed="True" success="True" time="0.002" asserts="4" />
                      <test-case name="MonoTests.System.Data.DataTableReadXmlSchemaTest.SuspiciousDataSetElement" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Data.DataTableReadXmlSchemaTest.TestSampleFileComplexTables3" executed="True" success="True" time="0.001" asserts="39" />
                      <test-case name="MonoTests.System.Data.DataTableReadXmlSchemaTest.TestSampleFileSimpleTables" executed="True" success="True" time="0.002" asserts="82" />
                      <test-case name="MonoTests.System.Data.DataTableReadXmlSchemaTest.TestSampleFileXPath" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataTableReadXmlSchemaTest.UnusedComplexTypesIgnored" executed="True" success="True" time="0.002" asserts="7" />
                    </results>
                  </test-suite>
                  <test-suite name="DataTableTest" success="True" time="1.474" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Data.DataTableTest.AcceptChangesTest" executed="True" success="True" time="0.002" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataTableTest.Changes" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Data.DataTableTest.ClearReset" executed="True" success="True" time="0.002" asserts="12" />
                      <test-case name="MonoTests.System.Data.DataTableTest.ClearTest" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Data.DataTableTest.CloneCopyTest" executed="True" success="True" time="0.005" asserts="28" />
                      <test-case name="MonoTests.System.Data.DataTableTest.CloneExtendedProperties" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataTableTest.CloneExtendedProperties1" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataTableTest.CloneExtendedProperties2" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataTableTest.CloneSubClassTest" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataTableTest.ColumnObjectTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataTableTest.CreateDataReader1" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Data.DataTableTest.CreateDataReader2" executed="True" success="True" time="0.000" asserts="8" />
                      <test-case name="MonoTests.System.Data.DataTableTest.Ctor" executed="True" success="True" time="0.001" asserts="16" />
                      <test-case name="MonoTests.System.Data.DataTableTest.GetErrors" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataTableTest.ImportRowDeletedTest" executed="True" success="True" time="0.001" asserts="9" />
                      <test-case name="MonoTests.System.Data.DataTableTest.ImportRowDetachedTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataTableTest.ImportRowTest" executed="True" success="True" time="0.003" asserts="22" />
                      <test-case name="MonoTests.System.Data.DataTableTest.ImportRowTypeChangeTest" executed="True" success="True" time="0.480" asserts="165" />
                      <test-case name="MonoTests.System.Data.DataTableTest.Load_Basic" executed="True" success="True" time="0.002" asserts="8" />
                      <test-case name="MonoTests.System.Data.DataTableTest.Load_ExtraColsEqualVal" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Data.DataTableTest.Load_ExtraColsNonEqualVal" executed="True" success="True" time="0.001" asserts="11" />
                      <test-case name="MonoTests.System.Data.DataTableTest.Load_Incompatible" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataTableTest.Load_IncompatibleEHandlerF" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataTableTest.Load_IncompatibleEHandlerT" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Data.DataTableTest.Load_MissingColsDefault" executed="True" success="True" time="0.010" asserts="20" />
                      <test-case name="MonoTests.System.Data.DataTableTest.Load_MissingColsNonNullable" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataTableTest.Load_MissingColsNullable" executed="True" success="True" time="0.002" asserts="17" />
                      <test-case name="MonoTests.System.Data.DataTableTest.Load_NoSchema" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Data.DataTableTest.Load_RowStateChangesDefault" executed="True" success="True" time="0.002" asserts="24" />
                      <test-case name="MonoTests.System.Data.DataTableTest.Load_RowStateChangesDefaultDelete" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataTableTest.Load_RowStateOverwriteChanges" executed="True" success="True" time="0.001" asserts="25" />
                      <test-case name="MonoTests.System.Data.DataTableTest.Load_RowStatePreserveChanges" executed="True" success="True" time="0.001" asserts="24" />
                      <test-case name="MonoTests.System.Data.DataTableTest.Load_RowStatePreserveChangesDelete" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataTableTest.Load_RowStateUpsert" executed="True" success="True" time="0.002" asserts="24" />
                      <test-case name="MonoTests.System.Data.DataTableTest.Load_RowStateUpsertAdd" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataTableTest.Load_RowStateUpsertDelete1" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataTableTest.Load_RowStateUpsertDelete2" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataTableTest.Load_RowStateUpsertDuplicateKey1" executed="True" success="True" time="0.002" asserts="15" />
                      <test-case name="MonoTests.System.Data.DataTableTest.Load_RowStateUpsertDuplicateKey2" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataTableTest.Load_RowStateUpsertUnchangedEqualVal" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataTableTest.Load_RowStateUpsertUnpresent" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataTableTest.LoadDataException" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataTableTest.LoadDataRow_LoadOptions" executed="True" success="True" time="0.002" asserts="5" />
                      <test-case name="MonoTests.System.Data.DataTableTest.NewRowAddedTest" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataTableTest.PrimaryKey" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.Data.DataTableTest.PrimaryKey_CheckSetsAllowDBNull" executed="True" success="True" time="0.000" asserts="8" />
                      <test-case name="MonoTests.System.Data.DataTableTest.PrimaryKeyColumnChecksNonNull" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataTableTest.PropertyExceptions" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataTableTest.ReadWriteXmlSchema" executed="False">
                        <reason>
                          <message><![CDATA[MS behavior is far from consistent to be regarded as a reference implementation.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Data.DataTableTest.ReadWriteXmlSchema_2" executed="True" success="True" time="0.003" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataTableTest.ReadWriteXmlSchema_ByFileName" executed="True" success="True" time="0.296" asserts="6" />
                      <test-case name="MonoTests.System.Data.DataTableTest.ReadWriteXmlSchema_IgnoreSchema" executed="False">
                        <reason>
                          <message><![CDATA[MS behavior is far from consistent to be regarded as a reference implementation.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Data.DataTableTest.ReadWriteXmlSchemaExp_NoFileName" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataTableTest.ReadWriteXmlSchemaExp_NoRootElmnt" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataTableTest.ReadWriteXmlSchemaExp_NoTableName" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataTableTest.ReadWriteXmlSchemaExp_TableNameConflict" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataTableTest.ReadXmlSchema" executed="True" success="True" time="0.436" asserts="68" />
                      <test-case name="MonoTests.System.Data.DataTableTest.ReadXmlSchema_2" executed="True" success="True" time="0.003" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataTableTest.ReadXmlSchema_ByStream" executed="True" success="True" time="0.002" asserts="6" />
                      <test-case name="MonoTests.System.Data.DataTableTest.ReadXmlSchema_ByTextReader" executed="True" success="True" time="0.005" asserts="6" />
                      <test-case name="MonoTests.System.Data.DataTableTest.ReadXmlSchema_ByXmlReader" executed="True" success="True" time="0.002" asserts="6" />
                      <test-case name="MonoTests.System.Data.DataTableTest.RowChanging" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Data.DataTableTest.Select" executed="True" success="True" time="0.002" asserts="13" />
                      <test-case name="MonoTests.System.Data.DataTableTest.Select2" executed="True" success="True" time="0.008" asserts="16" />
                      <test-case name="MonoTests.System.Data.DataTableTest.SelectAggregates" executed="True" success="True" time="0.014" asserts="7" />
                      <test-case name="MonoTests.System.Data.DataTableTest.SelectEscaping" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataTableTest.SelectExceptions" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Data.DataTableTest.SelectFunctions" executed="True" success="True" time="0.037" asserts="10" />
                      <test-case name="MonoTests.System.Data.DataTableTest.SelectOperators" executed="True" success="True" time="0.002" asserts="8" />
                      <test-case name="MonoTests.System.Data.DataTableTest.SelectParsing" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Data.DataTableTest.SelectRelations" executed="True" success="True" time="0.003" asserts="7" />
                      <test-case name="MonoTests.System.Data.DataTableTest.SelectRowState" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataTableTest.SelectStringOperators" executed="True" success="True" time="0.012" asserts="19" />
                      <test-case name="MonoTests.System.Data.DataTableTest.Serialize" executed="True" success="True" time="0.004" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataTableTest.SetPrimaryKeyAssertsNonNull" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataTableTest.TableInitializedEventTest1" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataTableTest.TableInitializedEventTest2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataTableTest.TableInitializedEventTest3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataTableTest.TableInitializedEventTest4" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Data.DataTableTest.TestWriteXmlSchema1" executed="True" success="True" time="0.002" asserts="17" />
                      <test-case name="MonoTests.System.Data.DataTableTest.TestWriteXmlSchema2" executed="True" success="True" time="0.002" asserts="21" />
                      <test-case name="MonoTests.System.Data.DataTableTest.TestWriteXmlSchema3" executed="True" success="True" time="0.005" asserts="33" />
                      <test-case name="MonoTests.System.Data.DataTableTest.ToStringTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataTableTest.WriteXmlSchema" executed="True" success="True" time="0.002" asserts="17" />
                      <test-case name="MonoTests.System.Data.DataTableTest.WriteXmlSchema_ConstraintNameWithSpaces" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataTableTest.WriteXmlSchema_ForignKeyConstraint" executed="True" success="True" time="0.007" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataTableTest.WriteXmlSchema_Hierarchy" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataTableTest.WriteXmlSchema_Relations_ForeignKeys" executed="True" success="True" time="0.003" asserts="7" />
                      <test-case name="MonoTests.System.Data.DataTableTest.WriteXmlSchema2" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataTableTest.WriteXmlSchema3" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataTableTest.WriteXmlSchema4" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataTableTest.WriteXmlSchema5" executed="True" success="True" time="0.006" asserts="3" />
                      <test-case name="MonoTests.System.Data.DataTableTest.WriteXmlSchema6" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataTableTest.WriteXmlSchema7" executed="True" success="True" time="0.001" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="DataViewManagerTest" success="True" time="0.008" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Data.DataViewManagerTest.Ctor" executed="True" success="True" time="0.003" asserts="9" />
                      <test-case name="MonoTests.System.Data.DataViewManagerTest.SetIncorrectRootElement" executed="True" success="True" time="0.004" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataViewManagerTest.SetNullDataSet" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataViewManagerTest.SpecifyNonExistentTable" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="DataViewTest" success="True" time="0.067" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Data.DataViewTest.AddNew_1" executed="True" success="True" time="0.006" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataViewTest.AddNew_2" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Data.DataViewTest.AllowNew" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataViewTest.ApplyDefaultSort" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataViewTest.BeginInit" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Data.DataViewTest.BeginInit2" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Data.DataViewTest.Bug18898" executed="True" success="True" time="0.006" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataViewTest.CancelEditAndEvents" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataViewTest.ColumnChangeName" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataViewTest.DataView" executed="True" success="True" time="0.001" asserts="14" />
                      <test-case name="MonoTests.System.Data.DataViewTest.DefaultColumnNameAddListChangedTest" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataViewTest.Find_1" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataViewTest.Find_2" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Data.DataViewTest.Find_3" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataViewTest.FindRowsInconsistentKeyLength" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataViewTest.FindRowsWithoutSort" executed="True" success="True" time="0.005" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataViewTest.GetEnumerator" executed="False">
                        <reason>
                          <message><![CDATA[Test code not implemented]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Data.DataViewTest.ListChangeOnSetItem" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataViewTest.NullTableGetItemPropertiesTest" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataViewTest.RowStateFilter" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataViewTest.RowStateFilter_2" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Data.DataViewTest.SortListChangedTest" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataViewTest.SortTests" executed="True" success="True" time="0.003" asserts="28" />
                      <test-case name="MonoTests.System.Data.DataViewTest.SortTestWeirdColumnName" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataViewTest.TestCount" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataViewTest.TestDelete" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataViewTest.TestDeleteAndCount" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataViewTest.TestDeleteClosed" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataViewTest.TestDeleteNotAllowed" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataViewTest.TestDeleteOutOfBounds" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.DataViewTest.TestFindRows" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataViewTest.TestingEventHandling" executed="True" success="True" time="0.002" asserts="6" />
                      <test-case name="MonoTests.System.Data.DataViewTest.TestSort" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataViewTest.TestValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Data.DataViewTest.ToStringTest" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="DataViewTest_IBindingList" success="True" time="0.010" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Data.DataViewTest_IBindingList.AddNewTest" executed="True" success="True" time="0.001" asserts="11" />
                      <test-case name="MonoTests.System.Data.DataViewTest_IBindingList.FindTest" executed="True" success="True" time="0.002" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataViewTest_IBindingList.PropertyTest" executed="True" success="True" time="0.001" asserts="9" />
                      <test-case name="MonoTests.System.Data.DataViewTest_IBindingList.SortTest" executed="True" success="True" time="0.002" asserts="25" />
                      <test-case name="MonoTests.System.Data.DataViewTest_IBindingList.TestIfCorrectIndexIsUsed" executed="True" success="True" time="0.001" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="DataViewTest_IBindingListView" success="True" time="0.007" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Data.DataViewTest_IBindingListView.FilterTest" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Data.DataViewTest_IBindingListView.ReadOnlyPropTest" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.DataViewTest_IBindingListView.SortDescriptionTest" executed="True" success="True" time="0.002" asserts="19" />
                    </results>
                  </test-suite>
                  <test-suite name="ForeignKeyConstraintTest" success="True" time="0.026" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Data.ForeignKeyConstraintTest.Ctor1" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Data.ForeignKeyConstraintTest.Ctor2" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Data.ForeignKeyConstraintTest.Ctor3" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Data.ForeignKeyConstraintTest.Ctor4" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Data.ForeignKeyConstraintTest.CtorExceptions" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.ForeignKeyConstraintTest.CtorExceptions2" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.ForeignKeyConstraintTest.EqualsAndHashCode" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Data.ForeignKeyConstraintTest.ForeignKey_650402" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.ForeignKeyConstraintTest.KeyBetweenColumns" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Data.ForeignKeyConstraintTest.ModifyParentKeyBeforeAcceptChanges" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Data.ForeignKeyConstraintTest.NoViolationTest" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.ForeignKeyConstraintTest.TestCtor5" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="MonoTests.System.Data.ForeignKeyConstraintTest.ViolationTest" executed="True" success="True" time="0.001" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="Odbc" success="True" time="0.431" asserts="0">
                    <results>
                      <test-suite name="OdbcCommandBuilderTest" success="True" time="0.244" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.Odbc.OdbcCommandBuilderTest.CatalogLocation_Value_Invalid" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcCommandBuilderTest.CatalogLocationTest" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcCommandBuilderTest.CatalogSeparator" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcCommandBuilderTest.ConflictOption_Value_Invalid" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcCommandBuilderTest.ConflictOptionTest" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcCommandBuilderTest.QuoteIdentifier1" executed="True" success="True" time="0.002" asserts="29" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcCommandBuilderTest.QuoteIdentifier1_QuotePrefix_Empty" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcCommandBuilderTest.QuoteIdentifier1_UnquotedIdentifier_Null" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcCommandBuilderTest.QuoteIdentifier2_Connection_Closed" executed="True" success="True" time="0.227" asserts="42" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcCommandBuilderTest.QuoteIdentifier2_Connection_Null" executed="True" success="True" time="0.003" asserts="42" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcCommandBuilderTest.QuotePrefix" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcCommandBuilderTest.QuoteSuffix" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcCommandBuilderTest.SchemaSeparator" executed="True" success="True" time="0.000" asserts="6" />
                        </results>
                      </test-suite>
                      <test-suite name="OdbcCommandTest" success="True" time="0.040" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.Odbc.OdbcCommandTest.CommandText" executed="True" success="True" time="0.005" asserts="4" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcCommandTest.CommandTimeout" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcCommandTest.CommandTimeout_Value_Negative" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcCommandTest.CommandType_Value_Invalid" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcCommandTest.Constructor1" executed="True" success="True" time="0.002" asserts="11" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcCommandTest.Constructor2" executed="True" success="True" time="0.002" asserts="22" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcCommandTest.Constructor3" executed="True" success="True" time="0.002" asserts="33" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcCommandTest.Constructor4" executed="True" success="True" time="0.001" asserts="33" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcCommandTest.Dispose" executed="True" success="True" time="0.010" asserts="9" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcCommandTest.ExecuteNonQuery_Connection_Closed" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcCommandTest.ExecuteNonQuery_Connection_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcCommandTest.ExecuteReader_Connection_Closed" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcCommandTest.ExecuteReader_Connection_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcCommandTest.ExecuteScalar_Connection_Closed" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcCommandTest.ExecuteScalar_Connection_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcCommandTest.ResetCommandTimeout" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcCommandTest.UpdatedRowSource" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcCommandTest.UpdatedRowSource_Value_Invalid" executed="True" success="True" time="0.000" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite name="OdbcConnectionStringBuilderTest" success="True" time="0.053" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.Odbc.OdbcConnectionStringBuilderTest.Add" executed="True" success="True" time="0.002" asserts="14" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcConnectionStringBuilderTest.Add_Keyword_Invalid" executed="True" success="True" time="0.001" asserts="40" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcConnectionStringBuilderTest.Add_Keyword_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcConnectionStringBuilderTest.Clear" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcConnectionStringBuilderTest.ConnectionString" executed="True" success="True" time="0.011" asserts="13" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcConnectionStringBuilderTest.ConnectionStringConstructorTest" executed="True" success="True" time="0.001" asserts="15" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcConnectionStringBuilderTest.ContainsKey" executed="True" success="True" time="0.001" asserts="11" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcConnectionStringBuilderTest.ContainsKey_Keyword_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcConnectionStringBuilderTest.Driver" executed="True" success="True" time="0.002" asserts="35" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcConnectionStringBuilderTest.Driver_Value_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcConnectionStringBuilderTest.Dsn" executed="True" success="True" time="0.001" asserts="11" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcConnectionStringBuilderTest.Dsn_Value_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcConnectionStringBuilderTest.Indexer" executed="True" success="True" time="0.004" asserts="12" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcConnectionStringBuilderTest.Indexer_Driver_Empty" executed="True" success="True" time="0.001" asserts="20" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcConnectionStringBuilderTest.Indexer_Driver_Null" executed="True" success="True" time="0.001" asserts="23" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcConnectionStringBuilderTest.Indexer_Dsn_Empty" executed="True" success="True" time="0.001" asserts="17" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcConnectionStringBuilderTest.Indexer_Dsn_Null" executed="True" success="True" time="0.001" asserts="14" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcConnectionStringBuilderTest.Indexer_Keyword_Duplicate" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcConnectionStringBuilderTest.Indexer_Keyword_Invalid" executed="True" success="True" time="0.003" asserts="88" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcConnectionStringBuilderTest.Indexer_Keyword_NotSupported" executed="True" success="True" time="0.002" asserts="5" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcConnectionStringBuilderTest.Indexer_Keyword_Null" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcConnectionStringBuilderTest.Indexer_Value_Null" executed="True" success="True" time="0.001" asserts="11" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcConnectionStringBuilderTest.Keys" executed="True" success="True" time="0.001" asserts="30" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcConnectionStringBuilderTest.Remove" executed="True" success="True" time="0.001" asserts="31" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcConnectionStringBuilderTest.Remove_Keyword_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcConnectionStringBuilderTest.TryGetValue" executed="True" success="True" time="0.001" asserts="22" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcConnectionStringBuilderTest.TryGetValue_Keyword_Null" executed="True" success="True" time="0.000" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite name="OdbcConnectionTest" success="True" time="0.009" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.Odbc.OdbcConnectionTest.BeginTransaction_Connection_Closed" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcConnectionTest.ConnectionString" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcConnectionTest.Constructor1" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcConnectionTest.Constructor2" executed="True" success="True" time="0.001" asserts="16" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcConnectionTest.GetSchema_Connection_Closed" executed="True" success="True" time="0.002" asserts="21" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcConnectionTest.ServerVersion_Connection_Closed" executed="True" success="True" time="0.001" asserts="6" />
                        </results>
                      </test-suite>
                      <test-suite name="OdbcDataAdapterTest" success="True" time="0.026" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.Odbc.OdbcDataAdapterTest.Constructor1" executed="True" success="True" time="0.002" asserts="16" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcDataAdapterTest.Constructor2" executed="True" success="True" time="0.001" asserts="17" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcDataAdapterTest.Constructor2_SelectCommand_Null" executed="True" success="True" time="0.001" asserts="16" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcDataAdapterTest.Constructor3" executed="True" success="True" time="0.001" asserts="18" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcDataAdapterTest.Constructor3_SelectCommandText_Null" executed="True" success="True" time="0.001" asserts="19" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcDataAdapterTest.Constructor3_SelectConnection_Null" executed="True" success="True" time="0.001" asserts="18" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcDataAdapterTest.Constructor4" executed="True" success="True" time="0.001" asserts="19" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcDataAdapterTest.Constructor4_SelectCommandText_Null" executed="True" success="True" time="0.001" asserts="20" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcDataAdapterTest.Constructor4_SelectConnectionString_Null" executed="True" success="True" time="0.001" asserts="19" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcDataAdapterTest.DeleteCommand" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcDataAdapterTest.DeleteCommand_IDbDataAdapter" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcDataAdapterTest.Dispose" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcDataAdapterTest.InsertCommand" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcDataAdapterTest.InsertCommand_IDbDataAdapter" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcDataAdapterTest.SelectCommand" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcDataAdapterTest.SelectCommand_IDbDataAdapter" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcDataAdapterTest.UpdateBatchSize" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcDataAdapterTest.UpdateCommand" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcDataAdapterTest.UpdateCommand_IDbDataAdapter" executed="True" success="True" time="0.000" asserts="6" />
                        </results>
                      </test-suite>
                      <test-suite name="OdbcMetaDataCollectioNamesTest" success="True" time="0.001" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.Odbc.OdbcMetaDataCollectioNamesTest.ValuesTest" executed="True" success="True" time="0.000" asserts="7" />
                        </results>
                      </test-suite>
                      <test-suite name="OdbcParameterCollectionTest" success="True" time="0.003" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.Odbc.OdbcParameterCollectionTest.OdbcParameterAddTest" executed="True" success="True" time="0.003" asserts="9" />
                        </results>
                      </test-suite>
                      <test-suite name="OdbcParameterTest" success="True" time="0.001" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.Odbc.OdbcParameterTest.OdbcTypeTest" executed="True" success="True" time="0.001" asserts="9" />
                        </results>
                      </test-suite>
                      <test-suite name="OdbcPermissionAttributeTest" success="True" time="0.010" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.Odbc.OdbcPermissionAttributeTest.Action" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcPermissionAttributeTest.Action_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcPermissionAttributeTest.AllowBlankPassword" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcPermissionAttributeTest.Attributes" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcPermissionAttributeTest.ConnectionString" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcPermissionAttributeTest.Default" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcPermissionAttributeTest.KeyRestriction" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcPermissionAttributeTest.KeyRestrictionBehavior_All" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcPermissionAttributeTest.KeyRestrictionBehavior_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcPermissionAttributeTest.Unrestricted" executed="True" success="True" time="0.000" asserts="6" />
                        </results>
                      </test-suite>
                      <test-suite name="OdbcPermissionTest" success="True" time="0.005" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.Odbc.OdbcPermissionTest.None" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcPermissionTest.None_Childs" executed="True" success="True" time="0.000" asserts="12" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcPermissionTest.PermissionState_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcPermissionTest.Unrestricted" executed="True" success="True" time="0.000" asserts="12" />
                          <test-case name="MonoTests.System.Data.Odbc.OdbcPermissionTest.Unrestricted_Add" executed="True" success="True" time="0.000" asserts="6" />
                        </results>
                      </test-suite>
                      <test-suite name="SqlCommandBuilderTest" success="True" time="0.017" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.Odbc.SqlCommandBuilderTest.CatalogLocation_Value_Invalid" executed="True" success="True" time="0.001" asserts="14" />
                          <test-case name="MonoTests.System.Data.Odbc.SqlCommandBuilderTest.CatalogLocationTest" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.Odbc.SqlCommandBuilderTest.CatalogSeparator" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.Odbc.SqlCommandBuilderTest.CatalogSeparator_Value_Invalid" executed="True" success="True" time="0.001" asserts="30" />
                          <test-case name="MonoTests.System.Data.Odbc.SqlCommandBuilderTest.ConflictOption_Value_Invalid" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Data.Odbc.SqlCommandBuilderTest.ConflictOptionTest" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.Odbc.SqlCommandBuilderTest.QuoteIdentifier" executed="True" success="True" time="0.001" asserts="14" />
                          <test-case name="MonoTests.System.Data.Odbc.SqlCommandBuilderTest.QuoteIdentifier_PrefixSuffix_NoMatch" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="MonoTests.System.Data.Odbc.SqlCommandBuilderTest.QuoteIdentifier_UnquotedIdentifier_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.Odbc.SqlCommandBuilderTest.QuotePrefix" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Data.Odbc.SqlCommandBuilderTest.QuotePrefix_Value_Invalid" executed="True" success="True" time="0.001" asserts="24" />
                          <test-case name="MonoTests.System.Data.Odbc.SqlCommandBuilderTest.QuoteSuffix" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Data.Odbc.SqlCommandBuilderTest.QuoteSuffix_Value_Invalid" executed="True" success="True" time="0.000" asserts="24" />
                          <test-case name="MonoTests.System.Data.Odbc.SqlCommandBuilderTest.SchemaSeparator" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.Odbc.SqlCommandBuilderTest.SchemaSeparator_Value_Invalid" executed="True" success="True" time="0.001" asserts="30" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="OleDb" success="True" time="0.081" asserts="0">
                    <results>
                      <test-suite name="OleDbCommandTest" success="True" time="0.009" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.OleDb.OleDbCommandTest.CommandText" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbCommandTest.Constructor1" executed="True" success="True" time="0.001" asserts="11" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbCommandTest.Constructor2" executed="True" success="True" time="0.001" asserts="22" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbCommandTest.Constructor3" executed="True" success="True" time="0.002" asserts="33" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbCommandTest.Constructor4" executed="True" success="True" time="0.001" asserts="33" />
                        </results>
                      </test-suite>
                      <test-suite name="OleDbConnectionTest" success="True" time="0.015" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.OleDb.OleDbConnectionTest.BeginTransaction_Connection_Closed" executed="True" success="True" time="0.002" asserts="9" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbConnectionTest.ConnectionString" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbConnectionTest.Constructor1" executed="True" success="True" time="0.002" asserts="8" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbConnectionTest.Constructor2" executed="True" success="True" time="0.001" asserts="13" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbConnectionTest.GetSchema_Connection_Closed" executed="True" success="True" time="0.002" asserts="21" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbConnectionTest.ServerVersion_Connection_Closed" executed="True" success="True" time="0.001" asserts="6" />
                        </results>
                      </test-suite>
                      <test-suite name="OleDbDataAdapterTest" success="True" time="0.023" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.OleDb.OleDbDataAdapterTest.Constructor1" executed="True" success="True" time="0.002" asserts="16" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbDataAdapterTest.Constructor2" executed="True" success="True" time="0.001" asserts="17" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbDataAdapterTest.Constructor2_SelectCommand_Null" executed="True" success="True" time="0.001" asserts="16" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbDataAdapterTest.Constructor3" executed="True" success="True" time="0.001" asserts="18" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbDataAdapterTest.Constructor3_SelectCommandText_Null" executed="True" success="True" time="0.001" asserts="19" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbDataAdapterTest.Constructor3_SelectConnection_Null" executed="True" success="True" time="0.001" asserts="18" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbDataAdapterTest.Constructor4" executed="True" success="True" time="0.001" asserts="19" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbDataAdapterTest.Constructor4_SelectCommandText_Null" executed="True" success="True" time="0.001" asserts="20" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbDataAdapterTest.Constructor4_SelectConnectionString_Null" executed="True" success="True" time="0.001" asserts="19" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbDataAdapterTest.DeleteCommand" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbDataAdapterTest.DeleteCommand_IDbDataAdapter" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbDataAdapterTest.Dispose" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbDataAdapterTest.InsertCommand" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbDataAdapterTest.InsertCommand_IDbDataAdapter" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbDataAdapterTest.SelectCommand" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbDataAdapterTest.SelectCommand_IDbDataAdapter" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbDataAdapterTest.UpdateCommand" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbDataAdapterTest.UpdateCommand_IDbDataAdapter" executed="True" success="True" time="0.000" asserts="6" />
                        </results>
                      </test-suite>
                      <test-suite name="OleDbMetaDataCollectionNamesTest" success="True" time="0.001" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.OleDb.OleDbMetaDataCollectionNamesTest.ValuesTest" executed="True" success="True" time="0.001" asserts="9" />
                        </results>
                      </test-suite>
                      <test-suite name="OleDbParameterCollectionTest" success="True" time="0.003" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.OleDb.OleDbParameterCollectionTest.AddWithValueTest" executed="True" success="True" time="0.003" asserts="6" />
                        </results>
                      </test-suite>
                      <test-suite name="OleDbPermissionAttributeTest" success="True" time="0.012" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.OleDb.OleDbPermissionAttributeTest.Action" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbPermissionAttributeTest.Action_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbPermissionAttributeTest.AllowBlankPassword" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbPermissionAttributeTest.Attributes" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbPermissionAttributeTest.ConnectionString" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbPermissionAttributeTest.CreatePermission_Provider" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbPermissionAttributeTest.Default" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbPermissionAttributeTest.KeyRestriction" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbPermissionAttributeTest.KeyRestrictionBehavior_All" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbPermissionAttributeTest.KeyRestrictionBehavior_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbPermissionAttributeTest.Provider" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbPermissionAttributeTest.Unrestricted" executed="True" success="True" time="0.000" asserts="6" />
                        </results>
                      </test-suite>
                      <test-suite name="OleDbPermissionTest" success="True" time="0.006" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.OleDb.OleDbPermissionTest.None" executed="True" success="True" time="0.001" asserts="16" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbPermissionTest.None_Childs" executed="True" success="True" time="0.000" asserts="16" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbPermissionTest.PermissionState_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbPermissionTest.Provider" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbPermissionTest.Unrestricted" executed="True" success="True" time="0.000" asserts="16" />
                          <test-case name="MonoTests.System.Data.OleDb.OleDbPermissionTest.Unrestricted_Add" executed="True" success="True" time="0.000" asserts="8" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Sql" success="True" time="0.014" asserts="0">
                    <results>
                      <test-suite name="SqlNotificationRequestTest" success="True" time="0.013" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.Sql.SqlNotificationRequestTest.Constructor1" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.Sql.SqlNotificationRequestTest.Constructor2" executed="True" success="True" time="0.002" asserts="18" />
                          <test-case name="MonoTests.System.Data.Sql.SqlNotificationRequestTest.Constructor2_Options_ExceedMaxLength" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.Sql.SqlNotificationRequestTest.Constructor2_Timeout_Negative" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.Sql.SqlNotificationRequestTest.Constructor2_UserData_ExceedMaxLength" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.Sql.SqlNotificationRequestTest.Options" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Data.Sql.SqlNotificationRequestTest.Options_Value_ExceedMaxLength" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.Sql.SqlNotificationRequestTest.Timeout" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.Sql.SqlNotificationRequestTest.Timeout_Value_Negative" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.Sql.SqlNotificationRequestTest.UserData" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Data.Sql.SqlNotificationRequestTest.UserData_Value_ExceedMaxLength" executed="True" success="True" time="0.000" asserts="4" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="SqlClient" success="True" time="0.397" asserts="0">
                    <results>
                      <test-suite name="DataTableLoadRowTest" success="True" time="0.019" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.SqlClient.DataTableLoadRowTest.LoadRowAutoIncrementTest" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Data.SqlClient.DataTableLoadRowTest.LoadRowDefaultValueTest" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlClient.DataTableLoadRowTest.LoadRowTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlClient.DataTableLoadRowTest.LoadRowTestOverwriteChanges" executed="True" success="True" time="0.006" asserts="65" />
                          <test-case name="MonoTests.System.Data.SqlClient.DataTableLoadRowTest.LoadRowTestPreserveChanges" executed="True" success="True" time="0.003" asserts="45" />
                          <test-case name="MonoTests.System.Data.SqlClient.DataTableLoadRowTest.LoadRowTestUpsert" executed="True" success="True" time="0.004" asserts="66" />
                        </results>
                      </test-suite>
                      <test-suite name="SqlBulkCopyTest" success="True" time="0.005" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.SqlClient.SqlBulkCopyTest.ConstructorNotNull1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlBulkCopyTest.ConstructorNotNull2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlBulkCopyTest.ConstructorNotNull3" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlBulkCopyTest.ConstructorNotNull4" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlBulkCopyTest.ConstructorNotNull5" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlBulkCopyTest.ConstructorNotNull6" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="SqlClientMetaDataCollectionNamesTest" success="True" time="0.001" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.SqlClient.SqlClientMetaDataCollectionNamesTest.ValuesTest" executed="True" success="True" time="0.001" asserts="13" />
                        </results>
                      </test-suite>
                      <test-suite name="SqlClientPermissionAttributeTest" success="True" time="0.010" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.SqlClient.SqlClientPermissionAttributeTest.Action" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlClientPermissionAttributeTest.Action_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlClientPermissionAttributeTest.AllowBlankPassword" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlClientPermissionAttributeTest.Attributes" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlClientPermissionAttributeTest.ConnectionString" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlClientPermissionAttributeTest.Default" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlClientPermissionAttributeTest.KeyRestriction" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlClientPermissionAttributeTest.KeyRestrictionBehavior_All" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlClientPermissionAttributeTest.KeyRestrictionBehavior_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlClientPermissionAttributeTest.Unrestricted" executed="True" success="True" time="0.000" asserts="6" />
                        </results>
                      </test-suite>
                      <test-suite name="SqlClientPermissionTest" success="True" time="0.005" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.SqlClient.SqlClientPermissionTest.None" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlClientPermissionTest.None_Childs" executed="True" success="True" time="0.000" asserts="12" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlClientPermissionTest.PermissionState_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlClientPermissionTest.Unrestricted" executed="True" success="True" time="0.000" asserts="12" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlClientPermissionTest.Unrestricted_Add" executed="True" success="True" time="0.000" asserts="6" />
                        </results>
                      </test-suite>
                      <test-suite name="SqlCommandTest" success="True" time="0.138" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.SqlClient.SqlCommandTest.Clone" executed="True" success="True" time="0.012" asserts="16" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlCommandTest.CommandText" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlCommandTest.CommandTimeout" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlCommandTest.CommandTimeout_Value_Negative" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlCommandTest.CommandType_Value_Invalid" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlCommandTest.Constructor1" executed="True" success="True" time="0.001" asserts="13" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlCommandTest.Constructor2" executed="True" success="True" time="0.001" asserts="26" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlCommandTest.Constructor3" executed="True" success="True" time="0.097" asserts="39" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlCommandTest.Constructor4" executed="True" success="True" time="0.002" asserts="39" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlCommandTest.Dispose" executed="True" success="True" time="0.003" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlCommandTest.ExecuteNonQuery_Connection_Closed" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlCommandTest.ExecuteNonQuery_Connection_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlCommandTest.ExecuteReader_Connection_Closed" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlCommandTest.ExecuteReader_Connection_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlCommandTest.ExecuteScalar_Connection_Closed" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlCommandTest.ExecuteScalar_Connection_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlCommandTest.ParameterCollectionTest" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlCommandTest.Prepare_Connection_Closed" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlCommandTest.Prepare_Connection_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlCommandTest.ResetCommandTimeout" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlCommandTest.UpdatedRowSource" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlCommandTest.UpdatedRowSource_Value_Invalid" executed="True" success="True" time="0.000" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite name="SqlConnectionTest" success="True" time="0.057" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.BeginTransaction_Connection_Closed" executed="True" success="True" time="0.002" asserts="18" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.ChangeDatabase_Connection_Closed" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.ChangePassword_ConnectionString_Empty" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.ChangePassword_ConnectionString_Null" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.ChangePassword_NewPassword_Empty" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.ChangePassword_NewPassword_ExceedMaxLength" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.ChangePassword_NewPassword_Null" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.ClearPool_Connection_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.ConnectionString" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.ConnectionString_AsynchronousProcessing" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.ConnectionString_ConnectTimeout" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.ConnectionString_ConnectTimeout_Invalid" executed="True" success="True" time="0.001" asserts="21" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.ConnectionString_Database_Synonyms" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.ConnectionString_DataSource_Synonyms" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.ConnectionString_MaxPoolSize" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.ConnectionString_MaxPoolSize_Invalid" executed="True" success="True" time="0.002" asserts="30" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.ConnectionString_MinPoolSize" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.ConnectionString_MinPoolSize_Invalid" executed="True" success="True" time="0.001" asserts="21" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.ConnectionString_MultipleActiveResultSets" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.ConnectionString_MultipleActiveResultSets_Invalid" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.ConnectionString_NetworkLibrary_Synonyms" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.ConnectionString_OtherKeywords" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.ConnectionString_PacketSize" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.ConnectionString_PacketSize_Invalid" executed="True" success="True" time="0.001" asserts="18" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.ConnectionString_Password_Synonyms" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.ConnectionString_PersistSecurityInfo_Synonyms" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.ConnectionString_UserID_Synonyms" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.ConnectionString_UserInstance" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.ConnectionString_UserInstance_Invalid" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.ConnectionString_Value_Invalid" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.Constructor1" executed="True" success="True" time="0.001" asserts="11" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.Constructor2" executed="True" success="True" time="0.001" asserts="22" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.Constructor2_ConnectionString_Invalid" executed="True" success="True" time="0.002" asserts="29" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.CreateCommand" executed="True" success="True" time="0.001" asserts="14" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.Dispose" executed="True" success="True" time="0.000" asserts="7" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.GetSchema_Connection_Closed" executed="True" success="True" time="0.003" asserts="21" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.Open_ConnectionString_Empty" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.Open_ConnectionString_Null" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.Open_ConnectionString_Whitespace" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlConnectionTest.ServerVersion_Connection_Closed" executed="True" success="True" time="0.001" asserts="6" />
                        </results>
                      </test-suite>
                      <test-suite name="SqlDataAdapterTest" success="True" time="0.030" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.SqlClient.SqlDataAdapterTest.Constructor1" executed="True" success="True" time="0.004" asserts="16" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlDataAdapterTest.Constructor2" executed="True" success="True" time="0.001" asserts="17" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlDataAdapterTest.Constructor2_SelectCommand_Null" executed="True" success="True" time="0.001" asserts="16" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlDataAdapterTest.Constructor3" executed="True" success="True" time="0.001" asserts="18" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlDataAdapterTest.Constructor3_SelectCommandText_Null" executed="True" success="True" time="0.001" asserts="19" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlDataAdapterTest.Constructor3_SelectConnection_Null" executed="True" success="True" time="0.001" asserts="18" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlDataAdapterTest.Constructor4" executed="True" success="True" time="0.001" asserts="19" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlDataAdapterTest.Constructor4_SelectCommandText_Null" executed="True" success="True" time="0.001" asserts="20" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlDataAdapterTest.Constructor4_SelectConnectionString_Null" executed="True" success="True" time="0.001" asserts="19" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlDataAdapterTest.DeleteCommand" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlDataAdapterTest.DeleteCommand_IDbDataAdapter" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlDataAdapterTest.Dispose" executed="True" success="True" time="0.002" asserts="6" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlDataAdapterTest.InsertCommand" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlDataAdapterTest.InsertCommand_IDbDataAdapter" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlDataAdapterTest.SelectCommand" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlDataAdapterTest.SelectCommand_IDbDataAdapter" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlDataAdapterTest.UpdateBatchSize" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlDataAdapterTest.UpdateBatchSize_Negative" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlDataAdapterTest.UpdateCommand" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlDataAdapterTest.UpdateCommand_IDbDataAdapter" executed="True" success="True" time="0.000" asserts="6" />
                        </results>
                      </test-suite>
                      <test-suite name="SqlParameterTest" success="True" time="0.104" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.CompareInfo" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.Constructor1" executed="True" success="True" time="0.003" asserts="17" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.Constructor2_Value_DateTime" executed="True" success="True" time="0.001" asserts="15" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.Constructor2_Value_DBNull" executed="True" success="True" time="0.001" asserts="16" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.Constructor2_Value_Null" executed="True" success="True" time="0.001" asserts="17" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.Constructor7" executed="True" success="True" time="0.001" asserts="15" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.InferType_Boolean" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.InferType_Byte" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.InferType_ByteArray" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.InferType_DateTime" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.InferType_Decimal" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.InferType_Double" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.InferType_Enum" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.InferType_Guid" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.InferType_Int16" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.InferType_Int32" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.InferType_Int64" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.InferType_Object" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.InferType_Single" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.InferType_String" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.LocaleId" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.ParameterName" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.ParameterNullTest" executed="True" success="True" time="0.002" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.ParameterType" executed="True" success="True" time="0.003" asserts="24" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.ResetDbType" executed="True" success="True" time="0.002" asserts="26" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.ResetSqlDbType" executed="True" success="True" time="0.001" asserts="18" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.SourceColumn" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.SourceColumnNullMapping" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.SqlDbTypeTest" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.SqlDbTypeTest_Value_Invalid" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.SqlTypes_SqlBinary" executed="True" success="True" time="0.003" asserts="9" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.SqlTypes_SqlBoolean" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.SqlTypes_SqlByte" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.SqlTypes_SqlDateTime" executed="True" success="True" time="0.002" asserts="9" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.SqlTypes_SqlDecimal" executed="True" success="True" time="0.002" asserts="9" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.SqlTypes_SqlDouble" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.SqlTypes_SqlGuid" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.SqlTypes_SqlInt16" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.SqlTypes_SqlInt32" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.SqlTypes_SqlInt64" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.SqlTypes_SqlMoney" executed="True" success="True" time="0.004" asserts="9" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.SqlTypes_SqlSingle" executed="True" success="True" time="0.002" asserts="9" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.SqlTypes_SqlString" executed="True" success="True" time="0.002" asserts="9" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.SqlTypes_SqlXml" executed="True" success="True" time="0.001" asserts="13" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.SqlValue" executed="True" success="True" time="0.006" asserts="69" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.Value" executed="True" success="True" time="0.001" asserts="21" />
                          <test-case name="MonoTests.System.Data.SqlClient.SqlParameterTest.XmlSchemaTest" executed="True" success="True" time="0.002" asserts="21" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="SqlTypes" success="True" time="0.870" asserts="0">
                    <results>
                      <test-suite name="SqlBinaryTest" success="True" time="0.024" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBinaryTest.AdditionOperator" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBinaryTest.ByteArrayToSqlBinary" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBinaryTest.CompareTo" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBinaryTest.ComparisonMethods" executed="True" success="True" time="0.002" asserts="18" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBinaryTest.ComparisonOperators" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBinaryTest.Concat" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBinaryTest.Create" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBinaryTest.GetHashCodeTest" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBinaryTest.GetTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBinaryTest.GetXsdTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBinaryTest.Properties" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBinaryTest.PublicFields" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBinaryTest.SqlBinaryToByteArray" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBinaryTest.SqlGuidToSqlBinary" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBinaryTest.ToSqlGuid" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBinaryTest.ToStringTest" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="SqlBooleanTest" success="True" time="0.064" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.And" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.BitwiseAndOperator" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.BitwiseOrOperator" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.BooleanToSqlBoolean" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.ByteValueProperty" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.CompareTo" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.Create" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.EqualityOperator" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.Equals" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.ExlusiveOrOperator" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.FalseField" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.FalseOperator" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.GetHashCodeTest" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.GetTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.GetXsdTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.GreaterThanOrEqualTest" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.GreaterThanTest" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.InequalityOperator" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.IsFalseProperty" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.IsNullProperty" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.IsTrueProperty" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.LessThanOrEqualTest" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.LessThanTest" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.LogicalNotOperator" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.NotEquals" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.NullField" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.OneField" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.OnesComplement" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.OnesComplementOperator" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.Or" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.Parse" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.SqlBooleanToBoolean" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.SqlByteToSqlBoolean" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.SqlDecimalToSqlBoolean" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.SqlDoubleToSqlBoolean" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.SqlInt16ToSqlBoolean" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.SqlInt32ToSqlBoolean" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.SqlInt64ToSqlBoolean" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.SqlMoneyToSqlBoolean" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.SqlSingleToSqlBoolean" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.SqlStringToSqlBoolean" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.StaticEquals" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.ToSqlByte" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.ToSqlDecimal" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.ToSqlDouble" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.ToSqlInt16" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.ToSqlInt32" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.ToSqlInt64" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.ToSqlMoney" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.ToSqlsingle" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.ToSqlString" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.ToStringTest" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.TrueField" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.TrueOperator" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.ValueProperty" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.Xor" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBooleanTest.ZeroField" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="SqlBytesTest" success="True" time="0.032" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBytesTest.GetXsdTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBytesTest.Read_InvalidCountTest1" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBytesTest.Read_InvalidCountTest2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBytesTest.Read_InvalidOffsetInBufferTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBytesTest.Read_NegativeCountTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBytesTest.Read_NegativeOffsetInBufferTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBytesTest.Read_NegativeOffsetTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBytesTest.Read_NullBufferAndInstanceValueTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBytesTest.Read_NullBufferTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBytesTest.Read_NullInstanceValueTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBytesTest.Read_SuccessTest1" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBytesTest.Read_SuccessTest2" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBytesTest.SqlBytesItem" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBytesTest.SqlBytesLength" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBytesTest.SqlBytesMaxLength" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBytesTest.SqlBytesNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBytesTest.SqlBytesSetLength" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBytesTest.SqlBytesSetNull" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBytesTest.SqlBytesStorage" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBytesTest.SqlBytesValue" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBytesTest.Write_InvalidCountTest1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBytesTest.Write_InvalidCountTest2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBytesTest.Write_InvalidOffsetInBufferTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBytesTest.Write_InvalidOffsetTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBytesTest.Write_NegativeCountTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBytesTest.Write_NegativeOffsetInBufferTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBytesTest.Write_NegativeOffsetTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBytesTest.Write_NullBufferAndInstanceValueTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBytesTest.Write_NullBufferTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBytesTest.Write_NullInstanceValueTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBytesTest.Write_SuccessTest1" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlBytesTest.Write_SuccessTest2" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="SqlByteTest" success="True" time="0.064" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.AdditionOperator" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.AddMethod" executed="True" success="True" time="0.004" asserts="5" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.BitwiseAndMethod" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.BitwiseAndOperator" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.BitwiseOrMethod" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.BitwiseOrOperator" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.ByteToSqlByte" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.CompareTo" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.Create" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.DivideMethod" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.DivisionOperator" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.EqualityOperator" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.EqualsMethod" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.ExclusiveOrOperator" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.GetHashCodeTest" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.GetTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.GetXsdTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.GreaterThan" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.GreaterThanOrEqual" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.LessThan" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.LessThanOrEqual" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.Mod" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.MultiplicationOperator" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.Multiply" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.NotEquals" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.OnesComplement" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.OnesComplementOperator" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.Parse" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.Properties" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.PublicFields" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.SqlBooleanToSqlByte" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.SqlByteToByte" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.SqlDecimalToSqlByte" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.SqlDoubleToSqlByte" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.SqlInt16ToSqlByte" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.SqlInt32ToSqlByte" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.SqlInt64ToSqlByte" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.SqlMoneyToSqlByte" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.SqlSingleToSqlByte" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.SqlStringToSqlByte" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.StaticEqualsMethod" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.Subtract" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.SubtractionOperator" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.TestXor" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.ThanOrEqualOperators" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.ToSqlBoolean" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.ToSqlDecimal" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.ToSqlDouble" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.ToSqlInt16" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.ToSqlInt32" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.ToSqlInt64" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.ToSqlMoney" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.ToSqlSingle" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.ToSqlString" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlByteTest.ToStringTest" executed="True" success="True" time="0.001" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="SqlCharsTest" success="True" time="0.034" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlCharsTest.GetXsdTypeTest" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlCharsTest.Read_InvalidCountTest1" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlCharsTest.Read_InvalidCountTest2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlCharsTest.Read_InvalidOffsetInBufferTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlCharsTest.Read_NegativeCountTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlCharsTest.Read_NegativeOffsetInBufferTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlCharsTest.Read_NegativeOffsetTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlCharsTest.Read_NullBufferAndInstanceValueTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlCharsTest.Read_NullBufferTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlCharsTest.Read_NullInstanceValueTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlCharsTest.Read_SuccessTest1" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlCharsTest.Read_SuccessTest2" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlCharsTest.ReadWriteXmlTest" executed="True" success="True" time="0.002" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlCharsTest.SqlCharsItem" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlCharsTest.SqlCharsLength" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlCharsTest.SqlCharsMaxLength" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlCharsTest.SqlCharsNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlCharsTest.SqlCharsSetLength" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlCharsTest.SqlCharsSetNull" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlCharsTest.SqlCharsStorage" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlCharsTest.SqlCharsValue" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlCharsTest.Write_InvalidCountTest1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlCharsTest.Write_InvalidCountTest2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlCharsTest.Write_InvalidOffsetInBufferTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlCharsTest.Write_InvalidOffsetTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlCharsTest.Write_NegativeCountTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlCharsTest.Write_NegativeOffsetInBufferTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlCharsTest.Write_NegativeOffsetTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlCharsTest.Write_NullBufferAndInstanceValueTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlCharsTest.Write_NullBufferTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlCharsTest.Write_NullInstanceValueTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlCharsTest.Write_SuccessTest1" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlCharsTest.Write_SuccessTest2" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="SqlDateTimeTest" success="True" time="0.039" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDateTimeTest.ArithmeticOperators" executed="True" success="True" time="0.002" asserts="14" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDateTimeTest.CompareTo" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDateTimeTest.Create" executed="True" success="True" time="0.002" asserts="22" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDateTimeTest.DateTimeToSqlDateTime" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDateTimeTest.EffingBilisecond" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDateTimeTest.EqualsMethods" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDateTimeTest.GetHashCodeTest" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDateTimeTest.GetTypeTest" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDateTimeTest.GetXsdTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDateTimeTest.Greaters" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDateTimeTest.Lessers" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDateTimeTest.NotEquals" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDateTimeTest.Parse" executed="True" success="True" time="0.005" asserts="29" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDateTimeTest.Properties" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDateTimeTest.PublicFields" executed="True" success="True" time="0.001" asserts="16" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDateTimeTest.SqlDateTimeToDateTime" executed="True" success="True" time="0.000" asserts="7" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDateTimeTest.SqlStringToSqlDateTime" executed="True" success="True" time="0.003" asserts="27" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDateTimeTest.ThanOrEqualOperators" executed="True" success="True" time="0.004" asserts="21" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDateTimeTest.TicksRoundTrip" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDateTimeTest.ToStringTest" executed="False">
                            <reason>
                              <message><![CDATA[This test is locale dependent.]]></message>
                            </reason>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite name="SqlDecimalTest" success="True" time="0.054" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDecimalTest.AdjustScale" executed="True" success="True" time="0.005" asserts="5" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDecimalTest.ArithmeticMethods" executed="True" success="True" time="0.006" asserts="22" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDecimalTest.ArithmeticOperators" executed="True" success="True" time="0.003" asserts="13" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDecimalTest.ByteToSqlDecimal" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDecimalTest.CompareTo" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDecimalTest.Conversions" executed="True" success="True" time="0.004" asserts="19" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDecimalTest.ConvertToPrecScale" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDecimalTest.Create" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDecimalTest.DecimalToSqlDecimal" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDecimalTest.EqualsMethods" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDecimalTest.GetTypeTest" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDecimalTest.GetXsdTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDecimalTest.Greaters" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDecimalTest.Lessers" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDecimalTest.Properties" executed="True" success="True" time="0.001" asserts="11" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDecimalTest.PublicFields" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDecimalTest.ReadWriteXmlTest" executed="True" success="True" time="0.002" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDecimalTest.SqlBooleanToSqlDecimal" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDecimalTest.SqlDecimalToDecimal" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDecimalTest.SqlDoubleToSqlDecimal" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDecimalTest.SqlIntToSqlDouble" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDecimalTest.SqlMoneyToSqlDecimal" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDecimalTest.SqlSingleToSqlDecimal" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDecimalTest.SqlStringToSqlDecimal" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDecimalTest.ThanOrEqualOperators" executed="True" success="True" time="0.002" asserts="29" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDecimalTest.ToStringTest" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDecimalTest.Truncate" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDecimalTest.UnaryNegation" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDecimalTest.Value" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="SqlDoubleTest" success="True" time="0.050" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDoubleTest.ArithmeticMethods" executed="True" success="True" time="0.002" asserts="11" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDoubleTest.ArithmeticOperators" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDoubleTest.ByteToSqlDouble" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDoubleTest.CompareTo" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDoubleTest.Conversions" executed="True" success="True" time="0.005" asserts="30" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDoubleTest.Create" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDoubleTest.DoubleToSqlDouble" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDoubleTest.EqualsMethods" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDoubleTest.GetHashCodeTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDoubleTest.GetTypeTest" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDoubleTest.GetXsdTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDoubleTest.Greaters" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDoubleTest.Lessers" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDoubleTest.NotEquals" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDoubleTest.Parse" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDoubleTest.Properties" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDoubleTest.PublicFields" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDoubleTest.ReadWriteXmlTest" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDoubleTest.SqlBooleanToSqlDouble" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDoubleTest.SqlDecimalToSqlDouble" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDoubleTest.SqlDoubleToDouble" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDoubleTest.SqlIntToSqlDouble" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDoubleTest.SqlMoneyToSqlDouble" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDoubleTest.SqlSingleToSqlDouble" executed="True" success="True" time="0.005" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDoubleTest.SqlStringToSqlDouble" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDoubleTest.ThanOrEqualOperators" executed="True" success="True" time="0.002" asserts="23" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlDoubleTest.UnaryNegation" executed="True" success="True" time="0.001" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="SqlGuidTest" success="True" time="0.026" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlGuidTest.CompareTo" executed="True" success="True" time="0.002" asserts="7" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlGuidTest.Conversions" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlGuidTest.Create" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlGuidTest.EqualsMethods" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlGuidTest.GetHashCodeTest" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlGuidTest.GetTypeTest" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlGuidTest.GetXsdTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlGuidTest.Greaters" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlGuidTest.GuidToSqlGuid" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlGuidTest.Lessers" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlGuidTest.NotEquals" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlGuidTest.Parse" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlGuidTest.Properties" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlGuidTest.PublicFields" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlGuidTest.SqlBinaryToSqlGuid" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlGuidTest.SqlGuidToGuid" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlGuidTest.SqlStringToSqlGuid" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlGuidTest.ThanOrEqualOperators" executed="True" success="True" time="0.001" asserts="22" />
                        </results>
                      </test-suite>
                      <test-suite name="SqlInt16Test" success="True" time="0.053" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt16Test.ArithmeticMethods" executed="True" success="True" time="0.002" asserts="17" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt16Test.ArithmeticOperators" executed="True" success="True" time="0.002" asserts="12" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt16Test.BitwiseMethods" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt16Test.BitwiseOperators" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt16Test.ByteToSqlInt16" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt16Test.CompareTo" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt16Test.Conversions" executed="True" success="True" time="0.004" asserts="30" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt16Test.Create" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt16Test.EqualsMethod" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt16Test.GetHashCodeTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt16Test.GetTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt16Test.GetXsdTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt16Test.Greaters" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt16Test.Lessers" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt16Test.NotEquals" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt16Test.OnesComplement" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt16Test.OnesComplementOperator" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt16Test.Parse" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt16Test.Properties" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt16Test.PublicFields" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt16Test.ReadWriteXmlTest" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt16Test.SqlBooleanToSqlInt16" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt16Test.SqlDecimalToSqlInt16" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt16Test.SqlDoubleToSqlInt16" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt16Test.SqlInt32ToSqlInt16" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt16Test.SqlInt64ToSqlInt16" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt16Test.SqlIntToInt16" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt16Test.SqlMoneyToSqlInt16" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt16Test.SqlSingleToSqlInt16" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt16Test.SqlStringToSqlInt16" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt16Test.StaticEqualsMethod" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt16Test.ThanOrEqualOperators" executed="True" success="True" time="0.001" asserts="23" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt16Test.UnaryNegation" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt16Test.Xor" executed="True" success="True" time="0.001" asserts="5" />
                        </results>
                      </test-suite>
                      <test-suite name="SqlInt32Test" success="True" time="0.037" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt32Test.Add" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt32Test.BitwiseAnd" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt32Test.BitwiseOr" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt32Test.ConversionMethods" executed="True" success="True" time="0.006" asserts="17" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt32Test.Create" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt32Test.Divide" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt32Test.Equals" executed="True" success="True" time="0.004" asserts="8" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt32Test.GetXsdTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt32Test.GreaterThan" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt32Test.GreaterThanOrEqual" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt32Test.IsNullProperty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt32Test.LessThan" executed="True" success="True" time="0.006" asserts="8" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt32Test.LessThanOrEqual" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt32Test.Mod" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt32Test.Modulus" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt32Test.Multiply" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt32Test.NotEquals" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt32Test.OnesComplement" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt32Test.ReadWriteXmlTest" executed="True" success="True" time="0.002" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt32Test.Subtract" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt32Test.Xor" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="SqlInt64Test" success="True" time="0.049" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt64Test.ArithmeticMethods" executed="True" success="True" time="0.003" asserts="17" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt64Test.ArithmeticOperators" executed="True" success="True" time="0.002" asserts="12" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt64Test.BitwiseMethods" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt64Test.BitwiseOperators" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt64Test.ByteToSqlInt64" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt64Test.CompareTo" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt64Test.Conversions" executed="True" success="True" time="0.003" asserts="30" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt64Test.Create" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt64Test.EqualsMethod" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt64Test.GetHashCodeTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt64Test.GetTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt64Test.GetXsdTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt64Test.Greaters" executed="True" success="True" time="0.004" asserts="6" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt64Test.Lessers" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt64Test.NotEquals" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt64Test.OnesComplement" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt64Test.OnesComplementOperator" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt64Test.Parse" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt64Test.Properties" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt64Test.PublicFields" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt64Test.ReadWriteXmlTest" executed="True" success="True" time="0.002" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt64Test.Sql64IntToInt64" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt64Test.SqlBooleanToSqlInt64" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt64Test.SqlDecimalToSqlInt64" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt64Test.SqlDoubleToSqlInt64" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt64Test.SqlInt16ToSqlInt64" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt64Test.SqlInt32ToSqlInt64" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt64Test.SqlMoneyToSqlInt64" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt64Test.SqlSingleToSqlInt64" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt64Test.SqlStringToSqlInt64" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt64Test.StaticEqualsMethod" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt64Test.ThanOrEqualOperators" executed="True" success="True" time="0.001" asserts="23" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt64Test.UnaryNegation" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlInt64Test.Xor" executed="True" success="True" time="0.000" asserts="5" />
                        </results>
                      </test-suite>
                      <test-suite name="SqlMoneyTest" success="True" time="0.042" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlMoneyTest.ArithmeticMethods" executed="True" success="True" time="0.003" asserts="12" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlMoneyTest.ArithmeticOperators" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlMoneyTest.CompareTo" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlMoneyTest.Conversions" executed="True" success="True" time="0.005" asserts="25" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlMoneyTest.Create" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlMoneyTest.DecimalToSqlMoney" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlMoneyTest.EqualsMethods" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlMoneyTest.GetHashCodeTest" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlMoneyTest.GetTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlMoneyTest.GetXsdTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlMoneyTest.Greaters" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlMoneyTest.IntsToSqlMoney" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlMoneyTest.Lessers" executed="True" success="True" time="0.004" asserts="8" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlMoneyTest.NotEquals" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlMoneyTest.Parse" executed="True" success="True" time="0.003" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlMoneyTest.Properties" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlMoneyTest.PublicFields" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlMoneyTest.SqlBooleanToSqlMoney" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlMoneyTest.SqlByteToSqlMoney" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlMoneyTest.SqlDecimalToSqlMoney" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlMoneyTest.SqlDoubleToSqlMoney" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlMoneyTest.SqlMoneyToDecimal" executed="True" success="True" time="0.004" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlMoneyTest.SqlSingleToSqlMoney" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlMoneyTest.SqlStringToSqlMoney" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlMoneyTest.ThanOrEqualOperators" executed="True" success="True" time="0.002" asserts="23" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlMoneyTest.UnaryNegation" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="SqlSingleTest" success="True" time="0.055" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlSingleTest.ArithmeticMethods" executed="True" success="True" time="0.008" asserts="11" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlSingleTest.ArithmeticOperators" executed="True" success="True" time="0.002" asserts="9" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlSingleTest.ByteToSqlSingle" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlSingleTest.CompareTo" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlSingleTest.Conversions" executed="True" success="True" time="0.011" asserts="27" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlSingleTest.Create" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlSingleTest.EqualsMethods" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlSingleTest.GetHashCodeTest" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlSingleTest.GetTypeTest" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlSingleTest.GetXsdTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlSingleTest.Greaters" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlSingleTest.Lessers" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlSingleTest.NotEquals" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlSingleTest.Parse" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlSingleTest.Properties" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlSingleTest.PublicFields" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlSingleTest.SingleToSqlSingle" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlSingleTest.SqlBooleanToSqlSingle" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlSingleTest.SqlDecimalToSqlSingle" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlSingleTest.SqlDoubleToSqlSingle" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlSingleTest.SqlIntToSqlSingle" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlSingleTest.SqlMoneyToSqlSingle" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlSingleTest.SqlSingleToSingle" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlSingleTest.SqlStringToSqlSingle" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlSingleTest.ThanOrEqualOperators" executed="True" success="True" time="0.002" asserts="23" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlSingleTest.UnaryNegation" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="SqlStringTest" success="True" time="0.159" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.AddSqlString" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.ArithmeticOperators" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.Clone" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.CompareOptionsFromSqlCompareOptions" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.CompareTo" executed="True" success="True" time="0.002" asserts="11" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.CompareToArgumentException" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.CompareToSqlTypeException" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.Concat" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.ConversionBoolFormatException1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.ConversionByteFormatException" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.ConversionByteOverflowException" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.ConversionDecimalFormatException1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.ConversionDecimalFormatException2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.ConversionDoubleOverflowException" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.ConversionGuidFormatException" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.ConversionInt16FormatException" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.ConversionInt32FormatException1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.ConversionInt32FormatException2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.ConversionInt64FormatException" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.ConversionIntMoneyFormatException2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.Conversions" executed="True" success="True" time="0.102" asserts="16" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.ConversionSingleOverflowException" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.Create" executed="True" success="True" time="0.002" asserts="9" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.CtorArgumentOutOfRangeException1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.CtorArgumentOutOfRangeException2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.EqualsMethods" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.GetHashCodeTest" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.GetTypeTest" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.GetXsdTypeTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.Greaters" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.Lessers" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.NotEquals" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.Properties" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.PublicFields" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.ReadWriteXmlTest" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.SqlBooleanToSqlString" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.SqlByteToBoolean" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.SqlDateTimeToSqlString" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.SqlDecimalToSqlString" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.SqlDoubleToSqlString" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.SqlGuidToSqlString" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.SqlInt16ToSqlString" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.SqlInt32ToSqlString" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.SqlInt64ToSqlString" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.SqlMoneyToSqlString" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.SqlSingleToSqlString" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.SqlStringToString" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.StringToSqlString" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.ThanOrEqualOperators" executed="True" success="True" time="0.002" asserts="23" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlStringTest.UnicodeBytes" executed="True" success="True" time="0.001" asserts="14" />
                        </results>
                      </test-suite>
                      <test-suite name="SqlXmlTest" success="True" time="0.030" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlXmlTest.Constructor2_Stream_Empty" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlXmlTest.Constructor2_Stream_Null" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlXmlTest.Constructor2_Stream_Unicode" executed="True" success="True" time="0.000" asserts="2">
                            <categories>
                              <category name="NotDotNet" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlXmlTest.Constructor3" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlXmlTest.Constructor3_XmlReader_Empty" executed="True" success="True" time="0.009" asserts="2" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlXmlTest.Constructor3_XmlReader_Null" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlXmlTest.CreateReader_Stream_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlXmlTest.CreateReader_Stream_Unicode" executed="True" success="True" time="0.000" asserts="1">
                            <categories>
                              <category name="NotDotNet" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlXmlTest.CreateReader_XmlReader_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlXmlTest.SqlXml_fromXmlReader_CreateReaderTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlXmlTest.SqlXml_fromZeroLengthStream_CreateReaderTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlXmlTest.SqlXml_fromZeroLengthXmlReader_CreateReaderTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Data.SqlTypes.SqlXmlTest.SqlXml_fromZeroLengthXmlReader_CreateReaderTest_withFragment" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="TypedDataSetGeneratorTest" success="True" time="0.009" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Data.TypedDataSetGeneratorTest.RelationConnectsSameTable" executed="False">
                        <reason>
                          <message><![CDATA[We cannot depend on CodeCompiler since it expects mcs to exist.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Data.TypedDataSetGeneratorTest.TestGenerateIdName" executed="True" success="True" time="0.002" asserts="14" />
                      <test-case name="MonoTests.System.Data.TypedDataSetGeneratorTest.TestGenerateIdNameNullName" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Data.TypedDataSetGeneratorTest.TestGenerateIdNameNullProvider" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="UniqueConstraintTest" success="True" time="0.008" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Data.UniqueConstraintTest.Ctor" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Data.UniqueConstraintTest.CtorExceptions" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Data.UniqueConstraintTest.DBNullAllowed" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Data.UniqueConstraintTest.EqualsAndHashCode" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Data.UniqueConstraintTest.Unique" executed="True" success="True" time="0.001" asserts="7" />
                    </results>
                  </test-suite>
                  <test-suite name="Xml" success="True" time="0.401" asserts="0">
                    <results>
                      <test-suite name="XmlDataDocumentTest" success="True" time="0.400" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Data.Xml.XmlDataDocumentTest.CloneNode" executed="True" success="True" time="0.111" asserts="5" />
                          <test-case name="MonoTests.System.Data.Xml.XmlDataDocumentTest.CreateElement1" executed="True" success="True" time="0.002" asserts="7" />
                          <test-case name="MonoTests.System.Data.Xml.XmlDataDocumentTest.CreateElement2" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Data.Xml.XmlDataDocumentTest.CreateElement3" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Data.Xml.XmlDataDocumentTest.EditingDataSet" executed="True" success="True" time="0.013" asserts="5" />
                          <test-case name="MonoTests.System.Data.Xml.XmlDataDocumentTest.EditingXmlTree" executed="True" success="True" time="0.029" asserts="4" />
                          <test-case name="MonoTests.System.Data.Xml.XmlDataDocumentTest.GetElementFromRow" executed="True" success="True" time="0.002" asserts="4" />
                          <test-case name="MonoTests.System.Data.Xml.XmlDataDocumentTest.GetRowFromElement" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Data.Xml.XmlDataDocumentTest.Navigator" executed="True" success="True" time="0.006" asserts="9" />
                          <test-case name="MonoTests.System.Data.Xml.XmlDataDocumentTest.NewInstance" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="MonoTests.System.Data.Xml.XmlDataDocumentTest.SimpleLoad" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Data.Xml.XmlDataDocumentTest.Test1" executed="True" success="True" time="0.204" asserts="12" />
                          <test-case name="MonoTests.System.Data.Xml.XmlDataDocumentTest.Test2" executed="True" success="True" time="0.004" asserts="29" />
                          <test-case name="MonoTests.System.Data.Xml.XmlDataDocumentTest.Test3" executed="True" success="True" time="0.004" asserts="18" />
                          <test-case name="MonoTests.System.Data.Xml.XmlDataDocumentTest.Test4" executed="True" success="True" time="0.004" asserts="35" />
                          <test-case name="MonoTests.System.Data.Xml.XmlDataDocumentTest.Test5" executed="True" success="True" time="0.002" asserts="7" />
                          <test-case name="MonoTests.System.Data.Xml.XmlDataDocumentTest.Test6" executed="True" success="True" time="0.002" asserts="4" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="XmlExportOfTypedDataSetTest" success="True" time="0.025" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Data.XmlExportOfTypedDataSetTest.ExportXmlSerializable_NestedClassMapping" executed="True" success="True" time="0.025" asserts="0" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="Xml" success="True" time="0.015" asserts="0">
                <results>
                  <test-suite name="XmlDataDocumentTest2" success="True" time="0.014" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Xml.XmlDataDocumentTest2.DataSet_AddRowAfterInitingXmlDataDocument" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Xml.XmlDataDocumentTest2.DataSet_ColumnNameWithSpaces" executed="True" success="True" time="0.002" asserts="2" />
                      <test-case name="MonoTests.System.Xml.XmlDataDocumentTest2.Rows_With_Null_Values" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Xml.XmlDataDocumentTest2.TestCreateElementAndRow" executed="True" success="True" time="0.002" asserts="19" />
                      <test-case name="MonoTests.System.Xml.XmlDataDocumentTest2.TestCtorNullArgs" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Xml.XmlDataDocumentTest2.TestDefaultCtor" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Xml.XmlDataDocumentTest2.TestLoadXml" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Xml.XmlDataDocumentTest2.TestMultipleDataDocFromDataSet" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Xml.XmlDataDocumentTest2.TestMultipleLoadError" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Xml.XmlDataDocumentTest2.TestMultipleLoadNoError" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite name="Monotests_Mono" success="True" time="0.334" asserts="0">
        <results>
          <test-suite name="Data" success="True" time="0.332" asserts="0">
            <results>
              <test-suite name="SqlExpressions" success="True" time="0.331" asserts="0">
                <results>
                  <test-suite name="ComparisonTest" success="True" time="0.001" asserts="0">
                    <results>
                      <test-case name="Monotests_Mono.Data.SqlExpressions.ComparisonTest.TestStringTrailingSpaceHandling" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="DataColumnCharTest" success="True" time="0.003" asserts="0">
                    <results>
                      <test-case name="Monotests_Mono.Data.SqlExpressions.DataColumnCharTest.Test1" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="Monotests_Mono.Data.SqlExpressions.DataColumnCharTest.Test2" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="Monotests_Mono.Data.SqlExpressions.DataColumnCharTest.Test3" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="DataColumnExprTest" success="True" time="0.008" asserts="0">
                    <results>
                      <test-case name="Monotests_Mono.Data.SqlExpressions.DataColumnExprTest.TestConcat" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Monotests_Mono.Data.SqlExpressions.DataColumnExprTest.TestDataColumnExpr0Literal" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Monotests_Mono.Data.SqlExpressions.DataColumnExprTest.TestDataColumnExpr0SingleColumnValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Monotests_Mono.Data.SqlExpressions.DataColumnExprTest.TestDataColumnExpr1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Monotests_Mono.Data.SqlExpressions.DataColumnExprTest.TestDataColumnExpr2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Monotests_Mono.Data.SqlExpressions.DataColumnExprTest.TestDataColumnLikeExpr" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="Monotests_Mono.Data.SqlExpressions.DataColumnExprTest.TestDataColumnSubstring" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Monotests_Mono.Data.SqlExpressions.DataColumnExprTest.TestIsNull" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="DateComparisonTest" success="True" time="0.294" asserts="0">
                    <results>
                      <test-case name="Monotests_Mono.Data.SqlExpressions.DateComparisonTest.TestDateComparisonRight" executed="True" success="True" time="0.293" asserts="1" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite name="Monotests_System" success="True" time="2.788" asserts="0">
        <results>
          <test-suite name="Data" success="True" time="2.777" asserts="0">
            <results>
              <test-suite name="DataTableTest3" success="True" time="0.763" asserts="0">
                <results>
                  <test-case name="Monotests_System.Data.DataTableTest3.XmlSchemaTest1" executed="True" success="True" time="0.573" asserts="65" />
                  <test-case name="Monotests_System.Data.DataTableTest3.XmlSchemaTest2" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="Monotests_System.Data.DataTableTest3.XmlSchemaTest3" executed="True" success="True" time="0.084" asserts="65" />
                  <test-case name="Monotests_System.Data.DataTableTest3.XmlSchemaTest5" executed="True" success="True" time="0.068" asserts="60" />
                  <test-case name="Monotests_System.Data.DataTableTest3.XmlSchemaTest6" executed="True" success="True" time="0.004" asserts="5" />
                  <test-case name="Monotests_System.Data.DataTableTest3.XmlSchemaTest7" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="Monotests_System.Data.DataTableTest3.XmlSchemaTest8" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="Monotests_System.Data.DataTableTest3.XmlSchemaTest9" executed="True" success="True" time="0.020" asserts="3" />
                </results>
              </test-suite>
              <test-suite name="DataTableTest4" success="True" time="1.510" asserts="0">
                <results>
                  <test-case name="Monotests_System.Data.DataTableTest4.XmlTest1" executed="True" success="True" time="0.308" asserts="3" />
                  <test-case name="Monotests_System.Data.DataTableTest4.XmlTest10" executed="True" success="True" time="0.062" asserts="236" />
                  <test-case name="Monotests_System.Data.DataTableTest4.XmlTest11" executed="True" success="True" time="0.004" asserts="6" />
                  <test-case name="Monotests_System.Data.DataTableTest4.XmlTest12" executed="True" success="True" time="0.005" asserts="6" />
                  <test-case name="Monotests_System.Data.DataTableTest4.XmlTest13" executed="True" success="True" time="0.003" asserts="9" />
                  <test-case name="Monotests_System.Data.DataTableTest4.XmlTest14" executed="True" success="True" time="0.032" asserts="10" />
                  <test-case name="Monotests_System.Data.DataTableTest4.XmlTest15" executed="True" success="True" time="0.154" asserts="25" />
                  <test-case name="Monotests_System.Data.DataTableTest4.XmlTest16" executed="True" success="True" time="0.003" asserts="6" />
                  <test-case name="Monotests_System.Data.DataTableTest4.XmlTest17" executed="True" success="True" time="0.003" asserts="5" />
                  <test-case name="Monotests_System.Data.DataTableTest4.XmlTest18" executed="True" success="True" time="0.004" asserts="13" />
                  <test-case name="Monotests_System.Data.DataTableTest4.XmlTest19" executed="True" success="True" time="0.151" asserts="7" />
                  <test-case name="Monotests_System.Data.DataTableTest4.XmlTest2" executed="True" success="True" time="0.057" asserts="74" />
                  <test-case name="Monotests_System.Data.DataTableTest4.XmlTest20" executed="True" success="True" time="0.004" asserts="7" />
                  <test-case name="Monotests_System.Data.DataTableTest4.XmlTest21" executed="True" success="True" time="0.004" asserts="10" />
                  <test-case name="Monotests_System.Data.DataTableTest4.XmlTest22" executed="True" success="True" time="0.012" asserts="5" />
                  <test-case name="Monotests_System.Data.DataTableTest4.XmlTest23" executed="True" success="True" time="0.017" asserts="13" />
                  <test-case name="Monotests_System.Data.DataTableTest4.XmlTest24" executed="True" success="True" time="0.040" asserts="3" />
                  <test-case name="Monotests_System.Data.DataTableTest4.XmlTest25" executed="True" success="True" time="0.003" asserts="4" />
                  <test-case name="Monotests_System.Data.DataTableTest4.XmlTest26" executed="True" success="True" time="0.121" asserts="11" />
                  <test-case name="Monotests_System.Data.DataTableTest4.XmlTest27" executed="True" success="True" time="0.045" asserts="19" />
                  <test-case name="Monotests_System.Data.DataTableTest4.XmlTest28" executed="True" success="True" time="0.004" asserts="9" />
                  <test-case name="Monotests_System.Data.DataTableTest4.XmlTest29" executed="True" success="True" time="0.037" asserts="18" />
                  <test-case name="Monotests_System.Data.DataTableTest4.XmlTest3" executed="True" success="True" time="0.043" asserts="5" />
                  <test-case name="Monotests_System.Data.DataTableTest4.XmlTest30" executed="True" success="True" time="0.041" asserts="11" />
                  <test-case name="Monotests_System.Data.DataTableTest4.XmlTest31" executed="True" success="True" time="0.046" asserts="40" />
                  <test-case name="Monotests_System.Data.DataTableTest4.XmlTest4" executed="True" success="True" time="0.076" asserts="74" />
                  <test-case name="Monotests_System.Data.DataTableTest4.XmlTest5" executed="True" success="True" time="0.098" asserts="74" />
                  <test-case name="Monotests_System.Data.DataTableTest4.XmlTest6" executed="True" success="True" time="0.017" asserts="109" />
                  <test-case name="Monotests_System.Data.DataTableTest4.XmlTest7" executed="True" success="True" time="0.017" asserts="77" />
                  <test-case name="Monotests_System.Data.DataTableTest4.XmlTest8" executed="True" success="True" time="0.026" asserts="12" />
                  <test-case name="Monotests_System.Data.DataTableTest4.XmlTest9" executed="True" success="True" time="0.030" asserts="58" />
                </results>
              </test-suite>
              <test-suite name="DataTableTest5" success="True" time="0.446" asserts="0">
                <results>
                  <test-case name="Monotests_System.Data.DataTableTest5.XmlTest1" executed="True" success="True" time="0.077" asserts="73" />
                  <test-case name="Monotests_System.Data.DataTableTest5.XmlTest10" executed="True" success="True" time="0.086" asserts="12" />
                  <test-case name="Monotests_System.Data.DataTableTest5.XmlTest11" executed="True" success="True" time="0.019" asserts="10" />
                  <test-case name="Monotests_System.Data.DataTableTest5.XmlTest14" executed="True" success="True" time="0.060" asserts="17" />
                  <test-case name="Monotests_System.Data.DataTableTest5.XmlTest15" executed="True" success="True" time="0.030" asserts="11" />
                  <test-case name="Monotests_System.Data.DataTableTest5.XmlTest16" executed="True" success="True" time="0.022" asserts="7" />
                  <test-case name="Monotests_System.Data.DataTableTest5.XmlTest2" executed="True" success="True" time="0.030" asserts="73" />
                  <test-case name="Monotests_System.Data.DataTableTest5.XmlTest3" executed="True" success="True" time="0.014" asserts="73" />
                  <test-case name="Monotests_System.Data.DataTableTest5.XmlTest4" executed="True" success="True" time="0.026" asserts="76" />
                  <test-case name="Monotests_System.Data.DataTableTest5.XmlTest5" executed="True" success="True" time="0.004" asserts="8" />
                  <test-case name="Monotests_System.Data.DataTableTest5.XmlTest6" executed="True" success="True" time="0.021" asserts="6" />
                  <test-case name="Monotests_System.Data.DataTableTest5.XmlTest7" executed="True" success="True" time="0.007" asserts="21" />
                  <test-case name="Monotests_System.Data.DataTableTest5.XmlTest8" executed="True" success="True" time="0.007" asserts="12" />
                  <test-case name="Monotests_System.Data.DataTableTest5.XmlTest9" executed="True" success="True" time="0.006" asserts="9" />
                </results>
              </test-suite>
              <test-suite name="XmlDataLoaderTest" success="True" time="0.007" asserts="0">
                <results>
                  <test-case name="Monotests_System.Data.XmlDataLoaderTest.XmlLoadTest" executed="True" success="True" time="0.003" asserts="0" />
                </results>
              </test-suite>
              <test-suite name="XmlDataReaderTest" success="True" time="0.037" asserts="0">
                <results>
                  <test-case name="Monotests_System.Data.XmlDataReaderTest.XmlLoadCustomTypesTest" executed="True" success="True" time="0.009" asserts="1" />
                  <test-case name="Monotests_System.Data.XmlDataReaderTest.XmlLoadTest" executed="True" success="True" time="0.022" asserts="0" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite name="MonoTests_System" success="True" time="0.984" asserts="0">
        <results>
          <test-suite name="Data" success="True" time="0.984" asserts="0">
            <results>
              <test-suite name="ConstraintExceptionTest" success="True" time="0.035" asserts="0">
                <results>
                  <test-case name="MonoTests_System.Data.ConstraintExceptionTest.Generate" executed="True" success="True" time="0.008" asserts="0" />
                </results>
              </test-suite>
              <test-suite name="DataSetTest2" success="True" time="0.558" asserts="0">
                <results>
                  <test-case name="MonoTests_System.Data.DataSetTest2.AcceptChanges" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.BeginInitTest" executed="True" success="True" time="0.002" asserts="12" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.Bug537229_BinFormatSerializer_Test" executed="True" success="True" time="0.004" asserts="26" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.CaseSensitive" executed="True" success="True" time="0.001" asserts="11" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.Clear" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.Clear_WithNoDataWithConstraint" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.Clone" executed="True" success="True" time="0.030" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.Copy" executed="True" success="True" time="0.006" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.CopyClone_RelationWithoutConstraints" executed="True" success="True" time="0.002" asserts="6" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.ctor" executed="True" success="True" time="0.002" asserts="1" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.ctor_ByDataSetName" executed="True" success="True" time="0.002" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.DataSetName" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.DataSetSpecificCulture" executed="True" success="True" time="0.007" asserts="1">
                    <properties>
                      <property name="_SETCULTURE" value="cs-CZ" />
                    </properties>
                  </test-case>
                  <test-case name="MonoTests_System.Data.DataSetTest2.EnforceConstraints" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.EnforceConstraints_CheckPrimaryConstraint" executed="True" success="True" time="0.008" asserts="0" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.EnforceConstraints_NonNullCols" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.extendedProperties" executed="True" success="True" time="0.002" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.GetChanges" executed="True" success="True" time="0.003" asserts="3" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.GetChanges_ByDataRowState" executed="True" success="True" time="0.003" asserts="5" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.GetXml" executed="True" success="True" time="0.004" asserts="1" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.HasChanges" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.HasChanges_ByDataRowState" executed="True" success="True" time="0.004" asserts="5" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.HasErrors" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.InferXmlSchema_BasicXml" executed="True" success="True" time="0.005" asserts="7" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.InferXmlSchema_elementText1" executed="True" success="True" time="0.032" asserts="9" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.InferXmlSchema_elementText2" executed="True" success="True" time="0.004" asserts="7" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.InferXmlSchema_IgnoreNameSpace" executed="True" success="True" time="0.002" asserts="13" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.InferXmlSchema_IgnoreNameSpaces" executed="True" success="True" time="0.002" asserts="3" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.InferXmlSchema_inferingTables1" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.InferXmlSchema_inferingTables2" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.InferXmlSchema_inferingTables3" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.InferXmlSchema_inferingTables4" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.InferXmlSchema_inferingTables5" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.InferXmlSchema_inferringColumns1" executed="True" success="True" time="0.001" asserts="9" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.InferXmlSchema_inferringColumns2" executed="True" success="True" time="0.001" asserts="9" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.InferXmlSchema_inferringRelationships1" executed="True" success="True" time="0.013" asserts="29" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.InferXmlSchema_WithoutIgnoreNameSpaces" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.LoadTest1" executed="True" success="True" time="0.002" asserts="15" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.LoadTest2" executed="True" success="True" time="0.002" asserts="15" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.Locale" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.Merge_ByComplexDataSet" executed="True" success="True" time="0.008" asserts="52" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.Merge_ByDataRowsNoPreserveIgnoreMissingSchema" executed="True" success="True" time="0.002" asserts="3" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.Merge_ByDataRowsPreserveMissingSchema" executed="True" success="True" time="0.003" asserts="16" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.Merge_ByDataSet" executed="True" success="True" time="0.002" asserts="6" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.Merge_ByDataSetPreserve" executed="True" success="True" time="0.002" asserts="6" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.Merge_ByDataSetPreserveMissingSchemaAction" executed="True" success="True" time="0.002" asserts="4" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.Merge_ByDataTable" executed="True" success="True" time="0.002" asserts="5" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.Merge_ByDataTablePreserveMissingSchemaAction" executed="True" success="True" time="0.011" asserts="16" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.Merge_ConstraintsFromReadXmlSchema" executed="True" success="True" time="0.115" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.Merge_DuplicateConstraints" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.Merge_DuplicateConstraints_1" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.Merge_MissingColumn" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.Merge_MissingConstraint" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.Merge_MissingEventHandler" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.Merge_PrimaryKeys_IncorrectOrder" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.Merge_RelationWithoutConstraints" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.MergeFailed" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.MergeTest_ColumnTypeMismatch" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.MergeTest_SameDataSet_536194" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.Namespace" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.ParentDataTableSchema" executed="True" success="True" time="0.033" asserts="14" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.Prefix" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.ReadWriteXmlSchema_Nested" executed="True" success="True" time="0.002" asserts="3" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.ReadXml_Diffgram_MissingSchema" executed="True" success="True" time="0.002" asserts="4" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.ReadXml_Strm2" executed="True" success="True" time="0.002" asserts="14" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.ReadXml_Strm3" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.ReadXml_Strm4" executed="True" success="True" time="0.004" asserts="15" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.ReadXml_Strm5" executed="True" success="True" time="0.006" asserts="13" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.ReadXml_Strm6" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.ReadXmlSchema_2" executed="True" success="True" time="0.007" asserts="0" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.ReadXmlSchema_ByFileName" executed="True" success="True" time="0.003" asserts="7" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.ReadXmlSchema_ByStream" executed="True" success="True" time="0.002" asserts="7" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.ReadXmlSchema_ByTextReader" executed="True" success="True" time="0.002" asserts="7" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.ReadXmlSchema_ByXmlReader" executed="True" success="True" time="0.002" asserts="7" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.ReadXmlSchema_Nested" executed="True" success="True" time="0.041" asserts="5" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.ReadXmlSchema_TableOrder" executed="True" success="True" time="0.034" asserts="3" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.RejectChanges" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.Relations" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.Reset" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.SchemaSerializationModeTest" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.ShouldSerializeRelations" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.ShouldSerializeTables" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.Tables" executed="True" success="True" time="0.001" asserts="9" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.WriteXml_ByTextWriterXmlWriteMode" executed="True" success="True" time="0.002" asserts="1" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.WriteXml_Morethan2Relations" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.WriteXml_Stream" executed="True" success="True" time="0.002" asserts="4" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.WriteXmlSchema_ConstraintNameWithSpaces" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.WriteXmlSchema_ForignKeyConstraint" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.WriteXmlSchema_RelationAnnotation" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests_System.Data.DataSetTest2.WriteXmlSchema_Relations_ForeignKeys" executed="True" success="True" time="0.003" asserts="14" />
                </results>
              </test-suite>
              <test-suite name="DataTableCollectionTest2" success="True" time="0.060" asserts="0">
                <results>
                  <test-case name="MonoTests_System.Data.DataTableCollectionTest2.Add" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests_System.Data.DataTableCollectionTest2.AddRange" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataTableCollectionTest2.AddRange_ArrayWithNull" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataTableCollectionTest2.AddRange_NullValue" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests_System.Data.DataTableCollectionTest2.AddTable_DiffNamespaceTest" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests_System.Data.DataTableCollectionTest2.AddTwoTables" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataTableCollectionTest2.CanRemove" executed="True" success="True" time="0.002" asserts="1" />
                  <test-case name="MonoTests_System.Data.DataTableCollectionTest2.CanRemove_NullValue" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests_System.Data.DataTableCollectionTest2.CanRemove_PartOfConstraint" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataTableCollectionTest2.CanRemove_PartOfRelation" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataTableCollectionTest2.CanRemove_TableDoesntBelong" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests_System.Data.DataTableCollectionTest2.CollectionChanged" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataTableCollectionTest2.CollectionChanging" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataTableCollectionTest2.Contains" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests_System.Data.DataTableCollectionTest2.Contains_DiffNamespaceTest" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests_System.Data.DataTableCollectionTest2.CopyTo" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataTableCollectionTest2.Count" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests_System.Data.DataTableCollectionTest2.DataTableCollection_Add_D1" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests_System.Data.DataTableCollectionTest2.DataTableCollection_Add_D2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests_System.Data.DataTableCollectionTest2.DataTableCollection_Add_D3" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests_System.Data.DataTableCollectionTest2.DataTableCollection_Add_D4" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests_System.Data.DataTableCollectionTest2.DataTableCollection_Add_S1" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataTableCollectionTest2.DataTableCollection_Add_S2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests_System.Data.DataTableCollectionTest2.DataTableCollection_Clear1" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests_System.Data.DataTableCollectionTest2.DataTableCollection_Clear2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests_System.Data.DataTableCollectionTest2.DataTableCollection_Remove_D1" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests_System.Data.DataTableCollectionTest2.DataTableCollection_Remove_D2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests_System.Data.DataTableCollectionTest2.DataTableCollection_Remove_D3" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests_System.Data.DataTableCollectionTest2.DataTableCollection_Remove_S1" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests_System.Data.DataTableCollectionTest2.DataTableCollection_Remove_S2" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests_System.Data.DataTableCollectionTest2.DataTableCollection_Remove_S3" executed="True" success="True" time="0.004" asserts="0" />
                  <test-case name="MonoTests_System.Data.DataTableCollectionTest2.DataTableCollection_RemoveAt_I1" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataTableCollectionTest2.DataTableCollection_RemoveAt_I2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests_System.Data.DataTableCollectionTest2.DataTableCollection_RemoveAt_I3" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests_System.Data.DataTableCollectionTest2.GetEnumerator" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests_System.Data.DataTableCollectionTest2.IndexOf_DiffNamespaceTest" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests_System.Data.DataTableCollectionTest2.Item" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests_System.Data.DataTableCollectionTest2.Remove_DiffNamespaceTest" executed="True" success="True" time="0.001" asserts="2" />
                </results>
              </test-suite>
              <test-suite name="DataTableTest2" success="True" time="0.137" asserts="0">
                <results>
                  <test-case name="MonoTests_System.Data.DataTableTest2.AcceptChanges" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.BeginInit_Cols_Constraints" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.BeginInit_PrimaryKey_1" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.BeginInit_PrimaryKey_2" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.BeginInit_PrimaryKey_3" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.BeginLoadData" executed="True" success="True" time="0.004" asserts="17" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.CaseSensitive" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.ChildRelations" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.Clear" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.Clone" executed="True" success="True" time="0.001" asserts="13" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.ColumnChanged" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.ColumnChanging" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.Columns" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.Compute" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.Compute_WithoutSchemaData_Test" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.Constraints" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.Copy" executed="True" success="True" time="0.005" asserts="31" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.CreateInstance" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.ctor" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.ctor_ByName" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.DataSet" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.DataTable_Clone" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.DefaultView" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.DisplayExpression" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.EndLoadData" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.EndLoadData_MergeDuplcateValues" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.ExtendedProperties" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.GetChanges" executed="True" success="True" time="0.001" asserts="25" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.GetChanges_ByDataRowState" executed="True" success="True" time="0.002" asserts="73" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.GetErrors" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.GetHashCode" executed="True" success="True" time="0.000" asserts="10" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.GetType" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.HasErrors" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.ImportRow" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.LoadDataRow" executed="True" success="True" time="0.005" asserts="8" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.LoadDataRow_DefaultValueError" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.LoadDataRow_DuplicateValues" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.LoadDataRow_ExistingData" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.LoadDataRow_WithoutBeginLoadData" executed="True" success="True" time="0.001" asserts="12" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.LoadDataRow1_Column_ReadOnly" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.Locale" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.Merge_SchemaTest" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.Merge_TestData" executed="True" success="True" time="0.006" asserts="5" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.MinimumCapacity" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.Namespace" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.NewRow" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.OnColumnChanged" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.OnColumnChanging" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.OnRemoveColumn" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.OnRowChanged" executed="True" success="True" time="0.001" asserts="17" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.OnRowChanging" executed="True" success="True" time="0.001" asserts="17" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.OnRowDeleted" executed="True" success="True" time="0.001" asserts="17" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.OnRowDeleting" executed="True" success="True" time="0.003" asserts="17" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.ParentRelations" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.Prefix" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.PrimaryKey_OnFailing" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.RejectChanges" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.RejectChanges_CheckIndex" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.Reset" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.RowChanged" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.RowChanging" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.RowDeleted" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.RowDeleting" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.Rows" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.Select" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.Select_BoolColumn" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.Select_ByFilter" executed="True" success="True" time="0.020" asserts="11" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.Select_ByFilterDataViewRowState" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.Select_NonBooleanFilter" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.Select_OrderOfRows" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.Select_StringString" executed="True" success="True" time="0.003" asserts="4" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.Select_StringString_3" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.TableName" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataTableTest2.ToString" executed="True" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite name="DataViewTest2" success="True" time="0.066" asserts="0">
                <results>
                  <test-case name="MonoTests_System.Data.DataViewTest2.AcceptChanges" executed="True" success="True" time="0.005" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataViewTest2.AddNew" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests_System.Data.DataViewTest2.AllowDelete" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests_System.Data.DataViewTest2.AllowEdit" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests_System.Data.DataViewTest2.AllowNew" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests_System.Data.DataViewTest2.ApplyDefaultSort" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests_System.Data.DataViewTest2.ClearTable" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests_System.Data.DataViewTest2.CopyTo" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests_System.Data.DataViewTest2.ctor_Complex" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests_System.Data.DataViewTest2.ctor_DataTable" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataViewTest2.ctor_Empty" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests_System.Data.DataViewTest2.ctor_ExpectedExceptions" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests_System.Data.DataViewTest2.DataView_ListChangedEventTest" executed="True" success="True" time="0.001" asserts="12" />
                  <test-case name="MonoTests_System.Data.DataViewTest2.DataViewManager" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests_System.Data.DataViewTest2.Delete" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests_System.Data.DataViewTest2.Find_ByArray" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataViewTest2.Find_ByObject" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests_System.Data.DataViewTest2.FindRows_ByKey" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests_System.Data.DataViewTest2.FindRows_ByKeys" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests_System.Data.DataViewTest2.GetEnumerator" executed="True" success="True" time="0.000" asserts="13" />
                  <test-case name="MonoTests_System.Data.DataViewTest2.Item" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests_System.Data.DataViewTest2.ListChanged" executed="True" success="True" time="0.001" asserts="12" />
                  <test-case name="MonoTests_System.Data.DataViewTest2.RowFilter" executed="True" success="True" time="0.002" asserts="4" />
                  <test-case name="MonoTests_System.Data.DataViewTest2.RowStateFilter" executed="True" success="True" time="0.002" asserts="5" />
                  <test-case name="MonoTests_System.Data.DataViewTest2.Sort" executed="True" success="True" time="0.002" asserts="5" />
                  <test-case name="MonoTests_System.Data.DataViewTest2.Table" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests_System.Data.DataViewTest2.TestDefaultValues" executed="True" success="True" time="0.001" asserts="7" />
                  <test-case name="MonoTests_System.Data.DataViewTest2.TestEquals_SameTableDiffViewProp" executed="True" success="True" time="0.002" asserts="18" />
                  <test-case name="MonoTests_System.Data.DataViewTest2.TestTableProperty" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests_System.Data.DataViewTest2.ToTable_SimpleTest" executed="True" success="True" time="0.003" asserts="23" />
                  <test-case name="MonoTests_System.Data.DataViewTest2.ToTableTest_DataValidity" executed="True" success="True" time="0.003" asserts="22" />
                </results>
              </test-suite>
              <test-suite name="DBConcurrencyExceptionTest" success="True" time="0.008" asserts="0">
                <results>
                  <test-case name="MonoTests_System.Data.DBConcurrencyExceptionTest.Constructor1" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests_System.Data.DBConcurrencyExceptionTest.Constructor2" executed="True" success="True" time="0.001" asserts="13" />
                  <test-case name="MonoTests_System.Data.DBConcurrencyExceptionTest.Constructor3" executed="True" success="True" time="0.001" asserts="20" />
                  <test-case name="MonoTests_System.Data.DBConcurrencyExceptionTest.Constructor4" executed="True" success="True" time="0.001" asserts="24" />
                  <test-case name="MonoTests_System.Data.DBConcurrencyExceptionTest.Row" executed="True" success="True" time="0.000" asserts="6" />
                </results>
              </test-suite>
              <test-suite name="DeletedRowInaccessibleExceptionTest" success="True" time="0.001" asserts="0">
                <results>
                  <test-case name="MonoTests_System.Data.DeletedRowInaccessibleExceptionTest.Generate" executed="True" success="True" time="0.001" asserts="0" />
                </results>
              </test-suite>
              <test-suite name="DuplicateNameExceptionTest" success="True" time="0.002" asserts="0">
                <results>
                  <test-case name="MonoTests_System.Data.DuplicateNameExceptionTest.Generate" executed="True" success="True" time="0.001" asserts="0" />
                </results>
              </test-suite>
              <test-suite name="EvaluateExceptionTest" success="True" time="0.001" asserts="0">
                <results>
                  <test-case name="MonoTests_System.Data.EvaluateExceptionTest.Generate" executed="True" success="True" time="0.001" asserts="0" />
                </results>
              </test-suite>
              <test-suite name="ForeignKeyConstraintTest2" success="True" time="0.041" asserts="0">
                <results>
                  <test-case name="MonoTests_System.Data.ForeignKeyConstraintTest2.acceptRejectRule" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests_System.Data.ForeignKeyConstraintTest2.Columns" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests_System.Data.ForeignKeyConstraintTest2.constraintName" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests_System.Data.ForeignKeyConstraintTest2.ctor_DclmDclm" executed="True" success="True" time="0.001" asserts="15" />
                  <test-case name="MonoTests_System.Data.ForeignKeyConstraintTest2.ctor_DclmDclm1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests_System.Data.ForeignKeyConstraintTest2.ctor_DclmDclm2" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests_System.Data.ForeignKeyConstraintTest2.ctor_DclmDclm3" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests_System.Data.ForeignKeyConstraintTest2.ctor_NameParentColChildCol" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests_System.Data.ForeignKeyConstraintTest2.ctor_NameParentColsChildCols" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests_System.Data.ForeignKeyConstraintTest2.ctor_ParentColChildCol" executed="True" success="True" time="0.002" asserts="18" />
                  <test-case name="MonoTests_System.Data.ForeignKeyConstraintTest2.deleteRule" executed="True" success="True" time="0.003" asserts="10" />
                  <test-case name="MonoTests_System.Data.ForeignKeyConstraintTest2.Equals" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests_System.Data.ForeignKeyConstraintTest2.extendedProperties" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests_System.Data.ForeignKeyConstraintTest2.ForeignConstraint_DateTimeModeTest" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests_System.Data.ForeignKeyConstraintTest2.ParentChildSameColumn" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests_System.Data.ForeignKeyConstraintTest2.RelatedColumns" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests_System.Data.ForeignKeyConstraintTest2.RelatedTable" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests_System.Data.ForeignKeyConstraintTest2.Table" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests_System.Data.ForeignKeyConstraintTest2.ToString" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests_System.Data.ForeignKeyConstraintTest2.UpdateRule1" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests_System.Data.ForeignKeyConstraintTest2.UpdateRule2" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests_System.Data.ForeignKeyConstraintTest2.UpdateRule3" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests_System.Data.ForeignKeyConstraintTest2.UpdateRule4" executed="True" success="True" time="0.001" asserts="1" />
                </results>
              </test-suite>
              <test-suite name="InRowChangingEventExceptionTest" success="True" time="0.001" asserts="0">
                <results>
                  <test-case name="MonoTests_System.Data.InRowChangingEventExceptionTest.Generate" executed="True" success="True" time="0.001" asserts="1" />
                </results>
              </test-suite>
              <test-suite name="InvalidConstraintExceptionTest" success="True" time="0.001" asserts="0">
                <results>
                  <test-case name="MonoTests_System.Data.InvalidConstraintExceptionTest.Generate" executed="True" success="True" time="0.001" asserts="0" />
                </results>
              </test-suite>
              <test-suite name="MissingPrimaryKeyExceptionTest" success="True" time="0.002" asserts="0">
                <results>
                  <test-case name="MonoTests_System.Data.MissingPrimaryKeyExceptionTest.Generate1" executed="False">
                    <reason>
                      <message><![CDATA[Fixture class is not public]]></message>
                    </reason>
                  </test-case>
                  <test-case name="MonoTests_System.Data.MissingPrimaryKeyExceptionTest.Generate2" executed="False">
                    <reason>
                      <message><![CDATA[Fixture class is not public]]></message>
                    </reason>
                  </test-case>
                </results>
              </test-suite>
              <test-suite name="NoNullAllowedExceptionTest" success="True" time="0.003" asserts="0">
                <results>
                  <test-case name="MonoTests_System.Data.NoNullAllowedExceptionTest.Generate" executed="True" success="True" time="0.003" asserts="0" />
                </results>
              </test-suite>
              <test-suite name="ReadOnlyExceptionTest" success="True" time="0.001" asserts="0">
                <results>
                  <test-case name="MonoTests_System.Data.ReadOnlyExceptionTest.Generate" executed="True" success="True" time="0.001" asserts="0" />
                </results>
              </test-suite>
              <test-suite name="RowNotInTableExceptionTest" success="True" time="0.002" asserts="0">
                <results>
                  <test-case name="MonoTests_System.Data.RowNotInTableExceptionTest.Generate" executed="True" success="True" time="0.001" asserts="0" />
                </results>
              </test-suite>
              <test-suite name="SyntaxErrorExceptionTest" success="True" time="0.001" asserts="0">
                <results>
                  <test-case name="MonoTests_System.Data.SyntaxErrorExceptionTest.Generate" executed="True" success="True" time="0.001" asserts="0" />
                </results>
              </test-suite>
              <test-suite name="UniqueConstraintTest2" success="True" time="0.023" asserts="0">
                <results>
                  <test-case name="MonoTests_System.Data.UniqueConstraintTest2.Columns" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests_System.Data.UniqueConstraintTest2.constraintName" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests_System.Data.UniqueConstraintTest2.ctor_DataColumn" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests_System.Data.UniqueConstraintTest2.ctor_DataColumnNoPrimary" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests_System.Data.UniqueConstraintTest2.ctor_DataColumnPrimary" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests_System.Data.UniqueConstraintTest2.ctor_DataColumns" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests_System.Data.UniqueConstraintTest2.ctor_NameDataColumn" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests_System.Data.UniqueConstraintTest2.ctor_NameDataColumnPrimary" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests_System.Data.UniqueConstraintTest2.ctor_NameDataColumns" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests_System.Data.UniqueConstraintTest2.ctor_NameDataColumnsPrimary" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests_System.Data.UniqueConstraintTest2.Equals_O" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests_System.Data.UniqueConstraintTest2.extendedProperties" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests_System.Data.UniqueConstraintTest2.IsPrimaryKey" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests_System.Data.UniqueConstraintTest2.Table" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests_System.Data.UniqueConstraintTest2.ToString" executed="True" success="True" time="0.000" asserts="2" />
                </results>
              </test-suite>
              <test-suite name="VersionNotFoundExceptionTest" success="True" time="0.003" asserts="0">
                <results>
                  <test-case name="MonoTests_System.Data.VersionNotFoundExceptionTest.Generate1" executed="False">
                    <reason>
                      <message><![CDATA[Fixture class is not public]]></message>
                    </reason>
                  </test-case>
                  <test-case name="MonoTests_System.Data.VersionNotFoundExceptionTest.Generate2" executed="False">
                    <reason>
                      <message><![CDATA[Fixture class is not public]]></message>
                    </reason>
                  </test-case>
                  <test-case name="MonoTests_System.Data.VersionNotFoundExceptionTest.Generate3" executed="False">
                    <reason>
                      <message><![CDATA[Fixture class is not public]]></message>
                    </reason>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite name="Test" success="True" time="0.094" asserts="0">
        <results>
          <test-suite name="System" success="True" time="0.093" asserts="0">
            <results>
              <test-suite name="Data" success="True" time="0.092" asserts="0">
                <results>
                  <test-suite name="Common" success="True" time="0.091" asserts="0">
                    <results>
                      <test-suite name="DbDataReaderTest" success="True" time="0.090" asserts="0">
                        <results>
                          <test-case name="Test.System.Data.Common.DbDataReaderTest.GetFieldValueTest" executed="True" success="True" time="0.002" asserts="11" />
                          <test-case name="Test.System.Data.Common.DbDataReaderTest.GetStreamTest" executed="True" success="True" time="0.017" asserts="12" />
                          <test-case name="Test.System.Data.Common.DbDataReaderTest.GetTextReader" executed="True" success="True" time="0.002" asserts="8" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>