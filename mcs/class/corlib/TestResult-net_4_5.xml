<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="corlib_test_net_4_5.dll" total="9908" failures="0" not-run="98" date="2014-06-29" time="12:30:37">
  <environment nunit-version="2.4.8.0" clr-version="4.0.30319.17020" os-version="Unix 3.15.0.8" platform="Unix" cwd="/store/dash/mono-tizen/mono-sources/mcs/class/corlib" machine-name="mini" user="dash" user-domain="mini" />
  <culture-info current-culture="" current-uiculture="" />
  <test-suite name="corlib_test_net_4_5.dll" success="True" time="111.251" asserts="0">
    <results>
      <test-suite name="MonoTests" success="True" time="111.246" asserts="0">
        <results>
          <test-suite name="DataConverterTest" success="True" time="0.035" asserts="0">
            <results>
              <test-case name="MonoTests.DataConverterTest.ArrayTests" executed="True" success="True" time="0.009" asserts="1" />
              <test-case name="MonoTests.DataConverterTest.PackTests" executed="True" success="True" time="0.006" asserts="6" />
              <test-case name="MonoTests.DataConverterTest.StringAlignment" executed="True" success="True" time="0.003" asserts="2" />
              <test-case name="MonoTests.DataConverterTest.UnpackTests" executed="True" success="True" time="0.003" asserts="1" />
            </results>
          </test-suite>
          <test-suite name="Microsoft" success="True" time="0.380" asserts="0">
            <results>
              <test-suite name="Win32" success="True" time="0.372" asserts="0">
                <results>
                  <test-suite name="RegistryKeyTest" success="True" time="0.365" asserts="0">
                    <results>
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.bug79051" executed="True" success="True" time="0.078" asserts="0" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.bug79059" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.bugnew1" executed="True" success="True" time="0.008" asserts="27" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.bugnew2" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.bugnew3" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.bugnew4" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.Close_Local_Hive" executed="True" success="True" time="0.002" asserts="6" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.Close_Local_Key" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.Close_Remote_Hive" executed="False">
                        <reason>
                          <message><![CDATA[Running on Unix.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.Close_Remote_Key" executed="False">
                        <reason>
                          <message><![CDATA[Running on Unix.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.CreateSubKey" executed="True" success="True" time="0.002" asserts="8" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.CreateSubKey_Key_ReadOnly" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.CreateSubKey_Key_Removed" executed="True" success="True" time="0.004" asserts="4" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.CreateSubKey_Name_MaxLength" executed="True" success="True" time="0.002" asserts="9" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.CreateSubKey_Name_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.CreateSubKey_Volatile" executed="True" success="True" time="0.003" asserts="1" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.CreateSubKey_Volatile_Child" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.CreateSubKey_Volatile_Conflict" executed="True" success="True" time="0.002" asserts="10" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.DeleteSubKey" executed="True" success="True" time="0.005" asserts="3" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.DeleteSubKey_Key_DoesNotExist" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.DeleteSubKey_Key_HasChildKeys" executed="True" success="True" time="0.002" asserts="4" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.DeleteSubKey_Key_ReadOnly" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.DeleteSubKey_Key_Removed" executed="True" success="True" time="0.002" asserts="8" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.DeleteSubKey_Name_MaxLength" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.DeleteSubKey_Name_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.DeleteSubKey_Volatile" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.DeleteSubKeyTree" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.DeleteSubKeyTree_Key_DoesNotExist" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.DeleteSubKeyTree_Key_DoesNotExist_Overload" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.DeleteSubKeyTree_Key_ReadOnly" executed="True" success="True" time="0.002" asserts="3" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.DeleteSubKeyTree_Key_Removed" executed="True" success="True" time="0.002" asserts="8" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.DeleteSubKeyTree_Name_MaxLength" executed="True" success="True" time="0.002" asserts="7" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.DeleteSubKeyTree_Name_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.DeleteValue" executed="True" success="True" time="0.004" asserts="23" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.DeleteValue_Key_ReadOnly" executed="True" success="True" time="0.003" asserts="18" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.DeleteValue_Key_Removed" executed="True" success="True" time="0.005" asserts="3" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.DeleteValue_Name_Empty" executed="True" success="True" time="0.003" asserts="28" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.DeleteValue_Name_Null" executed="True" success="True" time="0.003" asserts="20" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.DeleteValue_Value_DoesNotExist" executed="True" success="True" time="0.002" asserts="9" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.FromHandle" executed="False">
                        <reason>
                          <message><![CDATA[Running on Unix.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.FromHandle_InvalidHandle" executed="False">
                        <reason>
                          <message><![CDATA[Running on Unix.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.GetSubKeyNames_Volatile" executed="True" success="True" time="0.002" asserts="3" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.GetSubKeyNamesTest" executed="True" success="True" time="0.003" asserts="20" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.GetValue" executed="True" success="True" time="0.038" asserts="8" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.GetValue_Expand" executed="True" success="True" time="0.006" asserts="36" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.GetValue_Key_Removed" executed="True" success="True" time="0.002" asserts="6" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.GetValue_Name_Empty" executed="True" success="True" time="0.003" asserts="16" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.GetValue_Name_Null" executed="True" success="True" time="0.003" asserts="16" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.GetValueNames" executed="True" success="True" time="0.004" asserts="8" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.GetValueNames_Key_Removed" executed="True" success="True" time="0.002" asserts="7" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.Handle" executed="False">
                        <reason>
                          <message><![CDATA[Running on Unix.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.OpenRemoteBaseKey" executed="False">
                        <reason>
                          <message><![CDATA[Running on Unix.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.OpenRemoteBaseKey_MachineName_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.OpenSubKey" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.OpenSubKey_Key_DoesNotExist" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.OpenSubKey_Key_Removed" executed="True" success="True" time="0.002" asserts="7" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.OpenSubKey_Name_MaxLength" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.OpenSubKey_Name_Null" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.SetValue_Int32" executed="True" success="True" time="0.002" asserts="7" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.SetValue1_Boolean" executed="True" success="True" time="0.002" asserts="7" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.SetValue1_Byte" executed="True" success="True" time="0.002" asserts="7" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.SetValue1_ByteArray" executed="True" success="True" time="0.004" asserts="7" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.SetValue1_DateTime" executed="True" success="True" time="0.011" asserts="7" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.SetValue1_EntityReferences" executed="True" success="True" time="0.003" asserts="14" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.SetValue1_Int64" executed="True" success="True" time="0.002" asserts="7" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.SetValue1_Key_ReadOnly" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.SetValue1_Key_Removed" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.SetValue1_Name_Empty" executed="True" success="True" time="0.001" asserts="16" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.SetValue1_Name_MaxLength" executed="True" success="True" time="0.001" asserts="9" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.SetValue1_Name_Null" executed="True" success="True" time="0.001" asserts="16" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.SetValue1_String" executed="True" success="True" time="0.002" asserts="7" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.SetValue1_StringArray" executed="True" success="True" time="0.002" asserts="7" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.SetValue1_Value_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.SetValue2_Key_ReadOnly" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.SetValue2_Key_Removed" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.SetValue2_Name_Empty" executed="True" success="True" time="0.001" asserts="16" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.SetValue2_Name_MaxLength" executed="True" success="True" time="0.001" asserts="9" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.SetValue2_Name_Null" executed="True" success="True" time="0.001" asserts="16" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.SetValue2_Value_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.SubKeyCount" executed="True" success="True" time="0.003" asserts="9" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.SubKeyCount_Key_Removed" executed="True" success="True" time="0.002" asserts="8" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.TestHandle" executed="False">
                        <reason>
                          <message><![CDATA[Running on Unix.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.TypeCastTests" executed="True" success="True" time="0.011" asserts="37" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.ValueCount" executed="True" success="True" time="0.002" asserts="12" />
                      <test-case name="MonoTests.Microsoft.Win32.RegistryKeyTest.ValueCount_Key_Removed" executed="True" success="True" time="0.002" asserts="11" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite name="System" success="True" time="110.805" asserts="0">
            <results>
              <test-suite name="ActivatorTest" success="True" time="0.314" asserts="0">
                <results>
                  <test-case name="MonoTests.System.ActivatorTest.CreateInstance_ArgIterator" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ActivatorTest.CreateInstance_CustomType" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ActivatorTest.CreateInstance_NotMarshalByReferenceWithActivationAttributes" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ActivatorTest.CreateInstance_Nullable" executed="True" success="True" time="0.002" asserts="5">
                    <categories>
                      <category name="TargetJvmNotWorking" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.ActivatorTest.CreateInstance_RuntimeArgumentHandle" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ActivatorTest.CreateInstance_StringNull" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ActivatorTest.CreateInstance_StringString" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.ActivatorTest.CreateInstance_StringTypeNameDoesNotExists" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ActivatorTest.CreateInstance_Type" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.ActivatorTest.CreateInstance_TypeBool" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.ActivatorTest.CreateInstance_TypeBuilder" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ActivatorTest.CreateInstance_TypedReference" executed="True" success="True" time="0.006" asserts="0" />
                  <test-case name="MonoTests.System.ActivatorTest.CreateInstance_TypeNull" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ActivatorTest.CreateInstance_TypeObjectArray" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.ActivatorTest.CreateInstance_Void" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ActivatorTest.CreateInstanceAbstract1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ActivatorTest.CreateInstanceAbstract2" executed="True" success="True" time="0.000" asserts="0">
                    <categories>
                      <category name="TargetJvmNotWorking" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.ActivatorTest.CreateInstanceAbstract3" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ActivatorTest.CreateInstanceAbstract4" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ActivatorTest.CreateInstanceAbstract5" executed="True" success="True" time="0.000" asserts="0">
                    <categories>
                      <category name="TargetJvmNotWorking" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.ActivatorTest.CreateInstanceCrossDomain" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ActivatorTest.CreateInstanceCrossDomainNonSerializableArgs" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ActivatorTest.CreateInstanceCrossDomainNonSerializableAtts" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ActivatorTest.CreateInstanceCustomDomain" executed="True" success="True" time="0.237" asserts="0" />
                  <test-case name="MonoTests.System.ActivatorTest.CreateInstanceFrom" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.ActivatorTest.CreateInstanceNonSerializableAtts" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ActivatorTest.CreateInstanceParamsConstructor" executed="True" success="True" time="0.001" asserts="12" />
                  <test-case name="MonoTests.System.ActivatorTest.CreateInstanceSimpleParamsConstructor" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.ActivatorTest.GenericType_Open1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ActivatorTest.GenericType_Open2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ActivatorTest.GenericTypes_Closed" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.ActivatorTest.GetObject_TypeNull" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ActivatorTest.GetObject_UrlNull" executed="True" success="True" time="0.022" asserts="0">
                    <categories>
                      <category name="TargetJvmNotWorking" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.ActivatorTest.Unification_FromFx10" executed="True" success="True" time="0.002" asserts="2">
                    <categories>
                      <category name="TargetJvmNotSupported" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.ActivatorTest.Unification_FromFx11" executed="True" success="True" time="0.000" asserts="2">
                    <categories>
                      <category name="TargetJvmNotSupported" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.ActivatorTest.Unification_FromFx20" executed="True" success="True" time="0.000" asserts="2">
                    <categories>
                      <category name="TargetJvmNotSupported" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.ActivatorTest.Unification_FromFx99_Corlib" executed="True" success="True" time="0.000" asserts="1">
                    <categories>
                      <category name="TargetJvmNotSupported" />
                    </categories>
                  </test-case>
                </results>
              </test-suite>
              <test-suite name="AggregateExceptionTest" success="True" time="0.022" asserts="0">
                <results>
                  <test-case name="MonoTests.System.AggregateExceptionTest.FlattenTestCase" executed="True" success="True" time="0.007" asserts="2" />
                  <test-case name="MonoTests.System.AggregateExceptionTest.GetBaseException_stops_at_first_inner_exception_that_is_not_AggregateException" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.AggregateExceptionTest.GetBaseWithInner" executed="True" success="True" time="0.002" asserts="2" />
                  <test-case name="MonoTests.System.AggregateExceptionTest.Handle_AllHandled" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.AggregateExceptionTest.Handle_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.AggregateExceptionTest.Handle_Unhandled" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.AggregateExceptionTest.InitializationWithNullInnerValuesTest" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.AggregateExceptionTest.InitializationWithNullValuesTest" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.AggregateExceptionTest.SimpleInnerExceptionTestCase" executed="True" success="True" time="0.001" asserts="7" />
                </results>
              </test-suite>
              <test-suite name="AppDomainManagerTest" success="True" time="0.001" asserts="0">
                <results>
                  <test-case name="MonoTests.System.AppDomainManagerTest.CheckSecuritySettings" executed="True" success="True" time="0.001" asserts="2" />
                </results>
              </test-suite>
              <test-suite name="AppDomainSetupTest" success="True" time="0.198" asserts="0">
                <results>
                  <test-case name="MonoTests.System.AppDomainSetupTest.AppDomainInitializer1" executed="True" success="True" time="0.191" asserts="2" />
                  <test-case name="MonoTests.System.AppDomainSetupTest.AppDomainInitializerNonStaticMethod" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.AppDomainSetupTest.ApplicationBase1" executed="True" success="True" time="0.001" asserts="1">
                    <categories>
                      <category name="TargetJvmNotWorking" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.AppDomainSetupTest.ApplicationBase2" executed="True" success="True" time="0.000" asserts="1">
                    <categories>
                      <category name="TargetJvmNotWorking" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.AppDomainSetupTest.ApplicationBase3" executed="True" success="True" time="0.000" asserts="1">
                    <categories>
                      <category name="TargetJvmNotWorking" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.AppDomainSetupTest.ApplicationBase4" executed="True" success="True" time="0.000" asserts="1">
                    <categories>
                      <category name="TargetJvmNotWorking" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.AppDomainSetupTest.ApplicationBase5" executed="True" success="True" time="0.000" asserts="1">
                    <categories>
                      <category name="TargetJvmNotWorking" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.AppDomainSetupTest.ApplicationBase6" executed="True" success="True" time="0.000" asserts="1">
                    <categories>
                      <category name="TargetJvmNotWorking" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.AppDomainSetupTest.ConfigurationFile_Absolute_NoApplicationBase" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.AppDomainSetupTest.ConfigurationFile_Null" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.AppDomainSetupTest.ConfigurationFile_Relative_ApplicationBase" executed="True" success="True" time="0.000" asserts="1">
                    <categories>
                      <category name="TargetJvmNotWorking" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.AppDomainSetupTest.ConfigurationFile_Relative_NoApplicationBase" executed="True" success="True" time="0.000" asserts="0">
                    <categories>
                      <category name="TargetJvmNotWorking" />
                    </categories>
                  </test-case>
                </results>
              </test-suite>
              <test-suite name="AppDomainTest" success="True" time="7.504" asserts="0">
                <results>
                  <test-case name="MonoTests.System.AppDomainTest.ApplyPolicy" executed="True" success="True" time="0.237" asserts="2" />
                  <test-case name="MonoTests.System.AppDomainTest.ApplyPolicy_Empty" executed="True" success="True" time="0.226" asserts="0" />
                  <test-case name="MonoTests.System.AppDomainTest.ApplyPolicy_Null" executed="True" success="True" time="0.228" asserts="0" />
                  <test-case name="MonoTests.System.AppDomainTest.AssemblyResolveParseError" executed="True" success="True" time="0.003" asserts="1" />
                  <test-case name="MonoTests.System.AppDomainTest.ConfigurationFile_Absolute" executed="True" success="True" time="0.514" asserts="4" />
                  <test-case name="MonoTests.System.AppDomainTest.ConfigurationFile_Null" executed="True" success="True" time="0.503" asserts="4" />
                  <test-case name="MonoTests.System.AppDomainTest.ConfigurationFile_Relative" executed="True" success="True" time="0.493" asserts="4" />
                  <test-case name="MonoTests.System.AppDomainTest.CreateDomain_String" executed="True" success="True" time="0.222" asserts="2" />
                  <test-case name="MonoTests.System.AppDomainTest.CreateDomain_String_Null" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.AppDomainTest.CreateDomain_StringEvidence" executed="True" success="True" time="0.207" asserts="3">
                    <categories>
                      <category name="NotDotNet" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.AppDomainTest.CreateDomain_StringEvidenceAppDomainSetup" executed="True" success="True" time="0.212" asserts="5">
                    <categories>
                      <category name="NotDotNet" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.AppDomainTest.CreateDomain_StringEvidenceAppDomainSetupNull" executed="True" success="True" time="0.211" asserts="3">
                    <categories>
                      <category name="NotDotNet" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.AppDomainTest.CreateDomain_StringEvidenceNull" executed="True" success="True" time="0.223" asserts="3" />
                  <test-case name="MonoTests.System.AppDomainTest.CreateDomain_StringEvidenceNullAppDomainSetup" executed="True" success="True" time="0.231" asserts="5" />
                  <test-case name="MonoTests.System.AppDomainTest.CreateDomain_StringNullEvidence" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.AppDomainTest.CreateDomain_StringNullEvidenceAppDomainSetup" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.AppDomainTest.DefineDynamicAssembly1_Access_Invalid" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.AppDomainTest.DefineDynamicAssembly1_Name_InvalidChars" executed="True" success="True" time="0.004" asserts="56" />
                  <test-case name="MonoTests.System.AppDomainTest.DefineDynamicAssembly1_Name_Null" executed="True" success="True" time="0.001" asserts="13" />
                  <test-case name="MonoTests.System.AppDomainTest.DefineDynamicAssembly10_Access_Invalid" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.AppDomainTest.DefineDynamicAssembly10_Name_InvalidChars" executed="True" success="True" time="0.001" asserts="56" />
                  <test-case name="MonoTests.System.AppDomainTest.DefineDynamicAssembly10_Name_Null" executed="True" success="True" time="0.001" asserts="13" />
                  <test-case name="MonoTests.System.AppDomainTest.DefineDynamicAssembly11" executed="True" success="True" time="0.173" asserts="46" />
                  <test-case name="MonoTests.System.AppDomainTest.DefineDynamicAssembly11_Access_Invalid" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.AppDomainTest.DefineDynamicAssembly11_Name_InvalidChars" executed="True" success="True" time="0.001" asserts="56" />
                  <test-case name="MonoTests.System.AppDomainTest.DefineDynamicAssembly11_Name_Null" executed="True" success="True" time="0.001" asserts="13" />
                  <test-case name="MonoTests.System.AppDomainTest.DefineDynamicAssembly2_Access_Invalid" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.AppDomainTest.DefineDynamicAssembly2_Name_InvalidChars" executed="True" success="True" time="0.001" asserts="56" />
                  <test-case name="MonoTests.System.AppDomainTest.DefineDynamicAssembly2_Name_Null" executed="True" success="True" time="0.001" asserts="13" />
                  <test-case name="MonoTests.System.AppDomainTest.DefineDynamicAssembly3_Access_Invalid" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.AppDomainTest.DefineDynamicAssembly3_Name_InvalidChars" executed="True" success="True" time="0.001" asserts="56" />
                  <test-case name="MonoTests.System.AppDomainTest.DefineDynamicAssembly3_Name_Null" executed="True" success="True" time="0.001" asserts="13" />
                  <test-case name="MonoTests.System.AppDomainTest.DefineDynamicAssembly4_Access_Invalid" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.AppDomainTest.DefineDynamicAssembly4_Name_InvalidChars" executed="True" success="True" time="0.001" asserts="56" />
                  <test-case name="MonoTests.System.AppDomainTest.DefineDynamicAssembly4_Name_Null" executed="True" success="True" time="0.001" asserts="13" />
                  <test-case name="MonoTests.System.AppDomainTest.DefineDynamicAssembly5_Access_Invalid" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.AppDomainTest.DefineDynamicAssembly5_Name_InvalidChars" executed="True" success="True" time="0.001" asserts="56" />
                  <test-case name="MonoTests.System.AppDomainTest.DefineDynamicAssembly5_Name_Null" executed="True" success="True" time="0.001" asserts="13" />
                  <test-case name="MonoTests.System.AppDomainTest.DefineDynamicAssembly6_Access_Invalid" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.AppDomainTest.DefineDynamicAssembly6_Name_InvalidChars" executed="True" success="True" time="0.001" asserts="56" />
                  <test-case name="MonoTests.System.AppDomainTest.DefineDynamicAssembly6_Name_Null" executed="True" success="True" time="0.001" asserts="13" />
                  <test-case name="MonoTests.System.AppDomainTest.DefineDynamicAssembly7_Access_Invalid" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.AppDomainTest.DefineDynamicAssembly7_Name_InvalidChars" executed="True" success="True" time="0.001" asserts="56" />
                  <test-case name="MonoTests.System.AppDomainTest.DefineDynamicAssembly7_Name_Null" executed="True" success="True" time="0.001" asserts="13" />
                  <test-case name="MonoTests.System.AppDomainTest.DefineDynamicAssembly8_Access_Invalid" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.AppDomainTest.DefineDynamicAssembly8_Name_InvalidChars" executed="True" success="True" time="0.003" asserts="56" />
                  <test-case name="MonoTests.System.AppDomainTest.DefineDynamicAssembly8_Name_Null" executed="True" success="True" time="0.001" asserts="13" />
                  <test-case name="MonoTests.System.AppDomainTest.DefineDynamicAssembly9_Access_Invalid" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.AppDomainTest.DefineDynamicAssembly9_Name_InvalidChars" executed="True" success="True" time="0.001" asserts="56" />
                  <test-case name="MonoTests.System.AppDomainTest.DefineDynamicAssembly9_Name_Null" executed="True" success="True" time="0.001" asserts="13" />
                  <test-case name="MonoTests.System.AppDomainTest.DomainManager" executed="True" success="True" time="0.214" asserts="2" />
                  <test-case name="MonoTests.System.AppDomainTest.ExecuteAssembly1_NoEntryPoint" executed="True" success="True" time="0.002" asserts="4" />
                  <test-case name="MonoTests.System.AppDomainTest.ExecuteAssembly2_NoEntryPoint" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.AppDomainTest.ExecuteAssembly3_NoEntryPoint" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.AppDomainTest.ExecuteAssemblyByName1_NoEntryPoint" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.AppDomainTest.ExecuteAssemblyByName2_NoEntryPoint" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.AppDomainTest.ExecuteAssemblyByName3_NoEntryPoint" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.AppDomainTest.ExecuteAssemblyByName4_NoEntryPoint" executed="True" success="True" time="0.002" asserts="4" />
                  <test-case name="MonoTests.System.AppDomainTest.GetData_Null" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.AppDomainTest.IsDefaultAppDomain" executed="True" success="True" time="0.241" asserts="1" />
                  <test-case name="MonoTests.System.AppDomainTest.Load_EmptyString" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.AppDomainTest.Load_PartialVersion" executed="True" success="True" time="0.340" asserts="6" />
                  <test-case name="MonoTests.System.AppDomainTest.ReflectionObjectsAreSerializableTest" executed="True" success="True" time="0.279" asserts="21" />
                  <test-case name="MonoTests.System.AppDomainTest.ReflectionOnlyAssemblyResolve" executed="True" success="True" time="0.007" asserts="0" />
                  <test-case name="MonoTests.System.AppDomainTest.ReflectionOnlyGetAssemblies" executed="True" success="True" time="0.464" asserts="21" />
                  <test-case name="MonoTests.System.AppDomainTest.ResourceResolve" executed="True" success="True" time="0.002" asserts="1" />
                  <test-case name="MonoTests.System.AppDomainTest.SetAppDomainPolicy" executed="True" success="True" time="0.291" asserts="0" />
                  <test-case name="MonoTests.System.AppDomainTest.SetAppDomainPolicy_Dual" executed="True" success="True" time="0.245" asserts="0" />
                  <test-case name="MonoTests.System.AppDomainTest.SetAppDomainPolicy_Null" executed="True" success="True" time="0.224" asserts="0" />
                  <test-case name="MonoTests.System.AppDomainTest.SetAppDomainPolicy_Unloaded" executed="True" success="True" time="0.238" asserts="0" />
                  <test-case name="MonoTests.System.AppDomainTest.SetData" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.AppDomainTest.SetData_Null" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.AppDomainTest.SetPrincipalPolicy_NoPrincipal" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.AppDomainTest.SetPrincipalPolicy_UnauthenticatedPrincipal" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.AppDomainTest.SetPrincipalPolicy_WindowsPrincipal" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.AppDomainTest.SetPrincipalPolicyUnloaded" executed="True" success="True" time="0.216" asserts="0" />
                  <test-case name="MonoTests.System.AppDomainTest.SetThreadPrincipal" executed="True" success="True" time="0.218" asserts="0" />
                  <test-case name="MonoTests.System.AppDomainTest.SetThreadPrincipalNull" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.AppDomainTest.SetThreadPrincipalTwice" executed="True" success="True" time="0.223" asserts="0" />
                  <test-case name="MonoTests.System.AppDomainTest.SetThreadPrincipalUnloaded" executed="True" success="True" time="0.216" asserts="0" />
                  <test-case name="MonoTests.System.AppDomainTest.ShadowCopyTypeGetTypeMissingAssemblyTest" executed="True" success="True" time="0.302" asserts="0" />
                </results>
              </test-suite>
              <test-suite name="ApplicationIdentityTest" success="True" time="0.005" asserts="0">
                <results>
                  <test-case name="MonoTests.System.ApplicationIdentityTest.ApplicationIdentity" executed="True" success="True" time="0.002" asserts="3" />
                  <test-case name="MonoTests.System.ApplicationIdentityTest.ApplicationIdentity_Null" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ApplicationIdentityTest.ApplicationIdentity_WithCulture" executed="True" success="True" time="0.000" asserts="3" />
                </results>
              </test-suite>
              <test-suite name="ApplicationIdTest" success="True" time="0.013" asserts="0">
                <results>
                  <test-case name="MonoTests.System.ApplicationIdTest.ApplicationId" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.ApplicationIdTest.ApplicationId_CultureNull" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.ApplicationIdTest.ApplicationId_NameNull" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ApplicationIdTest.ApplicationId_ProcessorArchitectureNull" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.ApplicationIdTest.ApplicationId_PublicKeyTokenNull" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ApplicationIdTest.ApplicationId_VersionNull" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ApplicationIdTest.Copy" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.ApplicationIdTest.Equals" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.ApplicationIdTest.Equals_Subset" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.ApplicationIdTest.PublicKeyToken" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.ApplicationIdTest.ToString_" executed="True" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite name="ArgumentExceptionTest" success="True" time="0.004" asserts="0">
                <results>
                  <test-case name="MonoTests.System.ArgumentExceptionTest.Constructor0" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.ArgumentExceptionTest.Constructor1" executed="True" success="True" time="0.001" asserts="13" />
                  <test-case name="MonoTests.System.ArgumentExceptionTest.Constructor4" executed="True" success="True" time="0.001" asserts="21" />
                </results>
              </test-suite>
              <test-suite name="ArraySegmentTest" success="True" time="0.032" asserts="0">
                <results>
                  <test-case name="MonoTests.System.ArraySegmentTest.CtorErrorTest" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ArraySegmentTest.CtorErrorTest2" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ArraySegmentTest.CtorErrorTest3" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArraySegmentTest.CtorErrorTest4" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArraySegmentTest.CtorErrorTest5" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArraySegmentTest.CtorNullTest1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArraySegmentTest.CtorNullTest2" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ArraySegmentTest.CtorTest1" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.ArraySegmentTest.CtorTest2" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.ArraySegmentTest.CtorTest3" executed="True" success="True" time="0.001" asserts="18" />
                  <test-case name="MonoTests.System.ArraySegmentTest.IList_Contains" executed="True" success="True" time="0.002" asserts="2" />
                  <test-case name="MonoTests.System.ArraySegmentTest.IList_CopyTo" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.ArraySegmentTest.IList_GetEnumerator" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.ArraySegmentTest.IList_Indexer" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.ArraySegmentTest.IList_IndexerErrorTest1" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ArraySegmentTest.IList_IndexerErrorTest2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArraySegmentTest.IList_IndexOf" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.ArraySegmentTest.IList_NotSupported" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ArraySegmentTest.TestArraySegmentEqual" executed="True" success="True" time="0.002" asserts="4" />
                </results>
              </test-suite>
              <test-suite name="ArraySortArgChecks" success="True" time="0.017" asserts="0">
                <results>
                  <test-case name="MonoTests.System.ArraySortArgChecks.Check_ArgumentException" executed="True" success="True" time="0.002" asserts="0" />
                  <test-case name="MonoTests.System.ArraySortArgChecks.Check_ArgumentNullException" executed="True" success="True" time="0.003" asserts="0" />
                  <test-case name="MonoTests.System.ArraySortArgChecks.Check_ArgumentOurOfRangeException" executed="True" success="True" time="0.002" asserts="0" />
                  <test-case name="MonoTests.System.ArraySortArgChecks.Check_InvalidOperationException" executed="True" success="True" time="0.002" asserts="0" />
                  <test-case name="MonoTests.System.ArraySortArgChecks.Check_RankException" executed="True" success="True" time="0.001" asserts="0" />
                </results>
              </test-suite>
              <test-suite name="ArrayTest" success="True" time="0.281" asserts="0">
                <results>
                  <test-case name="MonoTests.System.ArrayTest.ArrayCreateInstanceOfOpenGenericType" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.ArrayCreateInstanceOfVoid" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.AsIList" executed="True" success="True" time="0.003" asserts="4" />
                  <test-case name="MonoTests.System.ArrayTest.AsReadOnly_NullArray" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.BinarySearch_ArgPassingOrder" executed="True" success="True" time="0.002" asserts="1" />
                  <test-case name="MonoTests.System.ArrayTest.BinarySearch_NullValue" executed="True" success="True" time="0.003" asserts="8" />
                  <test-case name="MonoTests.System.ArrayTest.BinarySearch_WithComparer" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.ArrayTest.BinarySearch1_EmptyList" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.ArrayTest.BinarySearch2_EmptyList" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.ArrayTest.BinarySearch3_EmptyList" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.ArrayTest.BinarySearch4_EmptyList" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.ArrayTest.Clear_IndexOverflow" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.Clear_LengthOverflow" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.ClearJaggedArray" executed="True" success="True" time="0.003" asserts="8" />
                  <test-case name="MonoTests.System.ArrayTest.ClearMultidimentionalArray" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.ArrayTest.ClearNegativeLength" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.ClearOutsideMultidimentionalArray" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.CompareToWithArrayOfTheWrongKind" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.CompareToWithBoundedArray1" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.CompareToWithBoundedArray2" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.CompareToWithGoodArrays" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.ArrayTest.CompareToWithJaggedArray" executed="True" success="True" time="0.002" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.CompareToWithMultiDimArray1" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.CompareToWithMultiDimArray2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.CompareToWithMultiDimArray3" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.CompareToWithNonArrayOfDifferentSize" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.CompareToWithNonArrayType" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.CompareToWithNullArray" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.ArrayTest.CompareToWithNullComparer" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.Copy_DestinationIndexOverflow" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.Copy_InvalidCast" executed="True" success="True" time="0.002" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.Copy_LengthOverflow" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.Copy_SourceIndexOverflow" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.FindIndex_Invalid" executed="True" success="True" time="0.002" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.FindIndexTest" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.ArrayTest.FindLastIndex_Invalid" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.FindLastIndexTest" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.ArrayTest.FindLastNullTest" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.ICollectionNull" executed="True" success="True" time="0.002" asserts="7" />
                  <test-case name="MonoTests.System.ArrayTest.IEnumerator_Current_Finished" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.ArrayTest.IEnumerator_Current_NotStarted" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.ArrayTest.IEnumerator_Current_Reset" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.ArrayTest.IEnumerator_Reset" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.ArrayTest.IListNull" executed="True" success="True" time="0.001" asserts="7" />
                  <test-case name="MonoTests.System.ArrayTest.IStructuralEquatable_Equals" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.ArrayTest.IStructuralEquatable_Equals_ComparerThrows" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.IStructuralEquatable_Equals_NoComparer" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.IStructuralEquatable_GetHashCode" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.ArrayTest.IStructuralEquatable_GetHashCode_NullComparer" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.LastIndexOf_0LengthArray" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.ArrayTest.LastIndexOf_CountOverflow" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.LastIndexOf_StartIndexOverflow" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.MoreSort1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.MoreSort10" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.MoreSort2" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.MoreSort3" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.MoreSort4" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.MoreSort5" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.MoreSort6" executed="True" success="True" time="0.002" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.MoreSort7" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.MoreSort8" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.MoreSort9" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.MultiDimension_IList_getItem" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.MultiDimension_IList_setItem" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.ReadOnly_Contains" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.ArrayTest.ReadOnly_CopyTo" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.ArrayTest.ReadOnly_Count" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.ArrayTest.ReadOnly_Enumerator" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.ArrayTest.ReadOnly_Indexer" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.ArrayTest.ReadOnly_IndexOf" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.ArrayTest.Resize" executed="True" success="True" time="0.008" asserts="12" />
                  <test-case name="MonoTests.System.ArrayTest.Resize_null" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.ArrayTest.Reverse_IndexOverflow" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.Reverse_LengthOverflow" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.ReverseStruct" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.ArrayTest.SetValue_Nullable" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.ArrayTest.Sort" executed="True" success="True" time="0.003" asserts="4" />
                  <test-case name="MonoTests.System.ArrayTest.Sort_NullValues" executed="True" success="True" time="0.002" asserts="4" />
                  <test-case name="MonoTests.System.ArrayTest.SortActuallyWorks" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.ArrayTest.SortNonGenericDoubleItems" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.ArrayTest.SortNullsWithGenericVersion" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.ArrayTest.Test_ContainsAndIndexOf_EquatableItem" executed="True" success="True" time="0.003" asserts="4" />
                  <test-case name="MonoTests.System.ArrayTest.TestBinarySearch1" executed="True" success="True" time="0.002" asserts="6" />
                  <test-case name="MonoTests.System.ArrayTest.TestBinarySearch2" executed="True" success="True" time="0.002" asserts="9" />
                  <test-case name="MonoTests.System.ArrayTest.TestByteEnumArrayToByteArray" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.TestByteEnumArrayToIntArray" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.TestClear" executed="True" success="True" time="0.001" asserts="20" />
                  <test-case name="MonoTests.System.ArrayTest.TestClone" executed="True" success="True" time="0.002" asserts="7" />
                  <test-case name="MonoTests.System.ArrayTest.TestCopy" executed="True" success="True" time="0.002" asserts="20" />
                  <test-case name="MonoTests.System.ArrayTest.TestCopy2" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.ArrayTest.TestCopyTo" executed="True" success="True" time="0.002" asserts="20" />
                  <test-case name="MonoTests.System.ArrayTest.TestCreateInstance" executed="True" success="True" time="0.002" asserts="18" />
                  <test-case name="MonoTests.System.ArrayTest.TestCreateInstance2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.TestCreateInstance2b" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.TestGetEnumerator" executed="True" success="True" time="0.001" asserts="14" />
                  <test-case name="MonoTests.System.ArrayTest.TestGetEnumeratorMultipleDimension" executed="True" success="True" time="0.001" asserts="14" />
                  <test-case name="MonoTests.System.ArrayTest.TestGetEnumeratorNonZeroLowerBounds" executed="True" success="True" time="0.001" asserts="6">
                    <categories>
                      <category name="TargetJvmNotSupported" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.ArrayTest.TestGetLength" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.ArrayTest.TestGetLowerBound" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.ArrayTest.TestGetUpperBound" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.ArrayTest.TestGetValue1" executed="True" success="True" time="0.001" asserts="7" />
                  <test-case name="MonoTests.System.ArrayTest.TestGetValue2" executed="True" success="True" time="0.001" asserts="27" />
                  <test-case name="MonoTests.System.ArrayTest.TestGetValue3" executed="True" success="True" time="0.002" asserts="27" />
                  <test-case name="MonoTests.System.ArrayTest.TestGetValueLongArray" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.TestGetValueN" executed="True" success="True" time="0.001" asserts="28" />
                  <test-case name="MonoTests.System.ArrayTest.TestIList_Add" executed="True" success="True" time="0.001" asserts="0">
                    <categories>
                      <category name="TargetJvmNotSupported" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.ArrayTest.TestIList_Contains" executed="True" success="True" time="0.001" asserts="3">
                    <categories>
                      <category name="TargetJvmNotSupported" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.ArrayTest.TestIList_IndexOf" executed="True" success="True" time="0.001" asserts="4">
                    <categories>
                      <category name="TargetJvmNotSupported" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.ArrayTest.TestIList_Insert" executed="True" success="True" time="0.001" asserts="0">
                    <categories>
                      <category name="TargetJvmNotSupported" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.ArrayTest.TestIList_Remove" executed="True" success="True" time="0.001" asserts="0">
                    <categories>
                      <category name="TargetJvmNotSupported" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.ArrayTest.TestIList_RemoveAt" executed="True" success="True" time="0.001" asserts="0">
                    <categories>
                      <category name="TargetJvmNotSupported" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.ArrayTest.TestIndexer" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.TestIndexOf_CustomEqual" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.ArrayTest.TestIndexOf1" executed="True" success="True" time="0.004" asserts="6" />
                  <test-case name="MonoTests.System.ArrayTest.TestIndexOf2" executed="True" success="True" time="0.001" asserts="8" />
                  <test-case name="MonoTests.System.ArrayTest.TestIndexOf3" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.ArrayTest.TestInitializeAClassNI" executed="True" success="True" time="0.001" asserts="20" />
                  <test-case name="MonoTests.System.ArrayTest.TestInitializeAStruct" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.ArrayTest.TestInitializeAStructNI" executed="True" success="True" time="0.001" asserts="20" />
                  <test-case name="MonoTests.System.ArrayTest.TestInitializeChar" executed="True" success="True" time="0.001" asserts="8" />
                  <test-case name="MonoTests.System.ArrayTest.TestInitializeCharNI" executed="True" success="True" time="0.000" asserts="20" />
                  <test-case name="MonoTests.System.ArrayTest.TestInitializeDateTimeNI" executed="True" success="True" time="0.001" asserts="20" />
                  <test-case name="MonoTests.System.ArrayTest.TestInitializeDouble" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.ArrayTest.TestInitializeDoubleNI" executed="True" success="True" time="0.000" asserts="20" />
                  <test-case name="MonoTests.System.ArrayTest.TestInitializeEmpty" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.ArrayTest.TestInitializeEnum" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.ArrayTest.TestInitializeFloat" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.ArrayTest.TestInitializeInt" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.ArrayTest.TestInitializeIntNI" executed="True" success="True" time="0.000" asserts="20" />
                  <test-case name="MonoTests.System.ArrayTest.TestInitializeObjectNI" executed="True" success="True" time="0.000" asserts="20" />
                  <test-case name="MonoTests.System.ArrayTest.TestInitializeString" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.ArrayTest.TestInitializeStringNI" executed="True" success="True" time="0.000" asserts="20" />
                  <test-case name="MonoTests.System.ArrayTest.TestIntEnumArrayToByteArray" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.TestIntEnumArrayToIntArray" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.TestIsFixedSize" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.ArrayTest.TestIsReadOnly" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.ArrayTest.TestIsSynchronized" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.ArrayTest.TestLastIndexOf1" executed="True" success="True" time="0.001" asserts="8" />
                  <test-case name="MonoTests.System.ArrayTest.TestLastIndexOf2" executed="True" success="True" time="0.001" asserts="8" />
                  <test-case name="MonoTests.System.ArrayTest.TestLastIndexOf3" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.ArrayTest.TestLastIndexOf4" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.TestLastIndexOf5" executed="True" success="True" time="0.002" asserts="1" />
                  <test-case name="MonoTests.System.ArrayTest.TestLength" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.ArrayTest.TestMemberwiseClone" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.ArrayTest.TestRank" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.ArrayTest.TestReverse" executed="True" success="True" time="0.001" asserts="12" />
                  <test-case name="MonoTests.System.ArrayTest.TestSetValue1" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.ArrayTest.TestSetValue2" executed="True" success="True" time="0.001" asserts="27" />
                  <test-case name="MonoTests.System.ArrayTest.TestSetValue3" executed="True" success="True" time="0.001" asserts="27" />
                  <test-case name="MonoTests.System.ArrayTest.TestSetValue4" executed="True" success="True" time="0.010" asserts="363" />
                  <test-case name="MonoTests.System.ArrayTest.TestSetValueLongArray" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ArrayTest.TestSetValueN" executed="True" success="True" time="0.001" asserts="28" />
                  <test-case name="MonoTests.System.ArrayTest.TestSort" executed="True" success="True" time="0.009" asserts="41" />
                  <test-case name="MonoTests.System.ArrayTest.UnalignedArrayClear" executed="True" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite name="AttributeTest" success="True" time="0.059" asserts="0">
                <results>
                  <test-case name="MonoTests.System.AttributeTest.EmptyNonOverridenGetHashCode" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.AttributeTest.GetCattrOnPropertyAndInheritance" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.AttributeTest.GetCustomAttribute_PropertyInfo" executed="True" success="True" time="0.002" asserts="18" />
                  <test-case name="MonoTests.System.AttributeTest.GetCustomAttribute_PropertyInfo_Override" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.AttributeTest.GetCustomAttributeAmbiguous" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.AttributeTest.GetCustomAttributeNull" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.AttributeTest.GetCustomAttributeOK" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.AttributeTest.GetCustomAttributeOnBadSreTypes" executed="True" success="True" time="0.004" asserts="0" />
                  <test-case name="MonoTests.System.AttributeTest.GetCustomAttributeOnMethodInfo" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.AttributeTest.GetCustomAttributeOnNewSreTypes" executed="True" success="True" time="0.003" asserts="0" />
                  <test-case name="MonoTests.System.AttributeTest.GetCustomAttributeOnUserType" executed="True" success="True" time="0.002" asserts="7" />
                  <test-case name="MonoTests.System.AttributeTest.GetCustomAttributes_Element_Null" executed="True" success="True" time="0.007" asserts="80" />
                  <test-case name="MonoTests.System.AttributeTest.GetCustomAttributes_PropertyInfo" executed="True" success="True" time="0.004" asserts="72" />
                  <test-case name="MonoTests.System.AttributeTest.GetCustomAttributes_PropertyInfo_Override" executed="True" success="True" time="0.001" asserts="13" />
                  <test-case name="MonoTests.System.AttributeTest.GetCustomAttributesOnUserType" executed="True" success="True" time="0.001" asserts="8" />
                  <test-case name="MonoTests.System.AttributeTest.GetCustomAttributesTypeInherit" executed="True" success="True" time="0.001" asserts="9" />
                  <test-case name="MonoTests.System.AttributeTest.GetCustomAttributesTypeNoInherit" executed="True" success="True" time="0.001" asserts="8" />
                  <test-case name="MonoTests.System.AttributeTest.GetHashCodeWithOverriddenTypeId" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.AttributeTest.IsDefined_PropertyInfo" executed="True" success="True" time="0.001" asserts="18" />
                  <test-case name="MonoTests.System.AttributeTest.IsDefined_PropertyInfo_Override" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.AttributeTest.IsDefinedForPseudoAttribute" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.AttributeTest.IsDefinedOnUserType" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.AttributeTest.NonEmptyNonOverridenGetHashCode" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.AttributeTest.TestEquality" executed="True" success="True" time="0.001" asserts="8" />
                  <test-case name="MonoTests.System.AttributeTest.TestGetCustomAttribute" executed="True" success="True" time="0.002" asserts="5" />
                  <test-case name="MonoTests.System.AttributeTest.TestIsDefined" executed="True" success="True" time="0.001" asserts="11" />
                </results>
              </test-suite>
              <test-suite name="BadImageFormatExceptionTest" success="True" time="0.025" asserts="0">
                <results>
                  <test-case name="MonoTests.System.BadImageFormatExceptionTest.Constructor1" executed="True" success="True" time="0.002" asserts="6" />
                  <test-case name="MonoTests.System.BadImageFormatExceptionTest.Constructor2" executed="True" success="True" time="0.001" asserts="7" />
                  <test-case name="MonoTests.System.BadImageFormatExceptionTest.Constructor2_Message_Empty" executed="True" success="True" time="0.001" asserts="7" />
                  <test-case name="MonoTests.System.BadImageFormatExceptionTest.Constructor2_Message_Null" executed="True" success="True" time="0.001" asserts="8" />
                  <test-case name="MonoTests.System.BadImageFormatExceptionTest.Constructor3" executed="True" success="True" time="0.001" asserts="8" />
                  <test-case name="MonoTests.System.BadImageFormatExceptionTest.Constructor3_InnerException_Null" executed="True" success="True" time="0.001" asserts="7" />
                  <test-case name="MonoTests.System.BadImageFormatExceptionTest.Constructor3_Message_Empty" executed="True" success="True" time="0.001" asserts="8" />
                  <test-case name="MonoTests.System.BadImageFormatExceptionTest.Constructor3_Message_Null" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.BadImageFormatExceptionTest.Constructor4" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.BadImageFormatExceptionTest.Constructor4_FileName_Empty" executed="True" success="True" time="0.001" asserts="8" />
                  <test-case name="MonoTests.System.BadImageFormatExceptionTest.Constructor4_FileName_Null" executed="True" success="True" time="0.001" asserts="14" />
                  <test-case name="MonoTests.System.BadImageFormatExceptionTest.Constructor4_FileNameAndMessage_Empty" executed="True" success="True" time="0.001" asserts="8" />
                  <test-case name="MonoTests.System.BadImageFormatExceptionTest.Constructor4_FileNameAndMessage_Null" executed="True" success="True" time="0.001" asserts="8" />
                  <test-case name="MonoTests.System.BadImageFormatExceptionTest.Constructor4_Message_Empty" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.BadImageFormatExceptionTest.Constructor4_Message_Null" executed="True" success="True" time="0.001" asserts="18" />
                </results>
              </test-suite>
              <test-suite name="BitConverterTest" success="True" time="0.053" asserts="0">
                <results>
                  <test-case name="MonoTests.System.BitConverterTest.TestBool" executed="True" success="True" time="0.002" asserts="16" />
                  <test-case name="MonoTests.System.BitConverterTest.TestChar" executed="True" success="True" time="0.001" asserts="24" />
                  <test-case name="MonoTests.System.BitConverterTest.TestDouble" executed="True" success="True" time="0.002" asserts="25" />
                  <test-case name="MonoTests.System.BitConverterTest.TestInt16" executed="True" success="True" time="0.001" asserts="48" />
                  <test-case name="MonoTests.System.BitConverterTest.TestInt32" executed="True" success="True" time="0.001" asserts="48" />
                  <test-case name="MonoTests.System.BitConverterTest.TestInt64" executed="True" success="True" time="0.001" asserts="48" />
                  <test-case name="MonoTests.System.BitConverterTest.TestSingle" executed="True" success="True" time="0.002" asserts="24" />
                  <test-case name="MonoTests.System.BitConverterTest.TestToString" executed="True" success="True" time="0.002" asserts="19" />
                  <test-case name="MonoTests.System.BitConverterTest.TestUInt16" executed="True" success="True" time="0.001" asserts="36" />
                  <test-case name="MonoTests.System.BitConverterTest.TestUInt32" executed="True" success="True" time="0.001" asserts="36" />
                  <test-case name="MonoTests.System.BitConverterTest.TestUInt64" executed="True" success="True" time="0.001" asserts="36" />
                  <test-case name="MonoTests.System.BitConverterTest.ToBoolean" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.BitConverterTest.ToBoolean_Value_Null" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.BitConverterTest.ToChar_Value_Null" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.BitConverterTest.ToDouble_Value_Null" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.BitConverterTest.ToInt16_Value_Null" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.BitConverterTest.ToInt32_LowerLimit" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.BitConverterTest.ToInt32_UpperLimit" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.BitConverterTest.ToInt32_Value_Null" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.BitConverterTest.ToInt64_Value_Null" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.BitConverterTest.ToSingle_Value_Null" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.BitConverterTest.ToString_Length_Negative" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.BitConverterTest.ToString_Length_Overflow" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.BitConverterTest.ToString_StartIndex_Negative" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.BitConverterTest.ToString_StartIndex_Overflow" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.BitConverterTest.ToString_Value_Empty" executed="True" success="True" time="0.001" asserts="18" />
                  <test-case name="MonoTests.System.BitConverterTest.ToString_Value_Null" executed="True" success="True" time="0.001" asserts="15" />
                  <test-case name="MonoTests.System.BitConverterTest.ToUInt16_Value_Null" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.BitConverterTest.ToUInt32_Value_Null" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.BitConverterTest.ToUInt64_Value_Null" executed="True" success="True" time="0.000" asserts="5" />
                </results>
              </test-suite>
              <test-suite name="BooleanTest" success="True" time="0.014" asserts="0">
                <results>
                  <test-case name="MonoTests.System.BooleanTest.CompareTo" executed="True" success="True" time="0.001" asserts="9" />
                  <test-case name="MonoTests.System.BooleanTest.CompareToInvalidString" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.BooleanTest.GetTypeCode" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.BooleanTest.Parse" executed="True" success="True" time="0.001" asserts="8" />
                  <test-case name="MonoTests.System.BooleanTest.ParseInvalid" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.BooleanTest.ParseNull" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.BooleanTest.Strings" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.BooleanTest.TestEqualOperator" executed="True" success="True" time="0.001" asserts="8" />
                  <test-case name="MonoTests.System.BooleanTest.TestEquals" executed="True" success="True" time="0.001" asserts="12" />
                  <test-case name="MonoTests.System.BooleanTest.TestGetHashCode" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.BooleanTest.TestGetType" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.BooleanTest.TestToString" executed="True" success="True" time="0.000" asserts="2" />
                </results>
              </test-suite>
              <test-suite name="BufferTest" success="True" time="0.021" asserts="0">
                <results>
                  <test-case name="MonoTests.System.BufferTest.BlockCopy" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.BufferTest.BlockCopy_DestOffsetNegative" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.BufferTest.BlockCopy_DestOffsetOverflow" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.BufferTest.BlockCopy_DestTooShort" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.BufferTest.BlockCopy_LengthNegative" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.BufferTest.BlockCopy_LengthOverflow" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.BufferTest.BlockCopy_NullDest" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.BufferTest.BlockCopy_NullSource" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.BufferTest.BlockCopy_ObjectDest" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.BufferTest.BlockCopy_ObjectSource" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.BufferTest.BlockCopy_SourceOffsetNegative" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.BufferTest.BlockCopy_SourceOffsetOverflow" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.BufferTest.BlockCopy_SourceTooShort" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.BufferTest.ByteLength" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.BufferTest.GetByte" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.BufferTest.SetByte" executed="True" success="True" time="0.001" asserts="4" />
                </results>
              </test-suite>
              <test-suite name="ByteTest" success="True" time="0.023" asserts="0">
                <results>
                  <test-case name="MonoTests.System.ByteTest.ParseOverflow" executed="True" success="True" time="0.003" asserts="0" />
                  <test-case name="MonoTests.System.ByteTest.TestCompareTo" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.ByteTest.TestEquals" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.ByteTest.TestGetHashCode" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ByteTest.TestMinMax" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.ByteTest.TestParse" executed="True" success="True" time="0.003" asserts="15" />
                  <test-case name="MonoTests.System.ByteTest.TestToString" executed="True" success="True" time="0.006" asserts="36" />
                  <test-case name="MonoTests.System.ByteTest.ToString_Defaults" executed="True" success="True" time="0.001" asserts="7" />
                </results>
              </test-suite>
              <test-suite name="CharCategoryTest" success="True" time="0.023" asserts="0">
                <results>
                  <test-case name="MonoTests.System.CharCategoryTest.IsControl" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.CharCategoryTest.IsDigit" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.CharCategoryTest.IsLetter" executed="False">
                    <reason>
                      <message><![CDATA[The dump file is huge, so avoided this test way.]]></message>
                    </reason>
                  </test-case>
                  <test-case name="MonoTests.System.CharCategoryTest.IsLetterOrDigit" executed="False">
                    <reason>
                      <message><![CDATA[The dump file is huge, so avoided this test way.]]></message>
                    </reason>
                  </test-case>
                  <test-case name="MonoTests.System.CharCategoryTest.IsLower" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.CharCategoryTest.IsNumber" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.CharCategoryTest.IsPunctuation" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.CharCategoryTest.IsSeparator" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.CharCategoryTest.IsSurrogate" executed="True" success="True" time="0.002" asserts="1" />
                  <test-case name="MonoTests.System.CharCategoryTest.IsSymbol" executed="True" success="True" time="0.002" asserts="1" />
                  <test-case name="MonoTests.System.CharCategoryTest.IsUpper" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.CharCategoryTest.IsWhiteSpace" executed="True" success="True" time="0.001" asserts="1" />
                </results>
              </test-suite>
              <test-suite name="CharEnumeratorTest" success="True" time="0.005" asserts="0">
                <results>
                  <test-case name="MonoTests.System.CharEnumeratorTest.TestBasic" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.CharEnumeratorTest.TestClone" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.CharEnumeratorTest.TestReadOutOfBounds" executed="True" success="True" time="0.001" asserts="11" />
                </results>
              </test-suite>
              <test-suite name="CharTest" success="True" time="0.078" asserts="0">
                <results>
                  <test-case name="MonoTests.System.CharTest.TestCompareTo" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.CharTest.TestConvertFromUtf32" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.CharTest.TestConvertFromUtf32Fail1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.CharTest.TestConvertFromUtf32Fail2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.CharTest.TestConvertFromUtf32Fail3" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.CharTest.TestConvertToUtf32" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.CharTest.TestConvertToUtf32Fail1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.CharTest.TestConvertUtf32Fail2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.CharTest.TestEquals" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.CharTest.TestGetHashValue" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.CharTest.TestGetNumericValue" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.CharTest.TestGetTypeCode" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.CharTest.TestGetUnicodeCategory" executed="True" success="True" time="0.003" asserts="26" />
                  <test-case name="MonoTests.System.CharTest.TestGetUnicodeCategoryAstralPlanes" executed="True" success="True" time="0.002" asserts="1020" />
                  <test-case name="MonoTests.System.CharTest.TestGetUnicodeCategoryStringIndex" executed="True" success="True" time="0.001" asserts="7" />
                  <test-case name="MonoTests.System.CharTest.TestIsControl" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.CharTest.TestIsDigit" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.CharTest.TestIsLetter" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.CharTest.TestIsLetterOrDigit" executed="True" success="True" time="0.001" asserts="14" />
                  <test-case name="MonoTests.System.CharTest.TestIsLower" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.CharTest.TestIsNumber" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.CharTest.TestIsPunctuation" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.CharTest.TestIsSeparator" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.CharTest.TestIsSurrogate" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.CharTest.TestIsSymbol" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.CharTest.TestIsUpper" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.CharTest.TestIsWhiteSpace" executed="True" success="True" time="0.028" asserts="65543" />
                  <test-case name="MonoTests.System.CharTest.TestParse" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.CharTest.TestToLower" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.CharTest.TestToString" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.CharTest.TestToUpper" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.CharTest.TestTryParseInvalid" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.CharTest.TestTryParseValid" executed="True" success="True" time="0.000" asserts="2" />
                </results>
              </test-suite>
              <test-suite name="Collections" success="True" time="2.587" asserts="0">
                <results>
                  <test-suite name="ArrayListTest" success="True" time="0.107" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Collections.ArrayListTest.AddRange_GetRange" executed="True" success="True" time="0.003" asserts="7" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.BinarySearch_CountOverflow" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.BinarySearch_IndexOverflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.BinarySearch_Null" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.BinarySearch1_EmptyList" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.BinarySearch2_EmptyList" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.BinarySearch3_EmptyList" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.CopyTo_ArrayIndexOverflow" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.CopyTo_CountOverflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.CopyTo_IndexOverflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.GetEnumerator_CountOverflow" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.GetEnumerator_IndexOverflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.GetRange_CountOverflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.GetRange_IndexOverflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.IndexOf_CountOverflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.IndexOf_StartIndexOverflow" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.IterateSelf" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.LastIndexOf_CountOverflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.LastIndexOf_StartIndexOverflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.RemoveRange_CountOverflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.RemoveRange_IndexOverflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.Reverse_CountOverflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.Reverse_IndexOverflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.SetRange_Overflow" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.Sort_CountOverflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.Sort_IndexOverflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.TestAdapter" executed="True" success="True" time="0.003" asserts="21" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.TestAdd" executed="True" success="True" time="0.002" asserts="203" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.TestAddRange" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.TestBinarySearch" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.TestCapacity" executed="True" success="True" time="0.001" asserts="101" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.TestClear" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.TestClone" executed="True" success="True" time="0.002" asserts="7" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.TestContains" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.TestCopyTo" executed="True" success="True" time="0.002" asserts="17" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.TestCount" executed="True" success="True" time="0.002" asserts="201" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.TestCtor" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.TestEnumerator" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.TestFixedSize" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.TestGetEnumerator" executed="True" success="True" time="0.001" asserts="11" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.TestGetRange" executed="True" success="True" time="0.002" asserts="14" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.TestIndexOf" executed="True" success="True" time="0.001" asserts="14" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.TestInsert" executed="True" success="True" time="0.001" asserts="9" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.TestInsertRange" executed="True" success="True" time="0.001" asserts="11" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.TestInsertRange_this" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.TestIsFixed" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.TestIsReadOnly" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.TestIsSynchronized" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.TestItem" executed="True" success="True" time="0.001" asserts="103" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.TestLastIndexOf" executed="True" success="True" time="0.001" asserts="10" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.TestReadOnly" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.TestRemove" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.TestRemoveAt" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.TestRemoveRange" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.TestRepeat" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.TestReverse" executed="True" success="True" time="0.001" asserts="23" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.TestSetRange" executed="True" success="True" time="0.001" asserts="10" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.TestSort" executed="True" success="True" time="0.001" asserts="13" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.TestToArray" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.TrimToSize" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Collections.ArrayListTest.TrimToSize_ReadOnly" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="BitArrayTest" success="True" time="0.023" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Collections.BitArrayTest.CopyToEmptyEmpty" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="MonoTests.System.Collections.BitArrayTest.TestAnd" executed="True" success="True" time="0.001" asserts="65" />
                      <test-case name="MonoTests.System.Collections.BitArrayTest.TestBoolConstructor" executed="True" success="True" time="0.001" asserts="71" />
                      <test-case name="MonoTests.System.Collections.BitArrayTest.TestByteConstructor" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Collections.BitArrayTest.TestClone" executed="True" success="True" time="0.000" asserts="142" />
                      <test-case name="MonoTests.System.Collections.BitArrayTest.TestCopyConstructor" executed="True" success="True" time="0.000" asserts="71" />
                      <test-case name="MonoTests.System.Collections.BitArrayTest.TestCopyToBool" executed="True" success="True" time="0.000" asserts="70" />
                      <test-case name="MonoTests.System.Collections.BitArrayTest.TestCopyToByte" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Collections.BitArrayTest.TestCopyToInt" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.BitArrayTest.TestEnumerator" executed="True" success="True" time="0.001" asserts="141" />
                      <test-case name="MonoTests.System.Collections.BitArrayTest.TestIntConstructor" executed="True" success="True" time="0.000" asserts="7" />
                      <test-case name="MonoTests.System.Collections.BitArrayTest.TestNot" executed="True" success="True" time="0.000" asserts="65" />
                      <test-case name="MonoTests.System.Collections.BitArrayTest.TestOr" executed="True" success="True" time="0.000" asserts="65" />
                      <test-case name="MonoTests.System.Collections.BitArrayTest.TestSetAll" executed="True" success="True" time="0.001" asserts="140" />
                      <test-case name="MonoTests.System.Collections.BitArrayTest.TestSetLength" executed="True" success="True" time="0.000" asserts="72" />
                      <test-case name="MonoTests.System.Collections.BitArrayTest.TestValConstructor" executed="True" success="True" time="0.001" asserts="130" />
                      <test-case name="MonoTests.System.Collections.BitArrayTest.TestXor" executed="True" success="True" time="0.001" asserts="65" />
                    </results>
                  </test-suite>
                  <test-suite name="CaseInsensitiveComparerTest" success="True" time="0.013" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Collections.CaseInsensitiveComparerTest.CtorNull" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.CaseInsensitiveComparerTest.TestCompare" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Collections.CaseInsensitiveComparerTest.TestCompare_Culture" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Collections.CaseInsensitiveComparerTest.TestDefaultInstance" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.CaseInsensitiveComparerTest.TestDiffArgs" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.CaseInsensitiveComparerTest.TestIntsEq" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.CaseInsensitiveComparerTest.TestIntsNEq" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.CaseInsensitiveComparerTest.TestNull1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.CaseInsensitiveComparerTest.TestNull2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.CaseInsensitiveComparerTest.TestObject" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.CaseInsensitiveComparerTest.TestStringsCaps" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="CaseInsensitiveHashCodeProviderTest" success="True" time="0.013" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Collections.CaseInsensitiveHashCodeProviderTest.Constructor0_Serialization" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Collections.CaseInsensitiveHashCodeProviderTest.Constructor1_Culture_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Collections.CaseInsensitiveHashCodeProviderTest.Constructor1_Serialization" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.CaseInsensitiveHashCodeProviderTest.Default" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Collections.CaseInsensitiveHashCodeProviderTest.Default_Mono" executed="True" success="True" time="0.000" asserts="1">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Collections.CaseInsensitiveHashCodeProviderTest.DefaultInvariant" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Collections.CaseInsensitiveHashCodeProviderTest.Deserialize" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Collections.CaseInsensitiveHashCodeProviderTest.HashCode" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Collections.CaseInsensitiveHashCodeProviderTest.SerializationRoundtrip" executed="True" success="True" time="0.002" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="CollectionBaseTest" success="True" time="0.018" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Collections.CollectionBaseTest.Clear" executed="True" success="True" time="0.002" asserts="3" />
                      <test-case name="MonoTests.System.Collections.CollectionBaseTest.Count" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.CollectionBaseTest.GetEnumerator" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.CollectionBaseTest.Insert" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Collections.CollectionBaseTest.InsertComplete_Add" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.CollectionBaseTest.InvalidRemove" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Collections.CollectionBaseTest.OnValid" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Collections.CollectionBaseTest.Remove" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Collections.CollectionBaseTest.Set" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Collections.CollectionBaseTest.SetCompleteCalled" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Collections.CollectionBaseTest.SetCompleteUndo" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Collections.CollectionBaseTest.ValidateCalled" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="ComparerTest" success="True" time="0.012" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Collections.ComparerTest.Compare_BothNonIComparer" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.ComparerTest.Compare_FirstIComparer" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.ComparerTest.Compare_SecondIComparer" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.ComparerTest.Constructor" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.ComparerTest.Constructor_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.ComparerTest.GetObjectData" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Collections.ComparerTest.GetObjectData_Null" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Collections.ComparerTest.Invariant" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.ComparerTest.Invariant2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.ComparerTest.TestCompare" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Collections.ComparerTest.TestDefaultInstance" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="Concurrent" success="True" time="1.160" asserts="0">
                    <results>
                      <test-suite name="ConcurrentDictionaryTests" success="True" time="0.509" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentDictionaryTests.AddOrUpdateTest" executed="True" success="True" time="0.007" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentDictionaryTests.AddParallelWithoutDuplicateTest" executed="True" success="True" time="0.280" asserts="4500" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentDictionaryTests.AddWithDuplicate" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentDictionaryTests.AddWithoutDuplicateTest" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentDictionaryTests.ContainsTest" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentDictionaryTests.GetOrAddTest" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentDictionaryTests.GetValueTest" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentDictionaryTests.GetValueUnknownTest" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentDictionaryTests.IDictionaryNullOnNonExistingKey" executed="True" success="True" time="0.004" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentDictionaryTests.InitWithEnumerableTest" executed="True" success="True" time="0.009" asserts="30" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentDictionaryTests.IterateTest" executed="True" success="True" time="0.002" asserts="9" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentDictionaryTests.ModificationTest" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentDictionaryTests.NullArgumentsTest" executed="True" success="True" time="0.003" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentDictionaryTests.QueryWithSameHashCodeTest" executed="True" success="True" time="0.007" asserts="54" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentDictionaryTests.RemoveParallelTest" executed="True" success="True" time="0.167" asserts="3500" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentDictionaryTests.SameHashCodeInsertTest" executed="True" success="True" time="0.008" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentDictionaryTests.TryUpdateTest" executed="True" success="True" time="0.001" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite name="ConcurrentQueueTests" success="True" time="0.313" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentQueueTests.CountTestCase" executed="True" success="True" time="0.006" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentQueueTests.EnumerateTestCase" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentQueueTests.StressDequeueTestCase" executed="True" success="True" time="0.007" asserts="40" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentQueueTests.StressEnqueueTestCase" executed="True" success="True" time="0.278" asserts="3000" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentQueueTests.ToArrayTest" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentQueueTests.ToExistingArray_IndexOverflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentQueueTests.ToExistingArray_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentQueueTests.ToExistingArray_OutOfRange" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentQueueTests.ToExistingArray_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentQueueTests.TryDequeueEmptyTestCase" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentQueueTests.TryDequeueTestCase" executed="True" success="True" time="0.005" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentQueueTests.TryPeekTestCase" executed="True" success="True" time="0.001" asserts="5" />
                        </results>
                      </test-suite>
                      <test-suite name="ConcurrentStackTests" success="True" time="0.306" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentStackTests.CountTestCase" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentStackTests.EnumerateTestCase" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentStackTests.PushRangeTestCase" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentStackTests.StressPopTestCase" executed="True" success="True" time="0.007" asserts="40" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentStackTests.StressPushTestCase" executed="True" success="True" time="0.264" asserts="3000" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentStackTests.ToArrayTest" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentStackTests.ToExistingArray_IndexOverflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentStackTests.ToExistingArray_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentStackTests.ToExistingArray_OutOfRange" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentStackTests.ToExistingArray_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentStackTests.TryPeekTestCase" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentStackTests.TryPopEmptyTestCase" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentStackTests.TryPopRange_LargeCount" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentStackTests.TryPopRange_LargeIndex" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentStackTests.TryPopRange_NegativeIndex" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentStackTests.TryPopRange_NullArray" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentStackTests.TryPopRangeEmpty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentStackTests.TryPopRangeFullTest" executed="True" success="True" time="0.003" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentStackTests.TryPopRangePartialFillTest" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentStackTests.TryPopRangeTest" executed="True" success="True" time="0.000" asserts="17" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentStackTests.TryPopRangeTestWithOneElement" executed="True" success="True" time="0.000" asserts="21" />
                          <test-case name="MonoTests.System.Collections.Concurrent.ConcurrentStackTests.TryPopTestCase" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="ParallelConcurrentQueueTests" success="True" time="0.003" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Collections.Concurrent.ParallelConcurrentQueueTests.CountTestCase" executed="True" success="True" time="0.002" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="ParallelConcurrentStackTests" success="True" time="0.004" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Collections.Concurrent.ParallelConcurrentStackTests.CountTestCase" executed="True" success="True" time="0.004" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite name="PartitionerTests" success="True" time="0.012" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Collections.Concurrent.PartitionerTests.PartitionerCreateIntegerWithExplicitRange" executed="True" success="True" time="0.006" asserts="12" />
                          <test-case name="MonoTests.System.Collections.Concurrent.PartitionerTests.PartitionerCreateLongWithExplicitRange" executed="True" success="True" time="0.005" asserts="12" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="DictionaryBaseTest" success="True" time="0.056" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Collections.DictionaryBaseTest.Add" executed="True" success="True" time="0.003" asserts="46" />
                      <test-case name="MonoTests.System.Collections.DictionaryBaseTest.AddNullKey" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Collections.DictionaryBaseTest.AddOnInsertCompleteExcept" executed="True" success="True" time="0.001" asserts="25" />
                      <test-case name="MonoTests.System.Collections.DictionaryBaseTest.AddOnInsertExcept" executed="True" success="True" time="0.001" asserts="99" />
                      <test-case name="MonoTests.System.Collections.DictionaryBaseTest.AddOnValidateExcept" executed="True" success="True" time="0.001" asserts="105" />
                      <test-case name="MonoTests.System.Collections.DictionaryBaseTest.Clear" executed="True" success="True" time="0.001" asserts="94" />
                      <test-case name="MonoTests.System.Collections.DictionaryBaseTest.ClearOnClearCompleteExcept" executed="True" success="True" time="0.001" asserts="105" />
                      <test-case name="MonoTests.System.Collections.DictionaryBaseTest.ClearOnClearExcept" executed="True" success="True" time="0.001" asserts="96" />
                      <test-case name="MonoTests.System.Collections.DictionaryBaseTest.Contains" executed="True" success="True" time="0.001" asserts="76" />
                      <test-case name="MonoTests.System.Collections.DictionaryBaseTest.Count" executed="True" success="True" time="0.000" asserts="58" />
                      <test-case name="MonoTests.System.Collections.DictionaryBaseTest.DictionaryProperty" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Collections.DictionaryBaseTest.Get" executed="True" success="True" time="0.001" asserts="66" />
                      <test-case name="MonoTests.System.Collections.DictionaryBaseTest.GetEnumerator" executed="True" success="True" time="0.000" asserts="13" />
                      <test-case name="MonoTests.System.Collections.DictionaryBaseTest.GetNoKey" executed="True" success="True" time="0.000" asserts="56" />
                      <test-case name="MonoTests.System.Collections.DictionaryBaseTest.GetOnGetExcept" executed="True" success="True" time="0.001" asserts="68" />
                      <test-case name="MonoTests.System.Collections.DictionaryBaseTest.IsFixedSize" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Collections.DictionaryBaseTest.IsReadOnly" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Collections.DictionaryBaseTest.Items" executed="True" success="True" time="0.000" asserts="95" />
                      <test-case name="MonoTests.System.Collections.DictionaryBaseTest.Keys" executed="True" success="True" time="0.001" asserts="17" />
                      <test-case name="MonoTests.System.Collections.DictionaryBaseTest.ModifyDictionary_Get" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Collections.DictionaryBaseTest.NullDictionary_Get" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.DictionaryBaseTest.Remove" executed="True" success="True" time="0.001" asserts="40" />
                      <test-case name="MonoTests.System.Collections.DictionaryBaseTest.RemoveKeyNotInDictionary" executed="True" success="True" time="0.001" asserts="94" />
                      <test-case name="MonoTests.System.Collections.DictionaryBaseTest.RemoveOnRemoveCompleteExcept" executed="True" success="True" time="0.001" asserts="103" />
                      <test-case name="MonoTests.System.Collections.DictionaryBaseTest.RemoveOnRemoveExcept" executed="True" success="True" time="0.001" asserts="102" />
                      <test-case name="MonoTests.System.Collections.DictionaryBaseTest.RemoveOnValidateExcept" executed="True" success="True" time="0.001" asserts="101" />
                      <test-case name="MonoTests.System.Collections.DictionaryBaseTest.Set" executed="True" success="True" time="0.001" asserts="69" />
                      <test-case name="MonoTests.System.Collections.DictionaryBaseTest.SetNewKey" executed="True" success="True" time="0.001" asserts="70" />
                      <test-case name="MonoTests.System.Collections.DictionaryBaseTest.SetOnSetCompleteExcept" executed="True" success="True" time="0.001" asserts="72" />
                      <test-case name="MonoTests.System.Collections.DictionaryBaseTest.SetOnSetExcept" executed="True" success="True" time="0.001" asserts="71" />
                      <test-case name="MonoTests.System.Collections.DictionaryBaseTest.SetOnValidateExcept" executed="True" success="True" time="0.001" asserts="70" />
                      <test-case name="MonoTests.System.Collections.DictionaryBaseTest.ThrowDictionary_Get" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Collections.DictionaryBaseTest.Values" executed="True" success="True" time="0.001" asserts="17" />
                    </results>
                  </test-suite>
                  <test-suite name="DictionaryEntryTest" success="True" time="0.006" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Collections.DictionaryEntryTest.Ctor" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Collections.DictionaryEntryTest.Key" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.DictionaryEntryTest.NullKeyCtor" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.DictionaryEntryTest.NullKeySetter" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.DictionaryEntryTest.Value" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="Generic" success="True" time="0.365" asserts="0">
                    <results>
                      <test-suite name="ComparerTest" success="True" time="0.006" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Collections.Generic.ComparerTest.Create" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.ComparerTest.Create_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.ComparerTest.DefaultComparer_NotComparableArgument" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.ComparerTest.DefaultComparer_UserComparable" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.ComparerTest.DeserializeDefault" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="DictionaryTest" success="True" time="0.150" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.AddDuplicateTest" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.AddLargeTest" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.AddNullTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.AddTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.AddTest2" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.AddTest3" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.Clear_Iterators" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.ClearTest" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.ContainsKeyTest" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.ContainsKeyTest2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.ContainsValueTest" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.CopyToArray" executed="True" success="True" time="0.003" asserts="5" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.DeserializeEmptyDictionary" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.DeserializeNonEmptyDictionary" executed="True" success="True" time="0.002" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.Dictionary_MoveNext" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.Empty_CopyTo" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.Empty_KeysValues_CopyTo" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.Enumerator_Current" executed="True" success="True" time="0.003" asserts="10" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.FailFastTest1" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.FailFastTest2" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.FailFastTest3" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.ForEachTest" executed="True" success="True" time="0.003" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.ICollectionCopyTo" executed="True" success="True" time="0.005" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.ICollectionCopyTo_ex1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.ICollectionCopyTo_ex2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.ICollectionCopyTo_ex3" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.ICollectionCopyTo_ex4" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.ICollectionCopyToDictionaryEntryArray" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.ICollectionCopyToInvalidArray" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.ICollectionCopyToKeyValuePairArray" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.ICollectionCopyToObjectArray" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.ICollectionOfKeyValuePairContains" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.ICollectionOfKeyValuePairRemove" executed="True" success="True" time="0.002" asserts="6" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.IDictionary_Add_Null" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.IDictionary_Add_Null_2" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.IDictionary_Add1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.IDictionary_Add2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.IDictionary_Add3" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.IDictionary_Contains" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.IDictionary_Contains2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.IDictionary_IndexerGetNonExistingTest" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.IDictionary_Remove1" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.IDictionary_Remove2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.IDictionaryAddTest" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.IDictionaryEnumeratorTest" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.IEnumeratorGenericTest" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.IEnumeratorTest" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.IndexerGetExistingTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.IndexerGetNonExistingTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.IndexerGetNullTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.IndexerSetExistingTest" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.IndexerSetNonExistingTest" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.IndexerSetNullTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.KeyCollectionTest" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.KeyEnumerator_Current" executed="True" success="True" time="0.003" asserts="10" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.KeyObjectMustNotGetChangedIfKeyAlreadyExists" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.KeyValueEnumeratorTest" executed="True" success="True" time="0.002" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.ObjectAsKeyTest" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.PlainEnumeratorReturnTest" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.RemoveTest" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.RemoveTest2" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.ResetKeysEnumerator" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.ResetShimEnumerator" executed="True" success="True" time="0.005" asserts="6" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.ResetValuesEnumerator" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.ResizeTest" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.SerializationTest" executed="True" success="True" time="0.009" asserts="54">
                            <categories>
                              <category name="TargetJvmNotWorking" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.SliceCollectionsEnumeratorTest" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.TryGetValueTest" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.ValueEnumerator_Current" executed="True" success="True" time="0.003" asserts="10" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.ValuesCopyToObjectArray" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.ValueTypeTest" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.DictionaryTest.ZeroCapacity" executed="True" success="True" time="0.001" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="EqualityComparerTest" success="True" time="0.001" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Collections.Generic.EqualityComparerTest.Default_GetHashCode_Null" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.EqualityComparerTest.NonGenericEqualsForNullArguments" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.EqualityComparerTest.NonGenericGetHashCodeForNullArgument" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="IListTest" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Collections.Generic.IListTest.CastToArray" executed="True" success="True" time="0.000" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite name="ListTest" success="True" time="0.186" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.AddNullRangeTest" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.AddRange_Bug77019" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.AddRangeTest" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.AddTest" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.BinarySearch_EmptyList" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.BinarySearch2_EmptyList" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.BinarySearchTest" executed="True" success="True" time="0.003" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.CapacityOutOfRangeTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.ClearTest" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.ConstructWithCollectionTest" executed="True" success="True" time="0.001" asserts="11" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.ConstructWithInvalidCollectionTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.ConstructWithInvalidSizeTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.ConstructWithSizeTest" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.ContainsTest" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.ConvertAllTest" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.CopyToNullTest" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.CopyToTest" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.DeserializeTest" executed="True" success="True" time="0.003" asserts="4">
                            <categories>
                              <category name="TargetJvmNotWorking" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.DotNetDoesntThrowObjectDisposedExceptionAfterSubsequentDisposes" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.Enumerator_Current" executed="True" success="True" time="0.004" asserts="10" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.Enumerator_Reset" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.EnumeratorIsObviouslyDifferentAfterListChanges" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.EnumeratorIsSameInSameListAfterSubsequentCalls" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.EnumeratorIsStillSameInSubsequentCallsEvenHavingADisposalInBetween" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.EnumeratorTest" executed="True" success="True" time="0.001" asserts="17" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.FindAllLargeTest" executed="True" success="True" time="0.038" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.FindAllMediumTest" executed="True" success="True" time="0.002" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.FindAllNullTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.FindAllSmallTest" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.FindIndex_Invalid" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.FindIndexTest" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.FindLastIndex_Invalid" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.FindLastIndexTest" executed="True" success="True" time="0.007" asserts="6" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.FindLastNullTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.FindLastTest" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.FindNullTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.FindTest" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.ForEachTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.GetRangeTest" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.ICollectionCopyToExceptions" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.IList_AddInvalidType1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.IList_AddInvalidType2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.IList_Contains_InvalidType" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.IList_IndexOf_InvalidType" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.IList_InsertInvalidType1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.IList_InsertInvalidType2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.IList_RemoveInvalidType" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.IndexOfOutOfRangeTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.IndexOfTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.InsertRangeNegativeIndexTest" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.InsertRangeNullTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.InsertRangeTest" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.InsertSelfTest" executed="True" success="True" time="0.001" asserts="11" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.InsertTest" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.LastIndexOfEmpty_2558" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.PremiseAboutDisposeBeingCalledWhenLooping" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.RemoveAllTest" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.RemoveAtTest" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.RemoveOutOfRangeTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.RemoveRangeFromEmptyListTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.RemoveRangeOutOfRangeTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.RemoveRangeTest" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.RemoveTest" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.ReverseOutOfRangeTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.ReverseTest" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.SetItem_IList_OutOfRange" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.SetItem_OutOfRange" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.Sort_Bug76361" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.Sort_GenericIComparable_Bug77039" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.Sort_GenericNonIComparable" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.Sort_GenericNonIComparable_2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.Sort_NonGenericIComparable" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.SortTest" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.Test_Contains_After_Remove" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.Test_ContainsAndIndexOf_EquatableItem" executed="True" success="True" time="0.002" asserts="6" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.ToArrayTest" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.TrimExcessTest" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.TrueForAllNullTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.TrueForAllTest" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.TwoEnumeratorsOfTwoDifferentListsAreDifferent" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.TwoEnumeratorsOfTwoDifferentListsWithSameElementsAreDifferent" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.VersionCheck_Add" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.VersionCheck_AddRange" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.VersionCheck_Clear" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.VersionCheck_Indexer" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.VersionCheck_Insert" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.VersionCheck_InsertRange" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.VersionCheck_Remove" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.VersionCheck_RemoveAll" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.VersionCheck_RemoveAt" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.VersionCheck_RemoveRange" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Collections.Generic.ListTest.VersionCheck_Reverse" executed="True" success="True" time="0.001" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="HashtableTest" success="True" time="0.396" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Collections.HashtableTest.CopyTo_Empty" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Collections.HashtableTest.GetObjectData_NullSerializationInfo" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.HashtableTest.SerializableSubClasses" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Collections.HashtableTest.SyncHashtable_ICollectionsGetEnumerator" executed="True" success="True" time="0.000" asserts="0">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Collections.HashtableTest.TestAdd" executed="True" success="True" time="0.001" asserts="103" />
                      <test-case name="MonoTests.System.Collections.HashtableTest.TestAddRemoveClear" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Collections.HashtableTest.TestCaseInsensitive" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Collections.HashtableTest.TestClear" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Collections.HashtableTest.TestClone" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.Collections.HashtableTest.TestContains" executed="True" success="True" time="0.013" asserts="10002" />
                      <test-case name="MonoTests.System.Collections.HashtableTest.TestContainsKey" executed="True" success="True" time="0.001" asserts="1002" />
                      <test-case name="MonoTests.System.Collections.HashtableTest.TestContainsValue" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Collections.HashtableTest.TestCopyConstructor" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Collections.HashtableTest.TestCopyTo" executed="True" success="True" time="0.002" asserts="12" />
                      <test-case name="MonoTests.System.Collections.HashtableTest.TestCopyTo2" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="MonoTests.System.Collections.HashtableTest.TestCount" executed="True" success="True" time="0.000" asserts="201" />
                      <test-case name="MonoTests.System.Collections.HashtableTest.TestCtor1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.HashtableTest.TestCtor2" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Collections.HashtableTest.TestCtor3" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Collections.HashtableTest.TestCtor4" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.HashtableTest.TestCtor5" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Collections.HashtableTest.TestEnumerator" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.HashtableTest.TestGetEnumerator" executed="True" success="True" time="0.001" asserts="9" />
                      <test-case name="MonoTests.System.Collections.HashtableTest.TestHashtableWithCustomComparer" executed="True" success="True" time="0.005" asserts="0" />
                      <test-case name="MonoTests.System.Collections.HashtableTest.TestIsFixedSize" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.HashtableTest.TestIsSynchronized" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Collections.HashtableTest.TestItem" executed="True" success="True" time="0.001" asserts="102" />
                      <test-case name="MonoTests.System.Collections.HashtableTest.TestKeys" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Collections.HashtableTest.TestRemove" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Collections.HashtableTest.TestSerialization" executed="True" success="True" time="0.003" asserts="100" />
                      <test-case name="MonoTests.System.Collections.HashtableTest.TestSerialization2" executed="True" success="True" time="0.001" asserts="1">
                        <categories>
                          <category name="TargetJvmNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Collections.HashtableTest.TestSynchronized" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Collections.HashtableTest.TestUnderHeavyLoad" executed="True" success="True" time="0.325" asserts="184935" />
                      <test-case name="MonoTests.System.Collections.HashtableTest.TestValues" executed="True" success="True" time="0.001" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite name="NewArrayListTest" success="True" time="0.119" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestAddRangeAdapter" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestAddRangeGetRange" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestAddRangeStandard" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestAddRangeSynchronized" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestBinarySearchAdapter" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestBinarySearchGetRange" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestBinarySearchStandard" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestBinarySearchSynchronized" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestCapacityExpands" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestCloneAdapter" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestCloneGetRange" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestCloneStandard" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestCloneSynchronized" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestCopyToAdapter" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestCopyToGetRange" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestCopyToStandard" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestCopyToSynchronized" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestEnumeratorAdapter" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestEnumeratorGetRange" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestEnumeratorStandard" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestEnumeratorSynchronized" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestEnumeratorWithRangeAdapter" executed="True" success="True" time="0.001" asserts="28" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestEnumeratorWithRangeGetRange" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestEnumeratorWithRangeStandard" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestEnumeratorWithRangeSynchronized" executed="True" success="True" time="0.000" asserts="28" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestFixedSize" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestGetRangeAdapter" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestGetRangeGetRange" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestGetRangeStandard" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestGetRangeSynchronized" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestIndexOfAdapter" executed="True" success="True" time="0.001" asserts="20" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestIndexOfGetRange" executed="True" success="True" time="0.001" asserts="20" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestIndexOfStandard" executed="True" success="True" time="0.000" asserts="20" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestIndexOfSynchronized" executed="True" success="True" time="0.001" asserts="20" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestInsertAdapter" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestInsertGetRange" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestInsertStandard" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestInsertSynchronized" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestIterator" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestIteratorObjects" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestReadOnly" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestRemoveAtAdapter" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestRemoveAtGetRange" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestRemoveAtStandard" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestRemoveAtSynchronized" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestRemoveRangeAdapter" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestRemoveRangeGetRange" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestRemoveRangeStandard" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestRemoveRangeSynchronized" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestReverseAdapter" executed="True" success="True" time="0.001" asserts="99" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestReverseGetRange" executed="True" success="True" time="0.004" asserts="99" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestReverseStandard" executed="True" success="True" time="0.001" asserts="99" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestReverseSynchronized" executed="True" success="True" time="0.001" asserts="99" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestSetCapacity" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestSetCapacitySynchronized" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestSortAdapter" executed="True" success="True" time="0.008" asserts="0" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestSortGetRange" executed="True" success="True" time="0.017" asserts="0" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestSortStandard" executed="True" success="True" time="0.008" asserts="0" />
                      <test-case name="MonoTests.System.Collections.NewArrayListTest.TestSortSynchronized" executed="True" success="True" time="0.011" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="ObjectModel" success="True" time="0.032" asserts="0">
                    <results>
                      <test-suite name="CollectionTest" success="True" time="0.008" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Collections.ObjectModel.CollectionTest.ICollection_CopyTo" executed="True" success="True" time="0.005" asserts="12" />
                          <test-case name="MonoTests.System.Collections.ObjectModel.CollectionTest.UnusableSyncLockTest" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Collections.ObjectModel.CollectionTest.UsableSyncLockTest" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="KeyedCollectionTest" success="True" time="0.011" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Collections.ObjectModel.KeyedCollectionTest.Insert_DuplicateKey" executed="True" success="True" time="0.003" asserts="2" />
                          <test-case name="MonoTests.System.Collections.ObjectModel.KeyedCollectionTest.Insert_DuplicateKey_NoDictionary" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Collections.ObjectModel.KeyedCollectionTest.Insert_InvalidIndexDoesNotInsert" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Collections.ObjectModel.KeyedCollectionTest.TestDelete" executed="True" success="True" time="0.002" asserts="9" />
                          <test-case name="MonoTests.System.Collections.ObjectModel.KeyedCollectionTest.TestInsert" executed="True" success="True" time="0.001" asserts="14" />
                        </results>
                      </test-suite>
                      <test-suite name="ReadOnlyCollectionTest" success="True" time="0.008" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Collections.ObjectModel.ReadOnlyCollectionTest.Constructor0" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Collections.ObjectModel.ReadOnlyCollectionTest.Constructor0_List_Null" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Collections.ObjectModel.ReadOnlyCollectionTest.ICollection_CopyTo" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Collections.ObjectModel.ReadOnlyCollectionTest.ICollection_Properties" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Collections.ObjectModel.ReadOnlyCollectionTest.IList_Properties" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Collections.ObjectModel.ReadOnlyCollectionTest.IsSimpleWrapper" executed="True" success="True" time="0.001" asserts="2" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="QueueTest" success="True" time="0.041" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Collections.QueueTest.EnumeratorCurrentAfterMoveNextAll" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Collections.QueueTest.EnumeratorFalseAfterMoveNextAll" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.QueueTest.SynchronizedClone" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Collections.QueueTest.TestAlwaysGrows" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Collections.QueueTest.TestClear" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Collections.QueueTest.TestClone" executed="True" success="True" time="0.000" asserts="53" />
                      <test-case name="MonoTests.System.Collections.QueueTest.TestConstructorException1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.QueueTest.TestConstructorException2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.QueueTest.TestConstructorException3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.QueueTest.TestConstructorException4" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.QueueTest.TestConstructors" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Collections.QueueTest.TestContains" executed="True" success="True" time="0.001" asserts="302" />
                      <test-case name="MonoTests.System.Collections.QueueTest.TestCopyTo" executed="True" success="True" time="0.001" asserts="210" />
                      <test-case name="MonoTests.System.Collections.QueueTest.TestCopyToException1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.QueueTest.TestCopyToException2" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.QueueTest.TestCopyToException3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.QueueTest.TestCopyToException4" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.QueueTest.TestCount" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Collections.QueueTest.TestDequeue" executed="True" success="True" time="0.000" asserts="50" />
                      <test-case name="MonoTests.System.Collections.QueueTest.TestDequeueEmpty" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.QueueTest.TestEnqueueDequeuePeek" executed="True" success="True" time="0.001" asserts="454" />
                      <test-case name="MonoTests.System.Collections.QueueTest.TestEnumerator" executed="True" success="True" time="0.000" asserts="150" />
                      <test-case name="MonoTests.System.Collections.QueueTest.TestEnumeratorException1" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Collections.QueueTest.TestICollectionConstructor" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.Collections.QueueTest.TestICollectionCtorUsesEnum" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.QueueTest.TestIsSynchronized" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Collections.QueueTest.TestSynchronizedException" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.QueueTest.TestSyncRoot" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.QueueTest.TestToArray" executed="True" success="True" time="0.000" asserts="101" />
                      <test-case name="MonoTests.System.Collections.QueueTest.TestTrimToSize" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.QueueTest.TrimToSize_Dequeue_Enqueue" executed="True" success="True" time="0.001" asserts="64" />
                      <test-case name="MonoTests.System.Collections.QueueTest.TrimToSize_Enqueue_Dequeue" executed="True" success="True" time="0.003" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="SortedListTest" success="True" time="0.102" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Collections.SortedListTest.Capacity_BackTo0" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.ClearDoesNotTouchCapacity" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.ComparatorPartWholeCheck" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.ComparatorUsageTest" executed="True" success="True" time="0.001" asserts="11" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.Ctor_IComparer" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.Ctor_IComparer_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.Ctor_IDictionary_DefaultInvariant_After" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.Ctor_IDictionary_DefaultInvariant_Before" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.Ctor_IDictionary_IComparer_After" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.Ctor_IDictionary_IComparer_Before" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.Ctor_IDictionary_IComparer_Null_After_1item" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.Ctor_IDictionary_IComparer_Null_After_2items" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.Ctor_IDictionary_IComparer_Null_Before_1item" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.Ctor_IDictionary_IComparer_Null_Before_2items" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.GetEnumerator" executed="True" success="True" time="0.002" asserts="6" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.IComparer_Clone" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.IComparer_Null_Clone" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.Keys_Serialize" executed="True" success="True" time="0.005" asserts="5">
                        <categories>
                          <category name="TargetJvmNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Collections.SortedListTest.NonComparatorStringCheck" executed="True" success="True" time="0.001" asserts="10" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.SerializeTest" executed="True" success="True" time="0.001" asserts="5">
                        <categories>
                          <category name="TargetJvmNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Collections.SortedListTest.SetIdenticalObjectException" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.TestAdd" executed="True" success="True" time="0.003" asserts="200" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.TestCapacity" executed="True" success="True" time="0.000" asserts="100" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.TestCapacity2" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.TestCapacity3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.TestClear" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.TestClone" executed="True" success="True" time="0.003" asserts="55" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.TestConstructor2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.TestConstructor3" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.TestConstructor4" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.TestConstructor5" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.TestContains" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.TestContainsKey" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.TestContainsValue" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.TestCopyTo" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.TestCount" executed="True" success="True" time="0.001" asserts="101" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.TestEnumerator" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.TestGetByIndex" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.TestGetKey" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.TestGetKeyList" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.TestGetValueList" executed="True" success="True" time="0.001" asserts="14" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.TestIndexer" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.TestIndexOfKey" executed="True" success="True" time="0.002" asserts="52" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.TestIndexOfValue" executed="True" success="True" time="0.002" asserts="52" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.TestIndexOfValue2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.TestIndexOfValue3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.TestIsFixed" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.TestIsReadOnly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.TestIsSynchronized" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.TestItem" executed="True" success="True" time="0.002" asserts="102" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.TestRemove" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.TestRemoveAt" executed="True" success="True" time="0.002" asserts="51" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.TestSetByIndex" executed="True" success="True" time="0.001" asserts="50" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.TestSyncRoot" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.TestTrimToSize" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.TestValues" executed="True" success="True" time="0.002" asserts="101" />
                      <test-case name="MonoTests.System.Collections.SortedListTest.Values_Serialize" executed="True" success="True" time="0.002" asserts="5">
                        <categories>
                          <category name="TargetJvmNotWorking" />
                        </categories>
                      </test-case>
                    </results>
                  </test-suite>
                  <test-suite name="StackTest" success="True" time="0.031" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Collections.StackTest.TestClear" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Collections.StackTest.TestClone" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Collections.StackTest.TestConstructor" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.StackTest.TestContains" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Collections.StackTest.TestCopyTo" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Collections.StackTest.TestCount" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.StackTest.TestEmptyCopyTo" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.StackTest.TestEnumeratorMoveNextException" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Collections.StackTest.TestEnumeratorReset1" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Collections.StackTest.TestEnumeratorReset2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.StackTest.TestGetEnumerator1" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Collections.StackTest.TestGetEnumerator2" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.StackTest.TestGetEnumerator3" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.StackTest.TestICollectionConstructor1" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.Collections.StackTest.TestICollectionConstructor2" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Collections.StackTest.TestICollectionCtorUsesEnum" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Collections.StackTest.TestIntConstructor1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.StackTest.TestIntConstructor2" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Collections.StackTest.TestIsSyncronized" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Collections.StackTest.TestPop" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Collections.StackTest.TestPushPeekPop" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Collections.StackTest.TestResize" executed="True" success="True" time="0.001" asserts="1500" />
                      <test-case name="MonoTests.System.Collections.StackTest.TestSyncronized" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Collections.StackTest.TestSyncRoot" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Collections.StackTest.TestToArray" executed="True" success="True" time="0.000" asserts="6" />
                    </results>
                  </test-suite>
                  <test-suite name="StructuralComparisonsTest" success="True" time="0.001" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Collections.StructuralComparisonsTest.EqualsTest" executed="True" success="True" time="0.001" asserts="6" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="ConsoleTest" success="True" time="0.034" asserts="0">
                <results>
                  <test-case name="MonoTests.System.ConsoleTest.EncodingTest" executed="True" success="True" time="0.002" asserts="2" />
                  <test-case name="MonoTests.System.ConsoleTest.RedirectedTest" executed="False">
                    <reason>
                      <message><![CDATA[The error output stream of the console is redirected.]]></message>
                    </reason>
                  </test-case>
                  <test-case name="MonoTests.System.ConsoleTest.TestError" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.ConsoleTest.TestIn" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.ConsoleTest.TestOpenStandardError" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.ConsoleTest.TestOpenStandardInput" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.ConsoleTest.TestOpenStandardOutput" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.ConsoleTest.TestOut" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.ConsoleTest.TestRead" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.ConsoleTest.TestReadLine" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.ConsoleTest.TestSetError" executed="True" success="True" time="0.010" asserts="2" />
                  <test-case name="MonoTests.System.ConsoleTest.TestSetIn" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.ConsoleTest.TestSetOut" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.ConsoleTest.TestWrite" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.ConsoleTest.TestWrite_Params" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ConsoleTest.TestWriteLine" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.ConsoleTest.TestWriteLine_Params" executed="True" success="True" time="0.001" asserts="0" />
                </results>
              </test-suite>
              <test-suite name="ConvertTest" success="True" time="0.297" asserts="0">
                <results>
                  <test-case name="MonoTests.System.ConvertTest.Base64String_LineEnds_InsertLineBreaks" executed="True" success="True" time="0.003" asserts="9" />
                  <test-case name="MonoTests.System.ConvertTest.Base64String_LineEnds_None" executed="True" success="True" time="0.001" asserts="9" />
                  <test-case name="MonoTests.System.ConvertTest.ChangeType_ShouldThrowOnString" executed="True" success="True" time="0.002" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ChangeType_Value_IConvertible" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.ConvertTest.ChangeTypeFromInvalidDouble" executed="True" success="True" time="0.005" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ChangeTypeNullToValuetype" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ChangeTypeToTypeCodeEmpty" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.CharChangeTypeNullNull" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.FormatBase64CharArray_OnlyWhitespace" executed="True" success="True" time="0.001" asserts="0">
                    <categories>
                      <category name="TargetJvmNotWorking" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.ConvertTest.FromBase64_Empty" executed="True" success="True" time="0.000" asserts="1">
                    <categories>
                      <category name="TargetJvmNotWorking" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.ConvertTest.FromBase64_IgnoreCharsAfter" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.ConvertTest.FromBase64_IgnoreCharsBefore" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.ConvertTest.FromBase64_IgnoreCharsInside" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.ConvertTest.FromBase64_InvalidChar" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.FromBase64_Min" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.FromBase64_OnlyWhiteSpace" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.ConvertTest.FromBase64_TrailingEqualAndSpaces" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.ConvertTest.FromBase64CharArray" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.ConvertTest.FromBase64CharArray_Empty" executed="True" success="True" time="0.000" asserts="0">
                    <categories>
                      <category name="TargetJvmNotWorking" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.ConvertTest.FromBase64CharArray_InvalidLength" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.FromBase64CharArray_Null" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.FromBase64CharArray_OutOfRangeLength" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.FromBase64CharArray_OutOfRangeStart" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.FromBase64CharArray_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.FromBase64CharArray_WideChar" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.FromBase64String_InvalidLength" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.FromBase64String_InvalidLength2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.FromBase64String_InvalidLengthBecauseOfIgnoredChars" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.ConvertTest.FromBase64String_Null" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.FromBase64StringInvalidFormat" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.FromBase64StringInvalidFormat2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.StringChangeTypeNullNull" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.TestBeginWithSpaces" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.ConvertTest.TestConvertFromNull" executed="True" success="True" time="0.005" asserts="30" />
                  <test-case name="MonoTests.System.ConvertTest.TestInvalidBase64" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.TestInvalidBase64_Bug5464" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.TestInvalidBase64_TooManyPaddings" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.TestValidBase64_Bug5464" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.ConvertTest.To_NullObject" executed="True" success="True" time="0.001" asserts="8" />
                  <test-case name="MonoTests.System.ConvertTest.To_NullObjectFormatProvider" executed="True" success="True" time="0.001" asserts="8" />
                  <test-case name="MonoTests.System.ConvertTest.To_NullString" executed="True" success="True" time="0.003" asserts="16" />
                  <test-case name="MonoTests.System.ConvertTest.To_NullStringFormatProvider" executed="True" success="True" time="0.002" asserts="7" />
                  <test-case name="MonoTests.System.ConvertTest.ToBase64CharArray_InNull" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToBase64CharArray_LengthNegative" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToBase64CharArray_OffsetInNegative" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToBase64CharArray_OffsetOutNegative" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToBase64CharArray_OutNull" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToBase64CharArray_TotalIn" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToBase64CharArray_TotalInOverflow" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToBase64CharArray_TotalOut" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToBase64CharArray_TotalOutOverflow" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToBase64String_Bug76876" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.ConvertTest.ToByte_BadHexPrefix1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToByte_BadHexPrefix2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToByte_BadHexPrefix3" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToByte_Base10_Empty" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToByte_Base10_InvalidChars1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToByte_Base10_InvalidChars2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToByte_Base10_NegativeSignOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToByte_Base16_Empty" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToByte_Base16_InvalidChars1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToByte_Base16_InvalidChars2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToByte_Base16_NegativeSignOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToByte_Base2_Empty" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToByte_Base2_NegativeSignOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToByte_Base8_Empty" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToByte_Base8_NegativeSignOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToByte_HexPrefixOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToByte_MaxValue" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.ConvertTest.ToByte_MinValue" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.ConvertTest.ToByte_NegativeString" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToByte_NegativeString_Base10" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToByte_NegativeStringNonBase10" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToByte_NegativeZeroString" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToByte_OverMaxValue" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToByte_OverMinValue" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToByte_PrefixedHexStringInBase16" executed="True" success="True" time="0.000" asserts="9" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt16_BadHexPrefix1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt16_BadHexPrefix2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt16_BadHexPrefix3" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt16_Base10_Empty" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt16_Base10_InvalidChars1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt16_Base10_InvalidChars2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt16_Base10_NegativeSignOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt16_Base16_Empty" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt16_Base16_InvalidChars1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt16_Base16_InvalidChars2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt16_Base16_MinMax" executed="True" success="True" time="0.000" asserts="7" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt16_Base16_NegativeSignOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt16_Base2_Empty" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt16_Base2_NegativeSignOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt16_Base8_Empty" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt16_Base8_NegativeSignOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt16_HexPrefixOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt16_MaxValue" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt16_MinValue" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt16_OverMaxValue" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt16_OverMinValue" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt32_BadHexPrefix1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt32_BadHexPrefix2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt32_BadHexPrefix3" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt32_Base10_Empty" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt32_Base10_InvalidChars1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt32_Base10_InvalidChars2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt32_Base10_NegativeSignOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt32_Base16_Empty" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt32_Base16_InvalidChars1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt32_Base16_InvalidChars2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt32_Base16_MinMax" executed="True" success="True" time="0.000" asserts="7" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt32_Base16_NegativeSignOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt32_Base2_Empty" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt32_Base2_NegativeSignOnly" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt32_Base8_Empty" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt32_Base8_NegativeSignOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt32_HexPrefixOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt32_InvalidFormatProvider" executed="True" success="True" time="0.003" asserts="1" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt32_MaxValue" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt32_MinValue" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt32_NaN" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt32_OverMaxValue" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt32_OverMinValue" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt64_BadHexPrefix1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt64_BadHexPrefix2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt64_BadHexPrefix3" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt64_Base10_Empty" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt64_Base10_InvalidChars1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt64_Base10_InvalidChars2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt64_Base10_NegativeSignOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt64_Base16_Empty" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt64_Base16_InvalidChars1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt64_Base16_InvalidChars2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt64_Base16_NegativeSignOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt64_Base2_Empty" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt64_Base2_NegativeSignOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt64_Base8_Empty" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt64_Base8_NegativeSignOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt64_HexPrefixOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt64_MaxValue" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt64_MinValue" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt64_OverMaxValue" executed="True" success="True" time="0.004" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToInt64_OverMinValue" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToSByte_BadHexPrefix1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToSByte_BadHexPrefix2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToSByte_BadHexPrefix3" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToSByte_Base10_Empty" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToSByte_Base10_InvalidChars1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToSByte_Base10_InvalidChars2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToSByte_Base10_NegativeSignOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToSByte_Base16_Empty" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToSByte_Base16_InvalidChars1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToSByte_Base16_InvalidChars2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToSByte_Base16_MinMax" executed="True" success="True" time="0.000" asserts="7" />
                  <test-case name="MonoTests.System.ConvertTest.ToSByte_Base16_NegativeSignOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToSByte_Base2_Empty" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToSByte_Base2_NegativeSignOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToSByte_Base8_Empty" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToSByte_Base8_NegativeSignOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToSByte_HexPrefixOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToSByte_MaxValue" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.ConvertTest.ToSByte_MinValue" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.ConvertTest.ToSByte_NullStringFormatProvider" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToSByte_OverMaxValue" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToSByte_OverMinValue" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToString_MinMax_WithBase" executed="True" success="True" time="0.003" asserts="32" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt16_BadHexPrefix1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt16_BadHexPrefix2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt16_BadHexPrefix3" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt16_Base10_Empty" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt16_Base10_InvalidChars1" executed="True" success="True" time="0.003" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt16_Base10_InvalidChars2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt16_Base10_NegativeSignOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt16_Base16_Empty" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt16_Base16_InvalidChars1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt16_Base16_InvalidChars2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt16_Base16_NegativeSignOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt16_Base2_Empty" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt16_Base2_NegativeSignOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt16_Base8_Empty" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt16_Base8_NegativeSignOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt16_HexPrefixOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt16_MaxValue" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt16_MinValue" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt16_NegativeString" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt16_NegativeString_Base10" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt16_NegativeStringNonBase10" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt16_NegativeZeroString" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt16_OverMaxValue" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt16_OverMinValue" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt32_BadHexPrefix1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt32_BadHexPrefix2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt32_BadHexPrefix3" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt32_Base10_Empty" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt32_Base10_InvalidChars1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt32_Base10_InvalidChars2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt32_Base10_NegativeSignOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt32_Base16_Empty" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt32_Base16_InvalidChars1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt32_Base16_InvalidChars2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt32_Base16_NegativeSignOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt32_Base2_Empty" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt32_Base2_NegativeSignOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt32_Base8_Empty" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt32_Base8_NegativeSignOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt32_HexPrefixOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt32_MaxValue" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt32_MinValue" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt32_NegativeString" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt32_NegativeString_Base10" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt32_NegativeStringNonBase10" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt32_NegativeZeroString" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt32_OverMaxValue" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt32_OverMinValue" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt64_BadHexPrefix1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt64_BadHexPrefix2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt64_BadHexPrefix3" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt64_Base10_Empty" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt64_Base10_InvalidChars1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt64_Base10_InvalidChars2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt64_Base10_NegativeSignOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt64_Base16_Empty" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt64_Base16_InvalidChars1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt64_Base16_InvalidChars2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt64_Base16_NegativeSignOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt64_Base2_Empty" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt64_Base2_NegativeSignOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt64_Base8_Empty" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt64_Base8_NegativeSignOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt64_HexPrefixOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt64_MaxValue" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt64_MinValue" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt64_NegativeString" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt64_NegativeString_Base10" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt64_NegativeStringNonBase10" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt64_NegativeZeroString" executed="True" success="True" time="0.003" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt64_OverMaxValue" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ConvertTest.ToUInt64_OverMinValue" executed="True" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
              <test-suite name="DateTimeOffsetTest" success="True" time="0.100" asserts="0">
                <results>
                  <test-case name="MonoTests.System.DateTimeOffsetTest.ArithmeticAccrossDSTBoudaries" executed="True" success="True" time="0.002" asserts="2" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.CompareTwoDateInDiffTZ" executed="True" success="True" time="0.002" asserts="9" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.Deserialization" executed="True" success="True" time="0.003" asserts="30" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.EqualsObject" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.LocalWithWrongOffset" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.OffsetNotInWholeminutes" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.OffsetOutOfRange1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.OffsetOutOfRange2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.ParameterlessToString" executed="True" success="True" time="0.007" asserts="3" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.ParseDateOnly" executed="True" success="True" time="0.012" asserts="3" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.ParseExactCustomFormat" executed="True" success="True" time="0.005" asserts="1" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.ParseExactDatesOnly" executed="True" success="True" time="0.001" asserts="9" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.ParseExactFormatException1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.ParseExactFormatException2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.ParseExactFormatException3" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.ParseExactFormatException4" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.ParseExactFormatException5" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.ParseExactOffsetFormat" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.ParseExactPreserveFractions" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.ParseExactTest" executed="True" success="True" time="0.003" asserts="76" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.ParseExactWithFractions" executed="True" success="True" time="0.001" asserts="14" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.ParseExactWithKFormat" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.ParseExactWithSeconds" executed="True" success="True" time="0.006" asserts="2" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.ParseExactYearException" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.ParseExactYearFormat" executed="True" success="True" time="0.001" asserts="16" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.ParseFull1" executed="True" success="True" time="0.002" asserts="8" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.ParseOverflow" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.ParseTimeOnly" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.ParseTimePMTZ" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.ParseTimeTZ" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.ParseUnderflow" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.Serialization" executed="True" success="True" time="0.002" asserts="6" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.ToStringExceptionalCase1" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.ToStringExceptionalCase2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.ToStringWithCultureInfo" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.ToStringWithFormat" executed="True" success="True" time="0.003" asserts="16" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.ToStringWithFormatAndCulture" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.UtcDateTime" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.UtcDateTimeOutOfRange1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.UtcDateTimeOutOfRange2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeOffsetTest.UtcWithWrongOffset" executed="True" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
              <test-suite name="DateTimeTest" success="True" time="0.661" asserts="0">
                <results>
                  <test-case name="MonoTests.System.DateTimeTest.Add" executed="True" success="True" time="0.001" asserts="8" />
                  <test-case name="MonoTests.System.DateTimeTest.AddDays" executed="True" success="True" time="0.000" asserts="12" />
                  <test-case name="MonoTests.System.DateTimeTest.AddDaysOutOfRangeException1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.AddDaysOutOfRangeException2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.AddHours" executed="True" success="True" time="0.000" asserts="12" />
                  <test-case name="MonoTests.System.DateTimeTest.AddHoursOutOfRangeException1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.AddHoursOutOfRangeException2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.AddMilliseconds" executed="True" success="True" time="0.000" asserts="12" />
                  <test-case name="MonoTests.System.DateTimeTest.AddMillisecondsOutOfRangeException1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.AddMillisecondsOutOfRangeException2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.AddOutOfRangeException1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.AddOutOfRangeException2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.Bug352210" executed="True" success="True" time="0.002" asserts="2" />
                  <test-case name="MonoTests.System.DateTimeTest.Bug352210_New" executed="True" success="True" time="0.002" asserts="16" />
                  <test-case name="MonoTests.System.DateTimeTest.Bug377042" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.CompareTicks" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.DateTimeTest.Constructor_Max" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.DateTimeTest.Constructor_Milliseconds_1000" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.Constructor_Milliseconds_Negative" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.CultureIndependentTests" executed="True" success="True" time="0.399" asserts="821" />
                  <test-case name="MonoTests.System.DateTimeTest.DateTimeStylesAdjustToUniversal" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.DateTimeTest.EmptyFormatPattern" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.EmptyString" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.Fields" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.DateTimeTest.FromBinary" executed="True" success="True" time="0.001" asserts="7" />
                  <test-case name="MonoTests.System.DateTimeTest.FromFileTimeUtcTest" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.DateTimeTest.FromOADate" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.DateTimeTest.FromOADate_Max" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.FromOADate_Min" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.GenitiveMonth" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.DateTimeTest.IConvertible_ToType_Boolean" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.IConvertible_ToType_Byte" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.IConvertible_ToType_Char" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.IConvertible_ToType_DateTime" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.DateTimeTest.IConvertible_ToType_DBNull" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.IConvertible_ToType_Decimal" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.IConvertible_ToType_Double" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.IConvertible_ToType_Empty" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.IConvertible_ToType_Int16" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.IConvertible_ToType_Int32" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.IConvertible_ToType_Int64" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.IConvertible_ToType_Object" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.DateTimeTest.IConvertible_ToType_SByte" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.IConvertible_ToType_Single" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.IConvertible_ToType_String" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.DateTimeTest.IConvertible_ToType_UInt16" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.IConvertible_ToType_UInt32" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.IConvertible_ToType_UInt64" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.IllegalStyleCombination1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.IllegalStyleCombination2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.IllegalStyleCombination3" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.IllegalStyleCombination4" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.InstanceMembersAndKind" executed="True" success="True" time="0.002" asserts="13" />
                  <test-case name="MonoTests.System.DateTimeTest.Kind" executed="False">
                    <reason>
                      <message><![CDATA[]]></message>
                    </reason>
                  </test-case>
                  <test-case name="MonoTests.System.DateTimeTest.KindInPattern" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.DateTimeTest.KindPattern" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.DateTimeTest.MaxValueYear" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.DateTimeTest.Milliseconds" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.DateTimeTest.MSAndZ" executed="True" success="True" time="0.003" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.NoColonTimeZone" executed="True" success="True" time="0.002" asserts="1" />
                  <test-case name="MonoTests.System.DateTimeTest.OmittedSecondsFraction" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.DateTimeTest.Parse_Bug53023b" executed="True" success="True" time="0.018" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.Parse_Bug71289a" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.Parse_Bug71289b" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.Parse_Bug72788" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.DateTimeTest.Parse_CommaAfterHours" executed="True" success="True" time="0.002" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.Parse_DateWithTimeZone_TimeZoneShouldBeCorrectlyRead" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.DateTimeTest.Parse_DontAccept2DigitsYears" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.Parse_DontAcceptEmptyHours" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.Parse_DontAcceptEmptyMinutes" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.Parse_HourDesignator" executed="True" success="True" time="0.001" asserts="14" />
                  <test-case name="MonoTests.System.DateTimeTest.Parse_InvalidShortDate" executed="True" success="True" time="0.006" asserts="126" />
                  <test-case name="MonoTests.System.DateTimeTest.Parse_RequireSpaceSeparator" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.Parse_ThaiCalendar" executed="True" success="True" time="0.002" asserts="2" />
                  <test-case name="MonoTests.System.DateTimeTest.ParseAllowsQueerString" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.ParseCOMDependentFormat" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.ParseExact_Bug324845" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.DateTimeTest.ParseExact_Bug80094" executed="True" success="True" time="0.001" asserts="7" />
                  <test-case name="MonoTests.System.DateTimeTest.ParseExact_Format_Empty" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.DateTimeTest.ParseExact_Format_Null" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.DateTimeTest.ParseExact_Formats_Empty" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.DateTimeTest.ParseExact_Formats_Null" executed="True" success="True" time="0.001" asserts="8" />
                  <test-case name="MonoTests.System.DateTimeTest.ParseExact_String_Empty" executed="True" success="True" time="0.001" asserts="9" />
                  <test-case name="MonoTests.System.DateTimeTest.ParseExact_String_Null" executed="True" success="True" time="0.001" asserts="15" />
                  <test-case name="MonoTests.System.DateTimeTest.ParseExactDoesNotEatZ" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.ParseExactIsExact" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.ParseExactMilliseconds" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.DateTimeTest.ParseFormatException1" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.ParseFormatExceptionForInvalidYear" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.ParseNotExact" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.ParseUtcNonUtc" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.DateTimeTest.QuotedFormat" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.RoundtripBinary" executed="True" success="True" time="0.001" asserts="7" />
                  <test-case name="MonoTests.System.DateTimeTest.RoundtripPattern" executed="True" success="True" time="0.002" asserts="5" />
                  <test-case name="MonoTests.System.DateTimeTest.TestAssumeLocal" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.DateTimeTest.TestCtors" executed="True" success="True" time="0.001" asserts="11" />
                  <test-case name="MonoTests.System.DateTimeTest.TestMin" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.TestOA" executed="True" success="True" time="0.001" asserts="7" />
                  <test-case name="MonoTests.System.DateTimeTest.TestParse2" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.DateTimeTest.TestParse3" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.TestParse4" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.TestParseDateFirst" executed="True" success="True" time="0.013" asserts="44" />
                  <test-case name="MonoTests.System.DateTimeTest.TestParseExact" executed="True" success="True" time="0.007" asserts="68" />
                  <test-case name="MonoTests.System.DateTimeTest.TestParseExact3" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.DateTimeTest.TestParseExact4" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.TestParseExact4_2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.TestParseExact5" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.DateTimeTest.TestParseExactMiliseconds" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.DateTimeTest.TestParseExactXmlTimeFormats" executed="True" success="True" time="0.009" asserts="27" />
                  <test-case name="MonoTests.System.DateTimeTest.TestParseTimeFirst" executed="True" success="True" time="0.003" asserts="17" />
                  <test-case name="MonoTests.System.DateTimeTest.TestParseWithDifferentMonthDayPatterns" executed="True" success="True" time="0.002" asserts="15" />
                  <test-case name="MonoTests.System.DateTimeTest.TestParseWithDifferentShortDatePatterns" executed="True" success="True" time="0.002" asserts="19" />
                  <test-case name="MonoTests.System.DateTimeTest.TestRegularStyle" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.DateTimeTest.TestRoundTrip" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.DateTimeTest.TestToString" executed="True" success="True" time="0.003" asserts="52" />
                  <test-case name="MonoTests.System.DateTimeTest.TestToStringGenitive" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.DateTimeTest.TestUtcOffset_Novell710512" executed="True" success="True" time="0.010" asserts="1" />
                  <test-case name="MonoTests.System.DateTimeTest.TimeZoneAdjustment" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.DateTimeTest.ToBinary" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.DateTimeTest.ToFileTime" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.DateTimeTest.ToFileTime_MinValue" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.ToFileTime_Negative" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.ToFileTimeUtc" executed="True" success="True" time="0.002" asserts="10" />
                  <test-case name="MonoTests.System.DateTimeTest.ToFileTimeUtc_MinValue" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.ToFileTimeUtc_Negative" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.ToOADate" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.DateTimeTest.ToOADate_MaxValue" executed="False">
                    <reason>
                      <message><![CDATA[This test is probably geo location dependent, at least fails on .NET 4.0 in Japan]]></message>
                    </reason>
                  </test-case>
                  <test-case name="MonoTests.System.DateTimeTest.ToOADate_MinValue" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.DateTimeTest.ToOADate_OverMax" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.DateTimeTest.ToOADate_UnderMin" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.DateTimeTest.TrailingDot" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.TrailingFlexibleMilliseconds" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DateTimeTest.TryEmptyString" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.DateTimeTest.TryParseExact_NullString" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.DateTimeTest.WithColonTimeZone" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.DateTimeTest.X509Certificate" executed="True" success="True" time="0.001" asserts="7" />
                  <test-case name="MonoTests.System.DateTimeTest.ZLiteral" executed="True" success="True" time="0.001" asserts="4" />
                </results>
              </test-suite>
              <test-suite name="DecimalFormatterTest" success="True" time="0.030" asserts="0">
                <results>
                  <test-case name="MonoTests.System.DecimalFormatterTest.TestFormatStrings" executed="True" success="True" time="0.004" asserts="264" />
                  <test-case name="MonoTests.System.DecimalFormatterTest.TestToDecimal" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.DecimalFormatterTest.TestToHex" executed="True" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
              <test-suite name="DecimalTest" success="True" time="0.132" asserts="0">
                <results>
                  <test-case name="MonoTests.System.DecimalTest.CastTruncRounding" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.DecimalTest.Divide" executed="True" success="True" time="0.002" asserts="12" />
                  <test-case name="MonoTests.System.DecimalTest.Divide_ByZero" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DecimalTest.MidpointRoundingAwayFromZero" executed="True" success="True" time="0.004" asserts="16" />
                  <test-case name="MonoTests.System.DecimalTest.Parse_CurrencyGroupSeparatorIsEmpty_DoNotThrowIndexOutOfRangeException" executed="True" success="True" time="0.004" asserts="0">
                    <properties>
                      <property name="_SETCULTURE" value="" />
                    </properties>
                  </test-case>
                  <test-case name="MonoTests.System.DecimalTest.Parse_Int64_Overflow" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.DecimalTest.Parse_LeadingSign_NegativeSignIsEmpty_DoNotThrowIndexOutOfRangeException" executed="True" success="True" time="0.001" asserts="0">
                    <properties>
                      <property name="_SETCULTURE" value="" />
                    </properties>
                  </test-case>
                  <test-case name="MonoTests.System.DecimalTest.Parse_LeadingSign_PositiveSignIsEmpty_DoNotThrowIndexOutOfRangeException" executed="True" success="True" time="0.001" asserts="0">
                    <properties>
                      <property name="_SETCULTURE" value="" />
                    </properties>
                  </test-case>
                  <test-case name="MonoTests.System.DecimalTest.Parse_NumberGroupSeparatorIsEmpty_DoNotThrowIndexOutOfRangeException" executed="True" success="True" time="0.000" asserts="0">
                    <properties>
                      <property name="_SETCULTURE" value="" />
                    </properties>
                  </test-case>
                  <test-case name="MonoTests.System.DecimalTest.Parse_TrailingSign_NegativeSignIsEmpty_DoNotThrowIndexOutOfRangeException" executed="True" success="True" time="0.000" asserts="0">
                    <properties>
                      <property name="_SETCULTURE" value="" />
                    </properties>
                  </test-case>
                  <test-case name="MonoTests.System.DecimalTest.Parse_TrailingSign_PositiveSignIsEmpty_DoNotThrowIndexOutOfRangeException" executed="True" success="True" time="0.000" asserts="0">
                    <properties>
                      <property name="_SETCULTURE" value="" />
                    </properties>
                  </test-case>
                  <test-case name="MonoTests.System.DecimalTest.ParseAndKeepPrecision" executed="True" success="True" time="0.001" asserts="58">
                    <properties>
                      <property name="_SETCULTURE" value="en-US" />
                    </properties>
                  </test-case>
                  <test-case name="MonoTests.System.DecimalTest.ParseCultureSeparator" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.DecimalTest.ParseFractions" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.DecimalTest.ParseInt64" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.DecimalTest.ParseZeros" executed="True" success="True" time="0.001" asserts="7">
                    <properties>
                      <property name="_SETCULTURE" value="en-US" />
                    </properties>
                  </test-case>
                  <test-case name="MonoTests.System.DecimalTest.Remainder" executed="True" success="True" time="0.001" asserts="12" />
                  <test-case name="MonoTests.System.DecimalTest.Remainder_ByZero" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DecimalTest.Remainder2" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.DecimalTest.Round_EvenValue" executed="True" success="True" time="0.003" asserts="29" />
                  <test-case name="MonoTests.System.DecimalTest.Round_EvenValue_Negative" executed="True" success="True" time="0.003" asserts="29" />
                  <test-case name="MonoTests.System.DecimalTest.Round_InvalidDecimals_Negative" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DecimalTest.Round_InvalidDecimals_TooHigh" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DecimalTest.Round_OddValue" executed="True" success="True" time="0.005" asserts="29" />
                  <test-case name="MonoTests.System.DecimalTest.Round_OddValue_Negative" executed="True" success="True" time="0.002" asserts="29" />
                  <test-case name="MonoTests.System.DecimalTest.TestBrokenNFI" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.DecimalTest.TestConstants" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.DecimalTest.TestConstructDouble" executed="True" success="True" time="0.002" asserts="25">
                    <properties>
                      <property name="_SETCULTURE" value="en-US" />
                    </properties>
                  </test-case>
                  <test-case name="MonoTests.System.DecimalTest.TestConstructDoubleRound" executed="True" success="True" time="0.001" asserts="13" />
                  <test-case name="MonoTests.System.DecimalTest.TestConstructInt32" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.DecimalTest.TestConstructInt64" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.DecimalTest.TestConstructSingle" executed="True" success="True" time="0.002" asserts="12" />
                  <test-case name="MonoTests.System.DecimalTest.TestConstructSingleRounding_NowWorking" executed="True" success="True" time="0.001" asserts="7" />
                  <test-case name="MonoTests.System.DecimalTest.TestConstructUInt32" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.DecimalTest.TestConstructUInt64" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.DecimalTest.TestCurrencyPattern" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.DecimalTest.TestFloorTruncate" executed="True" success="True" time="0.002" asserts="0" />
                  <test-case name="MonoTests.System.DecimalTest.TestNegate" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.DecimalTest.TestNumberNegativePattern" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.DecimalTest.TestParse" executed="True" success="True" time="0.001" asserts="0">
                    <categories>
                      <category name="TargetJvmNotWorking" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.DecimalTest.TestPartConstruct" executed="True" success="True" time="0.001" asserts="12" />
                  <test-case name="MonoTests.System.DecimalTest.TestPercentPattern" executed="True" success="True" time="0.001" asserts="0">
                    <categories>
                      <category name="TargetJvmNotWorking" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.DecimalTest.TestRound" executed="True" success="True" time="0.002" asserts="0" />
                  <test-case name="MonoTests.System.DecimalTest.TestRoundFailures" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.DecimalTest.TestToString" executed="True" success="True" time="0.008" asserts="86" />
                  <test-case name="MonoTests.System.DecimalTest.ToByte" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.DecimalTest.ToDouble" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.DecimalTest.ToInt16" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.DecimalTest.ToInt32" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.DecimalTest.ToInt64" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.DecimalTest.ToInt64_TooBig" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DecimalTest.ToInt64_TooSmall" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DecimalTest.ToSByte" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.DecimalTest.ToSingle" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.DecimalTest.ToString_Defaults" executed="True" success="True" time="0.001" asserts="7">
                    <properties>
                      <property name="_SETCULTURE" value="en-US" />
                    </properties>
                  </test-case>
                  <test-case name="MonoTests.System.DecimalTest.ToString_G" executed="True" success="True" time="0.003" asserts="29">
                    <properties>
                      <property name="_SETCULTURE" value="en-US" />
                    </properties>
                  </test-case>
                  <test-case name="MonoTests.System.DecimalTest.ToUInt16" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.DecimalTest.ToUInt32" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.DecimalTest.ToUInt64" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.DecimalTest.Truncate" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.DecimalTest.TryParse" executed="True" success="True" time="0.001" asserts="20">
                    <categories>
                      <category name="TargetJvmNotWorking" />
                    </categories>
                  </test-case>
                </results>
              </test-suite>
              <test-suite name="DecimalTest2" success="True" time="0.239" asserts="0">
                <results>
                  <test-case name="MonoTests.System.DecimalTest2.TestAdd" executed="True" success="True" time="0.002" asserts="0" />
                  <test-case name="MonoTests.System.DecimalTest2.TestCompare" executed="True" success="True" time="0.002" asserts="1960" />
                  <test-case name="MonoTests.System.DecimalTest2.TestDiv" executed="True" success="True" time="0.002" asserts="0" />
                  <test-case name="MonoTests.System.DecimalTest2.TestMult" executed="True" success="True" time="0.003" asserts="0" />
                  <test-case name="MonoTests.System.DecimalTest2.TestRemainder" executed="True" success="True" time="0.001" asserts="4" />
                </results>
              </test-suite>
              <test-suite name="DelegateTest" success="True" time="0.116" asserts="0">
                <results>
                  <test-case name="MonoTests.System.DelegateTest.BoxingCovariance" executed="True" success="True" time="0.002" asserts="2" />
                  <test-case name="MonoTests.System.DelegateTest.ClosedOverNullReferenceInstanceMethod" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.DelegateTest.ClosedOverNullReferenceStaticMethod" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.DelegateTest.CoContraVariance" executed="True" success="True" time="0.000" asserts="0">
                    <categories>
                      <category name="TargetJvmNotWorking" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate1_Method_Instance" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate1_Method_Null" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate1_Method_Private_Instance" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate1_Method_Static" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate1_Type_Null" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate2" executed="True" success="True" time="0.002" asserts="6" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate2_Method_ArgumentsMismatch" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate2_Method_CaseMismatch" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate2_Method_DoesNotExist" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate2_Method_Null" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate2_Method_ReturnTypeMismatch" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate2_Method_Static" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate2_Target_Null" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate2_Type_Null" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate3" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate3_Method_ArgumentsMismatch" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate3_Method_CaseMismatch" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate3_Method_DoesNotExist" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate3_Method_Instance" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate3_Method_Null" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate3_Method_ReturnTypeMismatch" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate3_Target_Null" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate3_Type_Null" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate4" executed="True" success="True" time="0.001" asserts="14" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate4_Method_ArgumentsMismatch" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate4_Method_CaseMismatch" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate4_Method_DoesNotExist" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate4_Method_Null" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate4_Method_ReturnTypeMismatch" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate4_Method_Static" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate4_Target_Null" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate4_Type_Null" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate9" executed="True" success="True" time="0.001" asserts="24" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate9_Method_ArgumentsMismatch" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate9_Method_CaseMismatch" executed="True" success="True" time="0.001" asserts="9" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate9_Method_DoesNotExist" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate9_Method_Null" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate9_Method_ReturnTypeMismatch" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate9_Method_Static" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate9_Target_Null" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegate9_Type_Null" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegateOfStaticMethodBoundToNull" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegateOpenOnly" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegateWithAbstractMethods" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.DelegateTest.CreateDelegateWithLdFtnAndAbstractMethod" executed="True" success="True" time="0.002" asserts="1" />
                  <test-case name="MonoTests.System.DelegateTest.DynamicInvokeNullTarget" executed="True" success="True" time="0.004" asserts="1" />
                  <test-case name="MonoTests.System.DelegateTest.EnumBaseTypeConversion" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.DelegateTest.GetHashCode_Constant" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.DelegateTest.GetMethodFromGenericClass" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.DelegateTest.HasTarget_Instance" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.DelegateTest.HasTarget_Static" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.DelegateTest.NewDelegateClosedOverNullReferenceInstanceMethod" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DelegateTest.NullFirstArgumentOnStaticMethod" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.DelegateTest.NullTarget_Instance" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.DelegateTest.NullTarget_Static" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.DelegateTest.RemoveDelegateTypeMismatch" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DelegateTest.Virtual" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.DelegateTest.WrongReturnTypeContravariance" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DelegateTest.WrongReturnTypeContravariance_2" executed="True" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
              <test-suite name="Diagnostics" success="True" time="0.126" asserts="0">
                <results>
                  <test-suite name="Contracts" success="True" time="0.066" asserts="0">
                    <results>
                      <test-suite name="ContractAssertTest" success="True" time="0.011" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Diagnostics.Contracts.ContractAssertTest.TestAssertEventHandlerNoAction" executed="False">
                            <reason>
                              <message><![CDATA[This causes NUnit crash on .NET 4.0]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Diagnostics.Contracts.ContractAssertTest.TestAssertEventHandlerSetHandled" executed="True" success="True" time="0.002" asserts="0">
                            <categories>
                              <category name="RunAgainstReference" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Diagnostics.Contracts.ContractAssertTest.TestAssertEventHandlerSetUnwind" executed="True" success="True" time="0.001" asserts="2">
                            <categories>
                              <category name="RunAgainstReference" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Diagnostics.Contracts.ContractAssertTest.TestAssertEventHandlerSetUnwindHandled" executed="True" success="True" time="0.000" asserts="2">
                            <categories>
                              <category name="RunAgainstReference" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Diagnostics.Contracts.ContractAssertTest.TestAssertEventHandlerThrows" executed="True" success="True" time="0.000" asserts="2">
                            <categories>
                              <category name="RunAgainstReference" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Diagnostics.Contracts.ContractAssertTest.TestAssertMultipleHandlers" executed="True" success="True" time="0.001" asserts="4">
                            <categories>
                              <category name="RunAgainstReference" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Diagnostics.Contracts.ContractAssertTest.TestAssertNoEventHandler" executed="False">
                            <reason>
                              <message><![CDATA[This causes NUnit crash on .NET 4.0]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Diagnostics.Contracts.ContractAssertTest.TestAssertTrue" executed="True" success="True" time="0.000" asserts="0">
                            <categories>
                              <category name="RunAgainstReference" />
                            </categories>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite name="ContractAssumeTest" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Diagnostics.Contracts.ContractAssumeTest.TestAssumeMessage" executed="False">
                            <reason>
                              <message><![CDATA[This causes NUnit crash on .NET 4.0]]></message>
                            </reason>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite name="ContractCollectionMethodsTest" success="True" time="0.009" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Diagnostics.Contracts.ContractCollectionMethodsTest.TestExistsEnumeration" executed="True" success="True" time="0.002" asserts="6">
                            <categories>
                              <category name="RunAgainstReference" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Diagnostics.Contracts.ContractCollectionMethodsTest.TestExistsInt" executed="True" success="True" time="0.001" asserts="6">
                            <categories>
                              <category name="RunAgainstReference" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Diagnostics.Contracts.ContractCollectionMethodsTest.TestForAllEnumeration" executed="True" success="True" time="0.002" asserts="6">
                            <categories>
                              <category name="RunAgainstReference" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Diagnostics.Contracts.ContractCollectionMethodsTest.TestForAllInt" executed="True" success="True" time="0.001" asserts="6">
                            <categories>
                              <category name="RunAgainstReference" />
                            </categories>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite name="ContractHelperTest" success="True" time="0.025" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Diagnostics.Contracts.ContractHelperTest.TestRaiseContractFailedEventHandled" executed="True" success="True" time="0.003" asserts="240">
                            <categories>
                              <category name="RunAgainstReference" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Diagnostics.Contracts.ContractHelperTest.TestRaiseContractFailedEventNoHandler" executed="True" success="True" time="0.001" asserts="48">
                            <categories>
                              <category name="RunAgainstReference" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Diagnostics.Contracts.ContractHelperTest.TestRaiseContractFailedEventThrows" executed="True" success="True" time="0.006" asserts="96">
                            <categories>
                              <category name="RunAgainstReference" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Diagnostics.Contracts.ContractHelperTest.TestRaiseContractFailedEventUnwind" executed="True" success="True" time="0.001" asserts="96">
                            <categories>
                              <category name="RunAgainstReference" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Diagnostics.Contracts.ContractHelperTest.TestRaiseContractMultipleHandlers1" executed="True" success="True" time="0.001" asserts="144">
                            <categories>
                              <category name="RunAgainstReference" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Diagnostics.Contracts.ContractHelperTest.TestRaiseContractMultipleHandlers2" executed="True" success="True" time="0.002" asserts="192">
                            <categories>
                              <category name="RunAgainstReference" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Diagnostics.Contracts.ContractHelperTest.TestRaiseContractMultipleHandlers3" executed="True" success="True" time="0.004" asserts="192">
                            <categories>
                              <category name="RunAgainstReference" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Diagnostics.Contracts.ContractHelperTest.TestTriggerFailure" executed="False">
                            <reason>
                              <message><![CDATA[This causes NUnit crash on .NET 4.0]]></message>
                            </reason>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite name="ContractMarkerMethodsTest" success="True" time="0.004" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Diagnostics.Contracts.ContractMarkerMethodsTest.TestEndContractBlock" executed="True" success="True" time="0.000" asserts="0">
                            <categories>
                              <category name="RunAgainstReference" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Diagnostics.Contracts.ContractMarkerMethodsTest.TestOldValue" executed="True" success="True" time="0.000" asserts="2">
                            <categories>
                              <category name="RunAgainstReference" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Diagnostics.Contracts.ContractMarkerMethodsTest.TestResult" executed="True" success="True" time="0.000" asserts="2">
                            <categories>
                              <category name="RunAgainstReference" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Diagnostics.Contracts.ContractMarkerMethodsTest.TestValueAtReturn" executed="True" success="True" time="0.000" asserts="4">
                            <categories>
                              <category name="RunAgainstReference" />
                            </categories>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite name="ContractMustUseRewriterTest" success="True" time="0.004" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Diagnostics.Contracts.ContractMustUseRewriterTest.TestEnsures" executed="False">
                            <reason>
                              <message><![CDATA[This causes NUnit crash on .NET 4.0]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Diagnostics.Contracts.ContractMustUseRewriterTest.TestEnsuresOnThrow" executed="False">
                            <reason>
                              <message><![CDATA[This causes NUnit crash on .NET 4.0]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Diagnostics.Contracts.ContractMustUseRewriterTest.TestInvariant" executed="False">
                            <reason>
                              <message><![CDATA[This causes NUnit crash on .NET 4.0]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Diagnostics.Contracts.ContractMustUseRewriterTest.TestRequires" executed="False">
                            <reason>
                              <message><![CDATA[This causes NUnit crash on .NET 4.0]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Diagnostics.Contracts.ContractMustUseRewriterTest.TestRequiresTException" executed="False">
                            <reason>
                              <message><![CDATA[This causes NUnit crash on .NET 4.0]]></message>
                            </reason>
                          </test-case>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="DebuggerDisplayAttributeTest" success="True" time="0.008" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Diagnostics.DebuggerDisplayAttributeTest.ConstructorTest" executed="True" success="True" time="0.001" asserts="10" />
                      <test-case name="MonoTests.System.Diagnostics.DebuggerDisplayAttributeTest.NameTest" executed="True" success="True" time="0.001" asserts="20" />
                      <test-case name="MonoTests.System.Diagnostics.DebuggerDisplayAttributeTest.TargetTest" executed="True" success="True" time="0.001" asserts="11" />
                      <test-case name="MonoTests.System.Diagnostics.DebuggerDisplayAttributeTest.TargetTypeNameTest" executed="True" success="True" time="0.001" asserts="20" />
                      <test-case name="MonoTests.System.Diagnostics.DebuggerDisplayAttributeTest.TypeTest" executed="True" success="True" time="0.001" asserts="20" />
                    </results>
                  </test-suite>
                  <test-suite name="DebuggerTypeProxyAttributeTest" success="True" time="0.002" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Diagnostics.DebuggerTypeProxyAttributeTest.Constructor_Type" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Diagnostics.DebuggerTypeProxyAttributeTest.Constructor_Type_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="StackFrameTest1" success="True" time="0.005" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Diagnostics.StackFrameTest1.TestGetFileColumnNumber" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Diagnostics.StackFrameTest1.TestGetFileLineNumber" executed="True" success="True" time="0.000" asserts="2">
                        <categories>
                          <category name="LLVMNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Diagnostics.StackFrameTest1.TestGetFileName" executed="True" success="True" time="0.000" asserts="2">
                        <categories>
                          <category name="LLVMNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Diagnostics.StackFrameTest1.TestGetMethod" executed="True" success="True" time="0.000" asserts="6" />
                    </results>
                  </test-suite>
                  <test-suite name="StackFrameTest2" success="True" time="0.005" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Diagnostics.StackFrameTest2.TestGetFileLineNumber" executed="True" success="True" time="0.001" asserts="3">
                        <categories>
                          <category name="LLVMNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Diagnostics.StackFrameTest2.TestGetFileName1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Diagnostics.StackFrameTest2.TestGetFileName2" executed="True" success="True" time="0.000" asserts="3">
                        <categories>
                          <category name="LLVMNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Diagnostics.StackFrameTest2.TestGetMethod" executed="True" success="True" time="0.001" asserts="9" />
                    </results>
                  </test-suite>
                  <test-suite name="StackFrameTest3" success="True" time="0.003" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Diagnostics.StackFrameTest3.TestGetFileLineNumber" executed="True" success="True" time="0.001" asserts="2">
                        <categories>
                          <category name="LLVMNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Diagnostics.StackFrameTest3.TestGetFileName" executed="True" success="True" time="0.000" asserts="3">
                        <categories>
                          <category name="LLVMNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Diagnostics.StackFrameTest3.TestGetMethod" executed="True" success="True" time="0.000" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite name="StackTraceTest" success="True" time="0.022" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Diagnostics.StackTraceTest.FrameCount" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Diagnostics.StackTraceTest.GetFrame" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Diagnostics.StackTraceTest.GetFrame_OutOfRange" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Diagnostics.StackTraceTest.GetFrames" executed="True" success="True" time="0.001" asserts="28" />
                      <test-case name="MonoTests.System.Diagnostics.StackTraceTest.StackTrace_Exception_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.StackTraceTest.StackTrace_ExceptionBool_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.StackTraceTest.StackTrace_ExceptionInt_Negative" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.StackTraceTest.StackTrace_ExceptionInt_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.StackTraceTest.StackTrace_ExceptionIntBool_Negative" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.StackTraceTest.StackTrace_ExceptionIntBool_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.StackTraceTest.StackTrace_Int_Negative" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Diagnostics.StackTraceTest.StackTrace_StackFrame_Null" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Diagnostics.StackTraceTest.StackTrace_Thread_NotSuspended" executed="False">
                        <reason>
                          <message><![CDATA[Not supported in Mono]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Diagnostics.StackTraceTest.StackTrace_Thread_Null" executed="False">
                        <reason>
                          <message><![CDATA[Not supported in Mono]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Diagnostics.StackTraceTest.StackTrace_Thread_Suspended" executed="False">
                        <reason>
                          <message><![CDATA[Not supported in Mono]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Diagnostics.StackTraceTest.UnthrownException" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="DoubleFormatterTest" success="True" time="0.040" asserts="0">
                <results>
                  <test-case name="MonoTests.System.DoubleFormatterTest.NegativeRoundtrip" executed="True" success="True" time="0.004" asserts="1" />
                  <test-case name="MonoTests.System.DoubleFormatterTest.NonStandardRounding" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.DoubleFormatterTest.Roundtrip" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.DoubleFormatterTest.Roundtrip_ExactStringFormat" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.DoubleFormatterTest.TestFormatStringsN1" executed="True" success="True" time="0.013" asserts="338" />
                  <test-case name="MonoTests.System.DoubleFormatterTest.TestFormatStringsN1_Fixed" executed="True" success="True" time="0.003" asserts="92" />
                  <test-case name="MonoTests.System.DoubleFormatterTest.TestFormatStringsN2" executed="True" success="True" time="0.009" asserts="338" />
                  <test-case name="MonoTests.System.DoubleFormatterTest.TestNumberDecimals" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.DoubleFormatterTest.TestToDecimal" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DoubleFormatterTest.TestToHex" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.DoubleFormatterTest.TestToUnknown" executed="True" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
              <test-suite name="DoubleTest" success="True" time="0.039" asserts="0">
                <results>
                  <test-case name="MonoTests.System.DoubleTest.CompareTo" executed="True" success="True" time="0.001" asserts="11" />
                  <test-case name="MonoTests.System.DoubleTest.Equals" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.DoubleTest.HexNumber_NoHexToParse" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DoubleTest.HexNumber_WithHexToParse" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DoubleTest.IsInfinity" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.DoubleTest.IsNan" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.DoubleTest.IsNegativeInfinity" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.DoubleTest.IsPositiveInfinity" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.DoubleTest.LongLongValueRoundtrip" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.DoubleTest.Parse" executed="True" success="True" time="0.002" asserts="39" />
                  <test-case name="MonoTests.System.DoubleTest.Parse_Infinity" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.DoubleTest.Parse_TrailingGarbage" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.DoubleTest.Parse_Whitespace" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.DoubleTest.ParseAdvanced" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.DoubleTest.ParseAllowWhitespaces" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.DoubleTest.ParseCurrency" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.DoubleTest.ParseEmptyNumberGroupSeparator" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.DoubleTest.PublicFields" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.DoubleTest.TestRoundtrip" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.DoubleTest.TestToString" executed="True" success="True" time="0.005" asserts="160" />
                  <test-case name="MonoTests.System.DoubleTest.TestTypeCode" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.DoubleTest.ToString_Defaults" executed="True" success="True" time="0.001" asserts="7" />
                  <test-case name="MonoTests.System.DoubleTest.TryParse_NonDigitStrings" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.DoubleTest.TryParseBug78546" executed="True" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite name="EnumTest" success="True" time="0.086" asserts="0">
                <results>
                  <test-case name="MonoTests.System.EnumTest.AnotherFormatBugPinned" executed="True" success="True" time="0.003" asserts="1" />
                  <test-case name="MonoTests.System.EnumTest.CompareOrder_FromGetNames" executed="True" success="True" time="0.016" asserts="94" />
                  <test-case name="MonoTests.System.EnumTest.CompareTo_NotEqualToUnderlyingType" executed="True" success="True" time="0.002" asserts="24" />
                  <test-case name="MonoTests.System.EnumTest.FlagTest" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.EnumTest.FlagTest_Negative" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.EnumTest.GetHashCode_ShouldBeEqualToUnderlyingType" executed="True" success="True" time="0.001" asserts="24" />
                  <test-case name="MonoTests.System.EnumTest.GetName" executed="True" success="True" time="0.002" asserts="24" />
                  <test-case name="MonoTests.System.EnumTest.HasFlagTest" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.EnumTest.IConvertible_Valid" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.EnumTest.LogicBugPinned" executed="True" success="True" time="0.001" asserts="8" />
                  <test-case name="MonoTests.System.EnumTest.ParseValue" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.EnumTest.TestCompareTo" executed="True" success="True" time="0.001" asserts="17" />
                  <test-case name="MonoTests.System.EnumTest.TestEquals" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.EnumTest.TestFormat_Args" executed="True" success="True" time="0.004" asserts="115" />
                  <test-case name="MonoTests.System.EnumTest.TestFormat_FormatSpecifier" executed="True" success="True" time="0.002" asserts="18" />
                  <test-case name="MonoTests.System.EnumTest.TestGetHashCode" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.EnumTest.TestGetNames" executed="True" success="True" time="0.001" asserts="11" />
                  <test-case name="MonoTests.System.EnumTest.TestGetTypeCode" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.EnumTest.TestGetUnderlyingType" executed="True" success="True" time="0.001" asserts="12" />
                  <test-case name="MonoTests.System.EnumTest.TestGetValues" executed="True" success="True" time="0.001" asserts="18" />
                  <test-case name="MonoTests.System.EnumTest.TestIsDefined" executed="True" success="True" time="0.002" asserts="25" />
                  <test-case name="MonoTests.System.EnumTest.TestParse1" executed="True" success="True" time="0.003" asserts="36" />
                  <test-case name="MonoTests.System.EnumTest.TestParse2" executed="True" success="True" time="0.003" asserts="43" />
                  <test-case name="MonoTests.System.EnumTest.TestToString" executed="True" success="True" time="0.001" asserts="14" />
                  <test-case name="MonoTests.System.EnumTest.ToObject_EnumType_Byte" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.EnumTest.ToObject_EnumType_Int16" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.EnumTest.ToObject_EnumType_Int32" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.EnumTest.ToObject_EnumType_Invalid" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.EnumTest.ToObject_EnumType_Null" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.EnumTest.ToObject_EnumType_UInt64" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.EnumTest.ToObject_Value_Invalid" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.EnumTest.ToObject_Value_Null" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.EnumTest.TryParse" executed="True" success="True" time="0.002" asserts="8" />
                  <test-case name="MonoTests.System.EnumTest.TryParseErrors" executed="True" success="True" time="0.002" asserts="13" />
                </results>
              </test-suite>
              <test-suite name="EnvironmentTest" success="True" time="0.032" asserts="0">
                <results>
                  <test-case name="MonoTests.System.EnvironmentTest.ExpandEnvironmentVariables_Alone" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.EnvironmentTest.ExpandEnvironmentVariables_ComplexExpandable" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.EnvironmentTest.ExpandEnvironmentVariables_ComplexExpandable2" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.EnvironmentTest.ExpandEnvironmentVariables_Double" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.EnvironmentTest.ExpandEnvironmentVariables_EmptyVariable" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.EnvironmentTest.ExpandEnvironmentVariables_End" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.EnvironmentTest.ExpandEnvironmentVariables_ExpandableAndNonExpandable" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.EnvironmentTest.ExpandEnvironmentVariables_ExpandableWithTrailingPercent" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.EnvironmentTest.ExpandEnvironmentVariables_ExpandMultiple" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.EnvironmentTest.ExpandEnvironmentVariables_KnownVariable" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.EnvironmentTest.ExpandEnvironmentVariables_None" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.EnvironmentTest.ExpandEnvironmentVariables_NotVariable" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.EnvironmentTest.ExpandEnvironmentVariables_UnknownVariable" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.EnvironmentTest.GetCommandLineArgs" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.EnvironmentTest.GetEnvironmentVariable_Target_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.EnvironmentTest.GetEnvironmentVariables" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.EnvironmentTest.GetEnvironmentVariables_NewlySet" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.EnvironmentTest.GetEnvironmentVariables_Target_Invalid" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.EnvironmentTest.SetEnvironmentVariable" executed="True" success="True" time="0.001" asserts="7" />
                  <test-case name="MonoTests.System.EnvironmentTest.SetEnvironmentVariable_Name_Empty" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.EnvironmentTest.SetEnvironmentVariable_Name_Null" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.EnvironmentTest.SetEnvironmentVariable_Name_ZeroChar" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.EnvironmentTest.SetEnvironmentVariable_Target_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
              <test-suite name="ExceptionTest" success="True" time="0.015" asserts="0">
                <results>
                  <test-case name="MonoTests.System.ExceptionTest.Constructor3" executed="True" success="True" time="0.002" asserts="16" />
                  <test-case name="MonoTests.System.ExceptionTest.GetObjectData" executed="True" success="True" time="0.003" asserts="51" />
                  <test-case name="MonoTests.System.ExceptionTest.GetObjectData_Info_Null" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.ExceptionTest.HResult" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.ExceptionTest.Source" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.ExceptionTest.Source_InnerException" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.ExceptionTest.StackTrace" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.ExceptionTest.TestThrowOnBlockBoundaries" executed="True" success="True" time="0.002" asserts="8" />
                </results>
              </test-suite>
              <test-suite name="FloatingPointFormatterTest" success="True" time="0.006" asserts="0">
                <results>
                  <test-case name="MonoTests.System.FloatingPointFormatterTest.Format1" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.FloatingPointFormatterTest.FormatStartsWithDot" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.FloatingPointFormatterTest.LiteralMixed" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.FloatingPointFormatterTest.PermillePercent" executed="True" success="True" time="0.001" asserts="5" />
                </results>
              </test-suite>
              <test-suite name="Globalization" success="True" time="0.401" asserts="0">
                <results>
                  <test-suite name="CalendarTest" success="True" time="0.049" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Globalization.CalendarTest.AddYearOnLeapYear" executed="True" success="True" time="0.007" asserts="2" />
                      <test-case name="MonoTests.System.Globalization.CalendarTest.GetWeekOfYear" executed="True" success="True" time="0.002" asserts="6" />
                      <test-case name="MonoTests.System.Globalization.CalendarTest.GregorianAddMonth" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Globalization.CalendarTest.HebrewCalendarGetDaysInMonth" executed="True" success="True" time="0.002" asserts="2" />
                      <test-case name="MonoTests.System.Globalization.CalendarTest.TestCalendarType" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Globalization.CalendarTest.TestCCTable" executed="True" success="True" time="0.016" asserts="366" />
                      <test-case name="MonoTests.System.Globalization.CalendarTest.TestCurrentEra" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Globalization.CalendarTest.TestErasProperty" executed="True" success="True" time="0.001" asserts="16" />
                      <test-case name="MonoTests.System.Globalization.CalendarTest.TestStandardEras" executed="True" success="True" time="0.001" asserts="9" />
                      <test-case name="MonoTests.System.Globalization.CalendarTest.TestToFourDigitYear" executed="True" success="True" time="0.004" asserts="48" />
                      <test-case name="MonoTests.System.Globalization.CalendarTest.TestToFourDigitYear2" executed="True" success="True" time="0.001" asserts="18" />
                      <test-case name="MonoTests.System.Globalization.CalendarTest.TestTwoDigitYearMax" executed="True" success="True" time="0.001" asserts="24" />
                    </results>
                  </test-suite>
                  <test-suite name="CompareInfoTest" success="True" time="0.120" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.Compare" executed="True" success="True" time="0.002" asserts="18" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.Compare_String_Int_Int_String_Int_Int_CompareOptions_Invalid" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.Compare_String_Int_String_Int_CompareOptions_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.Compare_String_String_CompareOptions_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.Compare_String_String_CompareOptions_StringSort" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.CompareSpecialWeight" executed="True" success="True" time="0.002" asserts="10">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.CultureSensitiveCompare" executed="True" success="True" time="0.001" asserts="26">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.CustomCJKTable" executed="True" success="True" time="0.004" asserts="2" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.FrenchSort" executed="True" success="True" time="0.001" asserts="11">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.GetSortKey" executed="True" success="True" time="0.001" asserts="9" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.GetSortKey_Options" executed="True" success="True" time="0.001" asserts="10" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.GetSortKeyCzechTailoring" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.GetSortKeyDiacritical" executed="True" success="True" time="0.001" asserts="13" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.GetSortKeyHungarianTailoring" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.GetSortKeyIgnoreNonSpaceKana" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.GetSortKeyIgnoreWidth" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.GetSortKeyLevel5" executed="True" success="True" time="0.029" asserts="6" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.GetSortKeySpecialWeight" executed="True" success="True" time="0.001" asserts="22" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.GetSortKeyThai" executed="True" success="True" time="0.001" asserts="15" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.IndexOf_String_Char_Int_Int_CompareOptions_Invalid" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.IndexOf_String_Char_Int_Int_CompareOptions_StringSort" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.IndexOf_String_String_Int_Int_CompareOptions_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.IndexOf_String_String_Int_Int_CompareOptions_StringSort" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.IndexOfChar" executed="True" success="True" time="0.002" asserts="11" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.IndexOfCharMSBug" executed="True" success="True" time="0.000" asserts="1">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.IndexOfSpecialWeight" executed="True" success="True" time="0.001" asserts="11" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.IndexOfString" executed="True" success="True" time="0.001" asserts="20" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.IndexOfStringWeird" executed="True" success="True" time="0.000" asserts="3">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.IsPrefix" executed="True" success="True" time="0.001" asserts="19">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.IsPrefix_CompareOptions_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.IsPrefix_CompareOptions_StringSort" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.IsPrefix_PrefixEmpty" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.IsPrefix_PrefixNull" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.IsPrefix_SourceNull" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.IsPrefixOrdinalIgnoreCase" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.IsPrefixSpecialWeight" executed="True" success="True" time="0.000" asserts="15" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.IsSuffix" executed="True" success="True" time="0.001" asserts="22">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.IsSuffix_CompareOptions_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.IsSuffix_CompareOptions_StringSort" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.IsSuffix_PrefixEmpty" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.IsSuffix_SourceNull" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.IsSuffix_SuffixNull" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.LastIndexOf_String_Char_Int_Int_CompareOptions_Invalid" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.LastIndexOf_String_Char_Int_Int_CompareOptions_StringSort" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.LastIndexOf_String_String_Int_Int_CompareOptions_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.LastIndexOf_String_String_Int_Int_CompareOptions_StringSort" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.LastIndexOfChar" executed="True" success="True" time="0.002" asserts="16" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.LastIndexOfCharMSBug" executed="True" success="True" time="0.000" asserts="1">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.LastIndexOfOrdinalString" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.LastIndexOfSpecialWeight" executed="True" success="True" time="0.000" asserts="9" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.LastIndexOfString" executed="True" success="True" time="0.001" asserts="21" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.LastIndexOfStringDotnetWeird" executed="True" success="True" time="0.000" asserts="3">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.NullCharacter" executed="True" success="True" time="0.001" asserts="9" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.NullCharacterWeird" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.OrdinalIgnoreCaseCompare" executed="True" success="True" time="0.000" asserts="14">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.OrdinalIgnoreCaseIndexOf" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.OrdinalIgnoreCaseIndexOfChar" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.OrdinalIgnoreCaseLastIndexOf" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Globalization.CompareInfoTest.OrdinalIgnoreCaseLastIndexOfChar" executed="True" success="True" time="0.000" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite name="CultureInfoTest" success="True" time="0.095" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Globalization.CultureInfoTest.Bug402128" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="MonoTests.System.Globalization.CultureInfoTest.ClearCachedData" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Globalization.CultureInfoTest.CloneNeutral" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Globalization.CultureInfoTest.Constructor0" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Globalization.CultureInfoTest.Constructor0_Identifier_Negative" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Globalization.CultureInfoTest.Constructor1" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Globalization.CultureInfoTest.Constructor1_Name_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Globalization.CultureInfoTest.Constructor2" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Globalization.CultureInfoTest.Constructor2_Identifier_Negative" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Globalization.CultureInfoTest.Constructor3" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Globalization.CultureInfoTest.Constructor3_Name_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Globalization.CultureInfoTest.CreateSpecificCulture" executed="True" success="True" time="0.003" asserts="5" />
                      <test-case name="MonoTests.System.Globalization.CultureInfoTest.CreateSpecificCulture_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Globalization.CultureInfoTest.CultureNotFound" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Globalization.CultureInfoTest.CurrentCulture" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Globalization.CultureInfoTest.DateTimeFormat_Neutral_Culture" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Globalization.CultureInfoTest.DefaultThreadCurrentCultureAndNumberFormaters" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Globalization.CultureInfoTest.GetAllCulturesInvariant" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="MonoTests.System.Globalization.CultureInfoTest.GetCultureInfo_Identifier" executed="True" success="True" time="0.016" asserts="616">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Globalization.CultureInfoTest.GetCultureInfo_Identifier_Negative" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Globalization.CultureInfoTest.GetCultureInfo_Identifier_NotSupported" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Globalization.CultureInfoTest.GetCultureInfo_Name" executed="True" success="True" time="0.002" asserts="616">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Globalization.CultureInfoTest.GetCultureInfo_Name_NotSupported" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Globalization.CultureInfoTest.GetCultureInfo_Name_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Globalization.CultureInfoTest.IsNeutral" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Globalization.CultureInfoTest.IsReadOnly" executed="True" success="True" time="0.003" asserts="33" />
                      <test-case name="MonoTests.System.Globalization.CultureInfoTest.IsReadOnly_GetCultures" executed="True" success="True" time="0.009" asserts="616" />
                      <test-case name="MonoTests.System.Globalization.CultureInfoTest.Norwegian" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Globalization.CultureInfoTest.NumberFormat_Neutral_Culture" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Globalization.CultureInfoTest.OptionalCalendars" executed="True" success="True" time="0.002" asserts="282">
                        <categories>
                          <category name="TargetJvmNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Globalization.CultureInfoTest.ParentOfZh" executed="True" success="True" time="0.000" asserts="2">
                        <properties>
                          <property name="_SETCULTURE" value="zh-TW" />
                        </properties>
                      </test-case>
                      <test-case name="MonoTests.System.Globalization.CultureInfoTest.TrySetNeutralCultureNotInvariant" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Globalization.CultureInfoTest.UseUserOverride_CurrentCulture" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Globalization.CultureInfoTest.UseUserOverride_CurrentUICulture" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Globalization.CultureInfoTest.UseUserOverride_GetCultureInfo" executed="True" success="True" time="0.007" asserts="564" />
                      <test-case name="MonoTests.System.Globalization.CultureInfoTest.UseUserOverride_GetCultures" executed="True" success="True" time="0.002" asserts="282" />
                      <test-case name="MonoTests.System.Globalization.CultureInfoTest.UseUserOverride_InvariantCulture" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Globalization.CultureInfoTest.ZhHant" executed="True" success="True" time="0.001" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite name="DateTimeFormatInfoTest" success="True" time="0.013" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Globalization.DateTimeFormatInfoTest.Bug78569" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Globalization.DateTimeFormatInfoTest.Clone" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Globalization.DateTimeFormatInfoTest.EraName" executed="True" success="True" time="0.002" asserts="8" />
                      <test-case name="MonoTests.System.Globalization.DateTimeFormatInfoTest.GetAllDateTimePatterns_ret_diff_obj" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Globalization.DateTimeFormatInfoTest.MonthGenitiveNames" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Globalization.DateTimeFormatInfoTest.MonthNames" executed="True" success="True" time="0.001" asserts="16" />
                      <test-case name="MonoTests.System.Globalization.DateTimeFormatInfoTest.QuoteInValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Globalization.DateTimeFormatInfoTest.TestSpecificCultureFormats_es_ES" executed="True" success="True" time="0.000" asserts="5" />
                    </results>
                  </test-suite>
                  <test-suite name="DaylightTimeTest" success="True" time="0.011" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Globalization.DaylightTimeTest.Constructor" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Globalization.DaylightTimeTest.DeserializeKnownValue" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Globalization.DaylightTimeTest.SerializationRoundtrip" executed="True" success="True" time="0.002" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite name="IdnMappingTest" success="True" time="0.041" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Globalization.IdnMappingTest.AcePrefix" executed="True" success="True" time="0.029" asserts="5" />
                      <test-case name="MonoTests.System.Globalization.IdnMappingTest.Dots" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Globalization.IdnMappingTest.GetAscii" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Globalization.IdnMappingTest.GetAsciiInvalid" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Globalization.IdnMappingTest.GetAsciiRFC3492Examples" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Globalization.IdnMappingTest.GetUnicode" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Globalization.IdnMappingTest.GetUnicodeRFC3492Examples" executed="True" success="True" time="0.002" asserts="2" />
                      <test-case name="MonoTests.System.Globalization.IdnMappingTest.UnassignedCharacter" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Globalization.IdnMappingTest.UseStd3AsciiRules" executed="True" success="True" time="0.001" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="NumberFormatInfoTest" success="True" time="0.001" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Globalization.NumberFormatInfoTest.CurrencyDecimalDigits" executed="True" success="True" time="0.001" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite name="RegionInfoTest" success="True" time="0.008" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Globalization.RegionInfoTest.Equals" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Globalization.RegionInfoTest.HongKong" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Globalization.RegionInfoTest.RegionByLocaleName" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Globalization.RegionInfoTest.RegionByName" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Globalization.RegionInfoTest.RegionByWrongName" executed="True" success="True" time="0.001" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="SortKeyTest" success="True" time="0.002" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Globalization.SortKeyTest.CompareNull" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Globalization.SortKeyTest.CompareNull2" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="StringInfoTest" success="True" time="0.013" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Globalization.StringInfoTest.DefaultConstructor" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Globalization.StringInfoTest.GetNextTextElement" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Globalization.StringInfoTest.GetNextTextElementOutOfRange1" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Globalization.StringInfoTest.LengthInTextElements" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Globalization.StringInfoTest.SubstringByTextElements" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Globalization.StringInfoTest.SubstringByTextElementsOutOfRange1" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Globalization.StringInfoTest.SubstringByTextElementsOutOfRange2" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Globalization.StringInfoTest.SubstringByTextElementsOutOfRange3" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="TextInfoTest" success="True" time="0.018" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Globalization.TextInfoTest.Clone" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Globalization.TextInfoTest.Clone_ReadOnly" executed="True" success="True" time="0.000" asserts="9" />
                      <test-case name="MonoTests.System.Globalization.TextInfoTest.Deserialization" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Globalization.TextInfoTest.IsRightToLeft" executed="True" success="True" time="0.002" asserts="282" />
                      <test-case name="MonoTests.System.Globalization.TextInfoTest.ListSeparator" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Globalization.TextInfoTest.ReadOnly" executed="True" success="True" time="0.000" asserts="9" />
                      <test-case name="MonoTests.System.Globalization.TextInfoTest.TitleCase" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Globalization.TextInfoTest.TitleCase2" executed="True" success="True" time="0.006" asserts="5076" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="GuidTest" success="True" time="0.057" asserts="0">
                <results>
                  <test-case name="MonoTests.System.GuidTest.CompareToGuid" executed="True" success="True" time="0.001" asserts="7" />
                  <test-case name="MonoTests.System.GuidTest.CompareToGuid_2" executed="True" success="True" time="0.002" asserts="3" />
                  <test-case name="MonoTests.System.GuidTest.CompareToObject" executed="True" success="True" time="0.001" asserts="8" />
                  <test-case name="MonoTests.System.GuidTest.CompareToObject_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.GuidTest.Constructor_ByteArray" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.GuidTest.Constructor_ByteArray_InvalidLength" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.GuidTest.Constructor_ByteArray_Null" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.GuidTest.Constructor_Int32_2xInt16_8xByte" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.GuidTest.Constructor_Int32_2xInt16_ByteArray" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.GuidTest.Constructor_String" executed="True" success="True" time="0.002" asserts="7" />
                  <test-case name="MonoTests.System.GuidTest.Constructor_String_Invalid" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.GuidTest.Constructor_String_Mismatch" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.GuidTest.Constructor_String_MissingAllSeparators" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.GuidTest.Constructor_String_MissingSeparator" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.GuidTest.Constructor_String_Null" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.GuidTest.Constructor_UInt32_2xUInt16_8xByte" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.GuidTest.Empty" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.GuidTest.EqualityOp" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.GuidTest.EqualsGuid" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.GuidTest.EqualsObject" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.GuidTest.GetHashCode_Different" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.GuidTest.GetHashCode_Same" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.GuidTest.InequalityOp" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.GuidTest.NewGuid" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.GuidTest.NewGuid_Stressed" executed="True" success="True" time="0.002" asserts="256" />
                  <test-case name="MonoTests.System.GuidTest.Parse" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.GuidTest.ParseError_1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.GuidTest.ParseExact" executed="True" success="True" time="0.002" asserts="8" />
                  <test-case name="MonoTests.System.GuidTest.ParseExactD" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.GuidTest.ParseExactN" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.GuidTest.ParseExtraJunkB" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.GuidTest.ParseExtraJunkD" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.GuidTest.ParseExtraJunkN" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.GuidTest.ParseExtraJunkP" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.GuidTest.ParseExtraJunkX" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.GuidTest.ToByteArray" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.GuidTest.ToString_AllFormats" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.GuidTest.ToString_InvalidFormat" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.GuidTest.TryParse" executed="True" success="True" time="0.001" asserts="7" />
                  <test-case name="MonoTests.System.GuidTest.TryParseExact" executed="True" success="True" time="0.001" asserts="6" />
                </results>
              </test-suite>
              <test-suite name="Int16Test" success="True" time="0.019" asserts="0">
                <results>
                  <test-case name="MonoTests.System.Int16Test.Bug3677" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.Int16Test.Parse_MinMax" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.Int16Test.TestCompareTo" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.Int16Test.TestEquals" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.Int16Test.TestGetHashCode" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.Int16Test.TestMinMax" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.Int16Test.TestParse" executed="True" success="True" time="0.002" asserts="17" />
                  <test-case name="MonoTests.System.Int16Test.TestParseExponent" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.Int16Test.TestToString" executed="True" success="True" time="0.001" asserts="20" />
                  <test-case name="MonoTests.System.Int16Test.ToString_Defaults" executed="True" success="True" time="0.005" asserts="7" />
                </results>
              </test-suite>
              <test-suite name="Int32Test" success="True" time="0.031" asserts="0">
                <results>
                  <test-case name="MonoTests.System.Int32Test.ParseRespectCurrentCulture" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.Int32Test.TestCompareTo" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.Int32Test.TestCustomToString" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.Int32Test.TestEquals" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.Int32Test.TestGetHashCode" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.Int32Test.TestMinMax" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.Int32Test.TestParse" executed="True" success="True" time="0.007" asserts="34" />
                  <test-case name="MonoTests.System.Int32Test.TestParseExponent" executed="True" success="True" time="0.001" asserts="11" />
                  <test-case name="MonoTests.System.Int32Test.TestSections" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.Int32Test.TestToString" executed="True" success="True" time="0.001" asserts="36" />
                  <test-case name="MonoTests.System.Int32Test.TestTryParse" executed="True" success="True" time="0.002" asserts="46" />
                  <test-case name="MonoTests.System.Int32Test.TestUserCurrency" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.Int32Test.ToString_Defaults" executed="True" success="True" time="0.001" asserts="7" />
                </results>
              </test-suite>
              <test-suite name="Int64Test" success="True" time="0.040" asserts="0">
                <results>
                  <test-case name="MonoTests.System.Int64Test.Parse_MaxValue" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.Int64Test.Parse_MinValue" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.Int64Test.Parse_OverByOneMaxValue" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.Int64Test.Parse_OverByOneMinValue" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.Int64Test.Parse_WayOverMaxValue" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.Int64Test.Parse_WayOverMinValue" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.Int64Test.TestCompareTo" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.Int64Test.TestEquals" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.Int64Test.TestGetHashCode" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.Int64Test.TestMinMax" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.Int64Test.TestParse" executed="True" success="True" time="0.006" asserts="25" />
                  <test-case name="MonoTests.System.Int64Test.TestParseExponent" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.Int64Test.TestParseNull" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.Int64Test.TestRoundTripGeneral" executed="True" success="True" time="0.001" asserts="20" />
                  <test-case name="MonoTests.System.Int64Test.TestRoundTripHex" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.Int64Test.TestToString" executed="True" success="True" time="0.001" asserts="38" />
                  <test-case name="MonoTests.System.Int64Test.TestTryParse" executed="True" success="True" time="0.003" asserts="46" />
                  <test-case name="MonoTests.System.Int64Test.TestUserCurrency" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.Int64Test.TestUserPercent" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.Int64Test.ToString_Defaults" executed="True" success="True" time="0.001" asserts="7" />
                </results>
              </test-suite>
              <test-suite name="IntegerFormatterTest" success="True" time="0.008" asserts="0">
                <results>
                  <test-case name="MonoTests.System.IntegerFormatterTest.TestStandard" executed="True" success="True" time="0.007" asserts="1872" />
                </results>
              </test-suite>
              <test-suite name="IntegerTryParse" success="True" time="0.013" asserts="0">
                <results>
                  <test-case name="MonoTests.System.IntegerTryParse.Int16" executed="True" success="True" time="0.004" asserts="2" />
                  <test-case name="MonoTests.System.IntegerTryParse.Int32" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.IntegerTryParse.Int64" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.IntegerTryParse.Int8" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.IntegerTryParse.UInt16" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.IntegerTryParse.UInt32" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.IntegerTryParse.UInt64" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.IntegerTryParse.UInt8" executed="True" success="True" time="0.001" asserts="2" />
                </results>
              </test-suite>
              <test-suite name="IntPtrTest" success="True" time="0.003" asserts="0">
                <results>
                  <test-case name="MonoTests.System.IntPtrTest.Test64on64" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.IntPtrTest.TestLongOn32" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.IntPtrTest.ToStringWithFormat" executed="True" success="True" time="0.001" asserts="2" />
                </results>
              </test-suite>
              <test-suite name="IO" success="True" time="6.382" asserts="0">
                <results>
                  <test-suite name="BinaryReaderTest" success="True" time="1.052" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.BaseStream" executed="True" success="True" time="0.920" asserts="3" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.Close1" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ClosePeakChar" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.CloseRead" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.CloseReadBytes" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.Ctor1" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.CtorArgumentException" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.CtorArgumentExceptionCannotWrite" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.CtorArgumentExceptionClosedStream" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.CtorArgumentExceptionEncoding" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.CtorArgumentNullException1" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.CtorArgumentNullException2" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.CtorArgumentNullException3" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.CtorArgumentNullException4" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.CtorArgumentNullException5" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.CtorArgumentNullException6" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.CtorNullExceptionEncoding" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.CtorNullExceptionStream" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.PeakChar" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.Read" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.Read_Bytes_BufferNull" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.Read_Bytes_CountNegative" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.Read_Bytes_CountOverflow" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.Read_Bytes_IndexNegative" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.Read_Bytes_IndexOverflow" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.Read_Chars_BufferNull" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.Read_Chars_CountNegative" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.Read_Chars_CountOverflow" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.Read_Chars_IndexNegative" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.Read_Chars_IndexOverflow" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ReadBoolean" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ReadBooleanException" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ReadByte" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ReadByteArray" executed="True" success="True" time="0.001" asserts="11" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ReadByteException" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ReadBytes" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ReadBytesException" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ReadChar" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ReadCharArray" executed="True" success="True" time="0.001" asserts="11" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ReadCharException" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ReadChars" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ReadCharsException" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ReadDecimal" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ReadDecimalException" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ReadDouble" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ReadDoubleException" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ReadInt16" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ReadInt16Exception" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ReadInt32" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ReadInt32Exception" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ReadInt64" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ReadInt64Exception" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ReadLongUTF8String" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ReadOverrides" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ReadSByte" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ReadSByteException" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ReadSingle" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ReadSingleException" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ReadSting_CustomStream" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ReadString" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ReadStringException" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ReadStringInvalidLength" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ReadUInt16" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ReadUInt16Exception" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ReadUInt32" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ReadUInt32Exception" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ReadUInt64" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.ReadUInt64Exception" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.Test_ReadZeroBytes" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.TestBaseSeek1" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.TestBaseSeek2" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.TestInterleavedSeek1" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.TestPeekChar" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.TestReadBoolean" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.TestReadByte" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.TestReadChar" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.IO.BinaryReaderTest.TestReadInt32" executed="True" success="True" time="0.001" asserts="7" />
                    </results>
                  </test-suite>
                  <test-suite name="BinaryWriterTest" success="True" time="0.053" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.IO.BinaryWriterTest.BaseStreamCallsFlush" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="MonoTests.System.IO.BinaryWriterTest.Close1" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryWriterTest.Close2" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryWriterTest.Close3" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryWriterTest.Close4" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.BinaryWriterTest.Ctor" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.IO.BinaryWriterTest.CtorArgumentExceptionStreamCannotWrite" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryWriterTest.CtorExceptionStreamClosed" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryWriterTest.CtorNullExceptionStream" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryWriterTest.CtorNullExceptionStreamEncoding" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryWriterTest.Encoding" executed="True" success="True" time="0.006" asserts="32" />
                      <test-case name="MonoTests.System.IO.BinaryWriterTest.Seek" executed="True" success="True" time="0.001" asserts="15" />
                      <test-case name="MonoTests.System.IO.BinaryWriterTest.SeekException" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BinaryWriterTest.Write7BitEncodedIntTest" executed="True" success="True" time="0.006" asserts="7" />
                      <test-case name="MonoTests.System.IO.BinaryWriterTest.WriteByteAndChar" executed="True" success="True" time="0.002" asserts="6" />
                      <test-case name="MonoTests.System.IO.BinaryWriterTest.WriteByteArray" executed="True" success="True" time="0.001" asserts="15" />
                      <test-case name="MonoTests.System.IO.BinaryWriterTest.WriteCharArray" executed="True" success="True" time="0.001" asserts="15" />
                      <test-case name="MonoTests.System.IO.BinaryWriterTest.WriteDecimal" executed="True" success="True" time="0.002" asserts="48" />
                      <test-case name="MonoTests.System.IO.BinaryWriterTest.WriteDouble" executed="True" success="True" time="0.001" asserts="18" />
                      <test-case name="MonoTests.System.IO.BinaryWriterTest.WriteFloat" executed="True" success="True" time="0.001" asserts="11" />
                      <test-case name="MonoTests.System.IO.BinaryWriterTest.WriteInt" executed="True" success="True" time="0.001" asserts="19" />
                      <test-case name="MonoTests.System.IO.BinaryWriterTest.WriteString" executed="True" success="True" time="0.001" asserts="11" />
                    </results>
                  </test-suite>
                  <test-suite name="BufferedStreamTest" success="True" time="0.062" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.Close1" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.Close2" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.Close3" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.Close4" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.Close5" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.Close6" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.Close7" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.Ctor" executed="True" success="True" time="0.002" asserts="15" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.CtorNullExceptionStream" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.CtorNullExceptionStream1" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.CtorOutOfRangeException2" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.CtorOutOfRangeExceptionStream1" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.Flush" executed="True" success="True" time="0.001" asserts="14" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.Position" executed="True" success="True" time="0.002" asserts="14" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.PositionAfterSetLength" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.Read" executed="True" success="True" time="0.001" asserts="15" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.Read_CantRead" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.Read_CountNegative" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.Read_CountOverflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.Read_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.Read_OffsetNegative" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.Read_OffsetOverflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.ReadByte" executed="True" success="True" time="0.000" asserts="7" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.ReadByte_CantRead" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.ReadException" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.Seek" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.Seek_ClosedBufferedStream" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.Seek_ClosedMemoryStream" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.SeekException" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.SetLength" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.SetLength_Disposed" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.SetLengthException" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.SetLengthException2" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.SetLengthException3" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.Write" executed="True" success="True" time="0.001" asserts="14" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.Write_CantWrite" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.Write_CountNegative" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.Write_CountOverflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.Write_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.Write_OffsetNegative" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.Write_OffsetOverflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.WriteByte" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.WriteByte_CantWrite" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.BufferedStreamTest.WriteException" executed="True" success="True" time="0.004" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="DirectoryInfoTest" success="True" time="1.613" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.Constructor1" executed="True" success="True" time="0.002" asserts="4" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.Constructor1_Path_Empty" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.Constructor1_Path_InvalidPathChars" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.Constructor1_Path_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.Constructor1_Path_Whitespace" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.Create" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.CreateSubdirectory" executed="True" success="True" time="0.002" asserts="3" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.CreateSubdirectory_Path_Empty" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.CreateSubdirectory_Path_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.CreationTime" executed="True" success="True" time="0.002" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.CreationTimeUtc" executed="True" success="True" time="0.001" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.Delete1" executed="True" success="True" time="0.002" asserts="3" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.Delete1_DirectoryNotEmpty" executed="True" success="True" time="0.346" asserts="3" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.Delete2" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.Delete2_DirectoryNotEmpty" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.Deserialization" executed="True" success="True" time="0.002" asserts="2" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.DirectoryNameWithSpace" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.Exists" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.FullName" executed="True" success="True" time="0.002" asserts="10" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.FullName_RootDirectory" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.GetDirectiories_SearchOptionAllDirectories" executed="True" success="True" time="0.002" asserts="2" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.GetDirectories1" executed="True" success="True" time="0.003" asserts="3" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.GetDirectories1_DirectoryDoesNotExist" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.GetDirectories2" executed="True" success="True" time="0.007" asserts="9" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.GetDirectories2_DirectoryDoesNotExist" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.GetDirectories2_SearchPattern_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.GetDirectories3_SearchPattern_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.GetFiles1" executed="True" success="True" time="0.187" asserts="2" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.GetFiles1_DirectoryDoesNotExist" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.GetFiles2" executed="True" success="True" time="0.913" asserts="7" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.GetFiles2_DirectoryDoesNotExist" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.GetFiles2_SearchPattern_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.GetFiles3_SearchPattern_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.GetFileSystemInfos2_SearchPattern_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.Hang_76191" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.LastAccessTime" executed="True" success="True" time="0.001" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.LastAccessTimeUtc" executed="True" success="True" time="0.001" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.LastWriteTime" executed="True" success="True" time="0.002" asserts="12" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.LastWriteTimeUtc" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.MoveTo" executed="True" success="True" time="0.002" asserts="6" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.MoveTo_DestDirName_Empty" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.MoveTo_DestDirName_InvalidPathChars" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.MoveTo_DestDirName_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.MoveTo_DestDirName_Whitespace" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.MoveTo_SourceDest_NotDifferent" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.MoveTo_UpdateProperties" executed="True" success="True" time="0.001" asserts="10" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.Name" executed="True" success="True" time="0.002" asserts="7">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.Name_Bug76903" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.Parent" executed="True" success="True" time="0.002" asserts="10" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.Parent_Bug77090" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.Serialization" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.Symlink" executed="True" success="True" time="0.056" asserts="1">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.ToStringTest" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.IO.DirectoryInfoTest.WindowsSystem32_76191" executed="False">
                        <reason>
                          <message><![CDATA[Running on Unix.]]></message>
                        </reason>
                      </test-case>
                    </results>
                  </test-suite>
                  <test-suite name="DirectoryTest" success="True" time="0.222" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.IO.DirectoryTest.CreateDirectory" executed="True" success="True" time="0.002" asserts="4" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.CreateDirectory_Path_Empty" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.CreateDirectory_Path_InvalidChars" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.CreateDirectory_Path_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.CreateDirectory_Path_Whitespace" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.CreateDirectoryAlreadyExists" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.CreateDirectoryAlreadyExistsAsFile" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.CreationTime" executed="False">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                        <reason>
                          <message><![CDATA[Unix doesn't support CreationTime]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.Delete" executed="True" success="True" time="0.002" asserts="10" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.DeleteArgumentException" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.DeleteArgumentException2" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.DeleteArgumentException3" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.DeleteArgumentException4" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.DeleteArgumentNullException" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.DeleteDirectoryNotFoundException" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.DeleteDirectoryOnExistingFileName" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.EnumerateFilesListSymlinks" executed="True" success="True" time="0.006" asserts="14" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.Exists" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.ExistsAccessDenied" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.FilenameOnly" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.GetCreationTimeException_NonExistingPath" executed="True" success="True" time="0.002" asserts="6">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.GetCreationTimeException1" executed="True" success="True" time="0.000" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.GetCreationTimeException2" executed="True" success="True" time="0.001" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.GetCreationTimeException4" executed="True" success="True" time="0.000" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.GetCreationTimeException5" executed="True" success="True" time="0.001" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.GetCreationTimeUtc_NonExistingPath" executed="True" success="True" time="0.001" asserts="6">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.GetCreationTimeUtcException1" executed="True" success="True" time="0.001" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.GetCreationTimeUtcException2" executed="True" success="True" time="0.000" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.GetCreationTimeUtcException4" executed="True" success="True" time="0.000" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.GetCreationTimeUtcException5" executed="True" success="True" time="0.001" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.GetDirectories" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.GetDirectories_Backslash" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.GetFiles" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.GetFiles_580090" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.GetFiles_Backslash" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.GetFiles_Pattern" executed="True" success="True" time="0.003" asserts="35" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.GetLastAccessTime_NonExistingPath" executed="True" success="True" time="0.001" asserts="6">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.GetLastAccessTime_Null" executed="True" success="True" time="0.000" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.GetLastAccessTimeException2" executed="True" success="True" time="0.001" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.GetLastAccessTimeException4" executed="True" success="True" time="0.000" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.GetLastAccessTimeException5" executed="True" success="True" time="0.000" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.GetLastAccessTimeUtc_NonExistingPath" executed="True" success="True" time="0.001" asserts="6">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.GetLastAccessTimeUtc_Null" executed="True" success="True" time="0.001" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.GetLastAccessTimeUtcException2" executed="True" success="True" time="0.000" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.GetLastAccessTimeUtcException4" executed="True" success="True" time="0.000" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.GetLastAccessTimeUtcException5" executed="True" success="True" time="0.001" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.GetLastWriteTime_NonExistingPath" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.GetLastWriteTimeException1" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.GetLastWriteTimeException2" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.GetLastWriteTimeException4" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.GetLastWriteTimeException5" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.GetLastWriteTimeUtc_NonExistingPath" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.GetLastWriteTimeUtcException1" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.GetLastWriteTimeUtcException2" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.GetLastWriteTimeUtcException4" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.GetLastWriteTimeUtcException5" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.GetNoFiles" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.GetParentOfRootDirectory" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.LastAccessTime" executed="True" success="True" time="0.002" asserts="24">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.LastWriteTime" executed="True" success="True" time="0.002" asserts="24" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.Move_DestDirName_Empty" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.Move_DestDirName_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.Move_SourceDirName_Empty" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.Move_SourceDirName_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.MoveDirectory" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.MoveDirectory_Dest_Exists" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.MoveDirectory_Dest_SubDir" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.MoveDirectory_Same" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.MoveException4" executed="False">
                        <reason>
                          <message><![CDATA[On IA64, causes nunit to abort due to bug #76388]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.MoveException5" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.MoveFile" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.MoveFile_DestDir_Exists" executed="True" success="True" time="0.002" asserts="6" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.MoveFile_DestFile_Exists" executed="True" success="True" time="0.016" asserts="7" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.MoveFile_Same" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.SetCreationTimeException1" executed="True" success="True" time="0.001" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.SetCreationTimeException2" executed="True" success="True" time="0.000" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.SetCreationTimeException3" executed="True" success="True" time="0.007" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.SetCreationTimeException4" executed="True" success="True" time="0.001" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.SetCreationTimeException5" executed="True" success="True" time="0.001" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.SetCreationTimeUtcException1" executed="True" success="True" time="0.000" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.SetCreationTimeUtcException2" executed="True" success="True" time="0.007" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.SetCreationTimeUtcException3" executed="True" success="True" time="0.001" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.SetCreationTimeUtcException4" executed="True" success="True" time="0.000" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.SetCreationTimeUtcException5" executed="True" success="True" time="0.001" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.SetCurrentDirectoryEmpty" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.SetCurrentDirectoryNull" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.SetCurrentDirectoryWhitespace" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.SetLastAccessTimeException1" executed="True" success="True" time="0.001" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.SetLastAccessTimeException2" executed="True" success="True" time="0.001" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.SetLastAccessTimeException3" executed="True" success="True" time="0.001" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.SetLastAccessTimeException4" executed="True" success="True" time="0.001" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.SetLastAccessTimeException5" executed="True" success="True" time="0.001" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.SetLastAccessTimeUtcException1" executed="True" success="True" time="0.000" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.SetLastAccessTimeUtcException2" executed="True" success="True" time="0.000" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.SetLastAccessTimeUtcException3" executed="True" success="True" time="0.001" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.SetLastAccessTimeUtcException4" executed="True" success="True" time="0.001" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.SetLastAccessTimeUtcException5" executed="True" success="True" time="0.001" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.DirectoryTest.SetLastWriteTimeException1" executed="True" success="True" time="0.005" asserts="0" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.SetLastWriteTimeException2" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.SetLastWriteTimeException3" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.SetLastWriteTimeException4" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.SetLastWriteTimeException5" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.SetLastWriteTimeUtcException1" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.SetLastWriteTimeUtcException2" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.SetLastWriteTimeUtcException3" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.SetLastWriteTimeUtcException4" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.DirectoryTest.SetLastWriteTimeUtcException5" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="FileInfoTest" success="True" time="0.116" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.IO.FileInfoTest.AppendText" executed="True" success="True" time="0.002" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.Constructor1" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.Constructor1_FileName_Empty" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.Constructor1_FileName_InvalidPathChars" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.Constructor1_FileName_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.Constructor1_FileName_Whitespace" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.CopyTo1" executed="True" success="True" time="0.002" asserts="2" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.CopyTo1_DestFileName_AlreadyExists" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.CopyTo1_DestFileName_Empty" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.CopyTo1_DestFileName_InvalidPathChars" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.CopyTo1_DestFileName_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.CopyTo1_DestFileName_Whitespace" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.CopyTo2" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.CopyTo2_DestFileName_AlreadyExists" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.CopyTo2_DestFileName_Empty" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.CopyTo2_DestFileName_InvalidPathChars" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.CopyTo2_DestFileName_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.CopyTo2_DestFileName_Whitespace" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.Create" executed="True" success="True" time="0.002" asserts="6" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.CreateText" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.CreateText_Directory" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.Delete" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.Delete_Directory" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.Deserialization" executed="True" success="True" time="0.002" asserts="2" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.DirectoryTest" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.Exists" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.Length" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.Length_FileDoesNotExist" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.MoveTo" executed="True" success="True" time="0.002" asserts="8" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.MoveTo_DestFileName_AlreadyExists" executed="True" success="True" time="0.003" asserts="15" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.MoveTo_DestFileName_DirectoryDoesNotExist" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.MoveTo_DestFileName_Empty" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.MoveTo_DestFileName_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.MoveTo_DestFileName_Whitespace" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.MoveTo_FileDoesNotExist" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.MoveTo_Same" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.Open" executed="True" success="True" time="0.002" asserts="12" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.Open_FileDoesNotExist" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.OpenRead" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.OpenRead_Directory" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.OpenRead_FileLock" executed="True" success="True" time="0.001" asserts="3">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileInfoTest.OpenText" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.OpenText_Directory" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.OpenText_FileDoesNotExist" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.OpenWrite" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.OpenWrite_Directory" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.Replace1" executed="True" success="True" time="0.002" asserts="3" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.Replace1_Backup_Null" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.Replace1_DestFileName_Empty" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.Replace1_DestFileName_FileNotFound" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.Replace1_DestFileName_InvalidPathChars" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.Replace1_DestFileName_IsReadOnly" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.Replace1_DestFileName_Null" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.Replace1_DestFileName_WhiteSpace" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.Replace1_Source_FileNotFound" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.Serialization" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.IO.FileInfoTest.ToStringVariety" executed="True" success="True" time="0.001" asserts="8">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                    </results>
                  </test-suite>
                  <test-suite name="FileNotFoundExceptionTest" success="True" time="0.019" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.IO.FileNotFoundExceptionTest.Constructor1" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.IO.FileNotFoundExceptionTest.Constructor2" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.IO.FileNotFoundExceptionTest.Constructor2_Message_Empty" executed="True" success="True" time="0.000" asserts="7" />
                      <test-case name="MonoTests.System.IO.FileNotFoundExceptionTest.Constructor2_Message_Null" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.IO.FileNotFoundExceptionTest.Constructor3" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.IO.FileNotFoundExceptionTest.Constructor3_InnerException_Null" executed="True" success="True" time="0.000" asserts="7" />
                      <test-case name="MonoTests.System.IO.FileNotFoundExceptionTest.Constructor3_Message_Empty" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.IO.FileNotFoundExceptionTest.Constructor3_Message_Null" executed="True" success="True" time="0.000" asserts="7" />
                      <test-case name="MonoTests.System.IO.FileNotFoundExceptionTest.Constructor4" executed="True" success="True" time="0.001" asserts="10" />
                      <test-case name="MonoTests.System.IO.FileNotFoundExceptionTest.Constructor4_FileName_Empty" executed="True" success="True" time="0.000" asserts="8" />
                      <test-case name="MonoTests.System.IO.FileNotFoundExceptionTest.Constructor4_FileName_Null" executed="True" success="True" time="0.001" asserts="14" />
                      <test-case name="MonoTests.System.IO.FileNotFoundExceptionTest.Constructor4_FileNameAndMessage_Empty" executed="True" success="True" time="0.000" asserts="8" />
                      <test-case name="MonoTests.System.IO.FileNotFoundExceptionTest.Constructor4_FileNameAndMessage_Null" executed="True" success="True" time="0.000" asserts="8" />
                      <test-case name="MonoTests.System.IO.FileNotFoundExceptionTest.Constructor4_Message_Empty" executed="True" success="True" time="0.001" asserts="10" />
                      <test-case name="MonoTests.System.IO.FileNotFoundExceptionTest.Constructor4_Message_Null" executed="True" success="True" time="0.001" asserts="19" />
                    </results>
                  </test-suite>
                  <test-suite name="FileStreamTest" success="True" time="0.540" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.IO.FileStreamTest.BeginRead_Disposed" executed="True" success="True" time="0.002" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileStreamTest.BeginWrite_Disposed" executed="True" success="True" time="0.001" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileStreamTest.BeginWrite_Recursive" executed="True" success="True" time="0.416" asserts="1" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.Constructor_InvalidFileHandle" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.CtorAccess1Read2Read" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.CtorAccess1Read2Write" executed="True" success="True" time="0.002" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileStreamTest.CtorAccess1Write2Write" executed="True" success="True" time="0.001" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileStreamTest.CtorArgumentException1" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.CtorArgumentException2" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.CtorArgumentException3" executed="True" success="True" time="0.005" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.CtorArgumentNullException" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.CtorArgumentOutOfRangeException1" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.CtorArgumentOutOfRangeException2" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.CtorArgumentOutOfRangeException3" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.CtorArgumentOutOfRangeException4" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.CtorArgumentOutOfRangeException5" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.CtorBufferSizeZero" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.CtorDirectoryNotFound_RelativePath" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.CtorDirectoryNotFoundException_Append" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.CtorDirectoryNotFoundException_Create" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.CtorDirectoryNotFoundException_CreateNew" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.CtorDirectoryNotFoundException_Open" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.CtorDirectoryNotFoundException_OpenOrCreate" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.CtorDirectoryNotFoundException_Truncate" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.CtorFileNotFoundException_Mode_Open" executed="True" success="True" time="0.002" asserts="10" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.CtorFileNotFoundException_Mode_Truncate" executed="True" success="True" time="0.002" asserts="10" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.CtorIOException" executed="True" success="True" time="0.001" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileStreamTest.CtorIOException1" executed="True" success="True" time="0.002" asserts="8" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.CtorIOException2" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.CtorReadDirectoryAsFile" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.DeleteOnClose" executed="True" success="True" time="0.001" asserts="2">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileStreamTest.FileShare_Delete" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.Flush" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.Length" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.LengthAfterWrite" executed="True" success="True" time="0.002" asserts="3" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.Lock_Disposed" executed="True" success="True" time="0.002" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileStreamTest.ModeAndAccessCombinations" executed="True" success="True" time="0.005" asserts="30" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.Position_Disposed" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.PositionAfterSetLength" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.Read_CountNegative" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.Read_CountOverflow" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.Read_OffsetNegative" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.Read_OffsetOverflow" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.ReadBytePastEndOfStream" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.Seek" executed="True" success="True" time="0.001" asserts="10" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.Seek_InvalidSeekOrigin" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.SetLength_Disposed" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.SetLengthWithClosedBaseStream" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.TestFlushNotOwningHandle" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.TestReadByteVerifyAccessMode" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.TestReadVerifyAccessMode" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.TestWriteByteVerifyAccessMode" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.TestWriteVerifyAccessMode" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.Unlock_Disposed" executed="True" success="True" time="0.001" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileStreamTest.Write" executed="True" success="True" time="0.001" asserts="30" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.Write_CountNegative" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.Write_CountOverflow" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.Write_OffsetNegative" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.Write_OffsetOverflow" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileStreamTest.WriteWithExposedHandle" executed="True" success="True" time="0.003" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="FileSystemInfoTest" success="True" time="0.026" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.IO.FileSystemInfoTest.CreationTimeDirectory" executed="False">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                        <reason>
                          <message><![CDATA[Unix doesn't support CreationTimes]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileSystemInfoTest.CreationTimeFile" executed="False">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                        <reason>
                          <message><![CDATA[Unix doesn't support CreationTimes]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileSystemInfoTest.CreationTimeNoFileOrDirectory" executed="True" success="True" time="0.002" asserts="14">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileSystemInfoTest.DefaultLastAccessTime" executed="True" success="True" time="0.001" asserts="7">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileSystemInfoTest.DefaultLastWriteTime" executed="True" success="True" time="0.001" asserts="7">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileSystemInfoTest.Deserialization" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.IO.FileSystemInfoTest.Extenssion" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.IO.FileSystemInfoTest.LastAccessTime" executed="True" success="True" time="0.003" asserts="16">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileSystemInfoTest.LastWriteTime" executed="True" success="True" time="0.002" asserts="16" />
                      <test-case name="MonoTests.System.IO.FileSystemInfoTest.Serialization" executed="True" success="True" time="0.001" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite name="FileTest" success="True" time="0.294" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.IO.FileTest.Copy" executed="True" success="True" time="0.002" asserts="5" />
                      <test-case name="MonoTests.System.IO.FileTest.Copy_DestFileName_AlreadyExists" executed="True" success="True" time="0.002" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.Copy_DestFileName_Empty" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.Copy_DestFileName_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.Copy_DestFileName_Whitespace" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.Copy_SourceFileName_DestFileName_Same" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.IO.FileTest.Copy_SourceFileName_DoesNotExist" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.Copy_SourceFileName_Empty" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.Copy_SourceFileName_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.Copy_SourceFileName_Whitespace" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.Create" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.IO.FileTest.Create_Directory_DoesNotExist" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.Create_Path_Directory" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.Create_Path_Empty" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.Create_Path_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.Create_Path_ReadOnly" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.Create_Path_Whitespace" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.CreationTime" executed="False">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                        <reason>
                          <message><![CDATA[Setting the creation time on Unix is not possible.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.Delete" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.IO.FileTest.Delete_Directory_DoesNotExist" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.Delete_File_ReadOnly" executed="False">
                        <reason>
                          <message><![CDATA[ReadOnly files can be deleted on unix since fdef50957f508627928c7876a905d5584da45748.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.Delete_Path_Empty" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.Delete_Path_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.Delete_Path_Whitespace" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.Exists_InvalidDirectory" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.IO.FileTest.Exists_InvalidFileName" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.IO.FileTest.FileStreamClose" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileTest.GetAttributes_Archive" executed="False">
                        <reason>
                          <message><![CDATA[bug #325181: FileAttributes.Archive has no effect on Unix.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.GetAttributes_Default_Directory" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.IO.FileTest.GetAttributes_Default_File" executed="False">
                        <reason>
                          <message><![CDATA[bug #325181: FileAttributes.Archive has no effect on Unix.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.GetAttributes_Directory" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.FileTest.GetAttributes_Path_DoesNotExist" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.GetAttributes_Path_Empty" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.GetAttributes_Path_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.GetAttributes_ReadOnly" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.IO.FileTest.GetAttributes_System" executed="False">
                        <reason>
                          <message><![CDATA[FileAttributes.System is not supported on Unix.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.GetCreationTime_Path_DoesNotExist" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.IO.FileTest.GetCreationTime_Path_Empty" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.GetCreationTime_Path_InvalidPathChars" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.GetCreationTime_Path_Null" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.GetCreationTime_Path_Whitespace" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.GetCreationTimeUtc_Path_DoesNotExist" executed="True" success="True" time="0.001" asserts="6">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.GetCreationTimeUtc_Path_Empty" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.GetCreationTimeUtc_Path_InvalidPathChars" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.GetCreationTimeUtc_Path_Null" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.GetCreationTimeUtc_Path_Whitespace" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.GetLastAccessTime_Path_DoesNotExist" executed="True" success="True" time="0.001" asserts="6">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.GetLastAccessTime_Path_Empty" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.GetLastAccessTime_Path_InvalidPathChars" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.GetLastAccessTime_Path_Null" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.GetLastAccessTime_Path_Whitespace" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.GetLastAccessTimeUtc_Path_DoesNotExist" executed="True" success="True" time="0.001" asserts="6">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.GetLastAccessTimeUtc_Path_Empty" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.GetLastAccessTimeUtc_Path_InvalidPathChars" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.GetLastAccessTimeUtc_Path_Null" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.GetLastAccessTimeUtc_Path_Whitespace" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.GetLastWriteTime_Path_DoesNotExist" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.IO.FileTest.GetLastWriteTime_Path_Empty" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.GetLastWriteTime_Path_InvalidPathChars" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.GetLastWriteTime_Path_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.GetLastWriteTime_Path_Whitespace" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.GetLastWriteTimeUtc_Path_DoesNotExist" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.IO.FileTest.GetLastWriteTimeUtc_Path_Empty" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.GetLastWriteTimeUtc_Path_InvalidPathChars" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.GetLastWriteTimeUtc_Path_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.GetLastWriteTimeUtc_Path_Whitespace" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.LastAccessTime" executed="True" success="True" time="0.003" asserts="20">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.LastWriteTime" executed="True" success="True" time="0.002" asserts="20" />
                      <test-case name="MonoTests.System.IO.FileTest.Lock_Large" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileTest.Lock_Small" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileTest.Move" executed="True" success="True" time="0.002" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.Move_DestFileName_AlreadyExists" executed="True" success="True" time="0.003" asserts="15" />
                      <test-case name="MonoTests.System.IO.FileTest.Move_DestFileName_DirectoryDoesNotExist" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.Move_DestFileName_Empty" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.Move_DestFileName_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.Move_DestFileName_Whitespace" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.Move_FileLock" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.IO.FileTest.Move_SourceFileName_DoesNotExist" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.Move_SourceFileName_Empty" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.Move_SourceFileName_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.Move_SourceFileName_Whitespace" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.MoveTest" executed="True" success="True" time="0.034" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileTest.Open" executed="True" success="True" time="0.002" asserts="13" />
                      <test-case name="MonoTests.System.IO.FileTest.Open_AppendMode_ReadAccess" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.Open_CreateNewMode_ReadAccess" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.OpenAppend" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileTest.OpenRead" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.FileTest.OpenWrite" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.FileTest.Position_Large" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.IO.FileTest.Position_Small" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.IO.FileTest.ReadWriteAllText" executed="True" success="True" time="0.008" asserts="14" />
                      <test-case name="MonoTests.System.IO.FileTest.ReplaceTest" executed="True" success="True" time="0.003" asserts="3" />
                      <test-case name="MonoTests.System.IO.FileTest.Seek_Large" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.IO.FileTest.Seek_Small" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.IO.FileTest.SetCLastAccessTimeUtc_Path_Empty" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.SetCreationTime_FileLock" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.SetCreationTime_Path_DoesNotExist" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.SetCreationTime_Path_Empty" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.SetCreationTime_Path_InvalidPathChars" executed="True" success="True" time="0.001" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.SetCreationTime_Path_Null" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.SetCreationTime_Path_Whitespace" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.SetCreationTimeUtc_FileLock" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.SetCreationTimeUtc_Path_DoesNotExist" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.SetCreationTimeUtc_Path_Empty" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.SetCreationTimeUtc_Path_InvalidPathChars" executed="True" success="True" time="0.001" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.SetCreationTimeUtc_Path_Null" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.SetCreationTimeUtc_Path_Whitespace" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.SetLastAccessTime_FileLock" executed="True" success="True" time="0.002" asserts="4">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.SetLastAccessTime_Path_DoesNotExist" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.SetLastAccessTime_Path_Empty" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.SetLastAccessTime_Path_InvalidPathChars" executed="True" success="True" time="0.001" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.SetLastAccessTime_Path_Null" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.SetLastAccessTime_Path_Whitespace" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.SetLastAccessTimeUtc_FileLock" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.SetLastAccessTimeUtc_Path_DoesNotExist" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.SetLastAccessTimeUtc_Path_InvalidPathChars" executed="True" success="True" time="0.001" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.SetLastAccessTimeUtc_Path_Null" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.SetLastAccessTimeUtc_Path_Whitespace" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.FileTest.SetLastWriteTime_FileLock" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.SetLastWriteTime_Path_DoesNotExist" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.SetLastWriteTime_Path_Empty" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.SetLastWriteTime_Path_InvalidPathChars" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileTest.SetLastWriteTime_Path_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.SetLastWriteTime_Path_Whitespace" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.SetLastWriteTimeUtc_FileLock" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.SetLastWriteTimeUtc_Path_DoesNotExist" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.SetLastWriteTimeUtc_Path_Empty" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.SetLastWriteTimeUtc_Path_InvalidPathChars" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.FileTest.SetLastWriteTimeUtc_Path_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.SetLastWriteTimeUtc_Path_Whitespace" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.FileTest.TestExists" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.IO.FileTest.TestGetCreationTime" executed="True" success="True" time="0.001" asserts="1">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                    </results>
                  </test-suite>
                  <test-suite name="IsolatedStorageTest" success="True" time="0.576" asserts="0">
                    <results>
                      <test-suite name="IsolatedStorageFileStreamTest" success="True" time="0.147" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileStreamTest.Constructor_StorageInvalid" executed="True" success="True" time="0.126" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileStreamTest.Constructor_StringMode" executed="True" success="True" time="0.003" asserts="7" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileStreamTest.Constructor_StringModeAccess" executed="True" success="True" time="0.006" asserts="7" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileStreamTest.Constructor_StringModeAccessBad" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileStreamTest.Constructor_StringModeAccessShare" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileStreamTest.Constructor_StringModeAccessShareBad" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileStreamTest.Constructor_StringModeBad" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileStreamTest.Constructor_StringNullMode" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileStreamTest.Handle" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileStreamTest.RootPath" executed="True" success="True" time="0.001" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="IsolatedStorageFileTest" success="True" time="0.391" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.CopyFile" executed="True" success="True" time="0.051" asserts="6" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.CreateDirectory_DirectoryWithSameNameExists" executed="True" success="True" time="0.003" asserts="2" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.CreateDirectory_FileWithSameNameExists" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.CreateDirectory_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.CreateFile" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.CreateSubDirectory" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.DeleteDirectory_NonEmpty" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.DeleteFile" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.DirectoryExists" executed="True" success="True" time="0.002" asserts="9" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.FileExists" executed="True" success="True" time="0.002" asserts="7" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.GetCreationTime" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.GetDirsInSubDirs" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.GetEnumerator_Application" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.GetEnumerator_Machine" executed="True" success="True" time="0.021" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.GetEnumerator_Machine_Details" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.GetEnumerator_User" executed="True" success="True" time="0.002" asserts="8" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.GetEnumerator_User_Details" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.GetEnumerator_UserRoaming" executed="True" success="True" time="0.107" asserts="14" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.GetEnumerator_UserRoaming_Details" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.GetFilesInSubdirs" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.GetStore_Application_NullObject" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.GetStore_Application_NullType" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.GetStore_Assembly_AssemblyNullObject" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.GetStore_Assembly_DomainNullObject" executed="True" success="True" time="0.002" asserts="5" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.GetStore_Assembly_NonPresentDomainEvidences" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.GetStore_AssemblyScope_Evidence_NullAssemblyEvidence" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.GetStore_AssemblyScope_Evidence_NullDomainEvidence" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.GetStore_Domain_AssemblyNullObject" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.GetStore_Domain_DomainNullObject" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.GetStore_Domain_NonPresentEvidences" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.GetStore_Domain_Zone" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.GetStore_Domain_ZoneObjectZoneObject" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.GetStore_DomainScope_Evidence_NullAssemblyEvidence" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.GetStore_DomainScope_Evidence_NullDomainEvidence" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.GetStore_DomainScope_Evidences" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.GetStore_NullTypes" executed="True" success="True" time="0.048" asserts="2" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.GetUserStoreForApplication" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.GetUserStoreForApplication_AssemblyIdentity" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.GetUserStoreForApplication_DomainIdentity" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.GetUserStoreForApplication_WithoutApplicationIdentity" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.GetUserStoreForAssembly" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.GetUserStoreForAssembly_ApplicationIdentity" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.GetUserStoreForAssembly_DomainIdentity" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.GetUserStoreForDomain" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.GetUserStoreForDomain_ApplicationIdentity" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.GetUserStoreForSite" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.IncreateQuotaTo" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.MoveDirectory" executed="True" success="True" time="0.002" asserts="3" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.MoveFile" executed="True" success="True" time="0.006" asserts="6" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.MultiLevel" executed="True" success="True" time="0.003" asserts="7" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.RegressionBNC354539" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.Remove" executed="True" success="True" time="0.067" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.RemoveFromOtherInstance" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.RootedDirectory" executed="True" success="True" time="0.004" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageFileTest.UsedSize" executed="True" success="True" time="0.001" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="IsolatedStorageTest" success="True" time="0.028" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageTest.IsolatedStorage" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageTest.IsolatedStorage_Application" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageTest.IsolatedStorage_ApplicationIdentity" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageTest.IsolatedStorage_Assembly" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageTest.IsolatedStorage_AssemblyIdentity" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageTest.IsolatedStorage_AssemblyUser" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageTest.IsolatedStorage_AssemblyUserDomain" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageTest.IsolatedStorage_AvailableFreeSpace" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageTest.IsolatedStorage_Bad_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageTest.IsolatedStorage_CurrentSize" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageTest.IsolatedStorage_Domain" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageTest.IsolatedStorage_DomainIdentity" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageTest.IsolatedStorage_IncreaseQuotaTo" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageTest.IsolatedStorage_Machine" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageTest.IsolatedStorage_MaximumSize" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageTest.IsolatedStorage_None" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageTest.IsolatedStorage_None_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageTest.IsolatedStorage_Quota" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageTest.IsolatedStorage_Roaming" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageTest.IsolatedStorage_UsedSize" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageTest.IsolatedStorage_User" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.IO.IsolatedStorageTest.IsolatedStorageTest.MultiLevel" executed="True" success="True" time="0.003" asserts="7" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="MemoryStreamTest" success="True" time="1.111" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.BaseDisposeCalled" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.BeginRead" executed="True" success="True" time="0.002" asserts="2" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.BeginRead_BeginWrite" executed="True" success="True" time="0.502" asserts="9" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.BeginRead_Read" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.BeginRead_WithState" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.BeginReadAsync" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.BeginReadIsBlockingNextRead" executed="True" success="True" time="0.501" asserts="13" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.BeginWrite" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.BeginWrite_WithState" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.Capacity" executed="True" success="True" time="0.001" asserts="14" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.Close_get_Length" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.Close_get_Position" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.Close_set_Position" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.Closed" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.ConstructorsFive" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.ConstructorsFour" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.ConstructorsOne" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.ConstructorsSix" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.ConstructorsThree" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.ConstructorsTwo" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.EndRead_Disposed" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.EndRead_Twice" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.EndWrite_OnBeginRead" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.EndWrite_Twice" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.Expand" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.GetBufferOne" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.GetBufferTwo" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.MorePositionLength" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.MoreWriteByte" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.MoreWriteByte2" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.PositionLength" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.PubliclyVisible" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.PubliclyVisible_Ctor_ByteArray" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.PubliclyVisible_Ctor_ByteArray_Boolean" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.PubliclyVisible_Ctor_ByteArray_Int_Int" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.PubliclyVisible_Ctor_ByteArray_Int_Int_Boolean" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.PubliclyVisible_Ctor_ByteArray_Int_Int_Boolean_Boolean" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.Read" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.ReadAsync" executed="True" success="True" time="0.009" asserts="4" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.ReadAsync_Canceled" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.Seek" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.Seek_Disposed" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.SetLength" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.SetLength_ReadOnly" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.TestAsyncArgumentExceptions" executed="True" success="True" time="0.007" asserts="17" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.TestAsyncFlushExceptions" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.TestAsyncReadExceptions" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.TestAsyncWriteExceptions" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.TestCopyAsync" executed="True" success="True" time="0.005" asserts="6" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.ToArray_Empty" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.WritableOverride" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.WriteAsync" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.WriteAsync_Canceled" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.WriteBlock" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.WriteByte" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.WriteBytes" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.WriteExpand" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.WriteLengths" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.WriteNonWritable" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.ZeroCapacity" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.MemoryStreamTest.ZeroingOnExpand" executed="True" success="True" time="0.001" asserts="8" />
                    </results>
                  </test-suite>
                  <test-suite name="PathTest" success="True" time="0.103" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.IO.PathTest.CanonicalizeDots" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.IO.PathTest.ChangeExtension" executed="True" success="True" time="0.001" asserts="18" />
                      <test-case name="MonoTests.System.IO.PathTest.ChangeExtension_Extension_InvalidPathChars" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.IO.PathTest.ChangeExtension_Path_InvalidPathChars" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.IO.PathTest.Combine" executed="True" success="True" time="0.001" asserts="10" />
                      <test-case name="MonoTests.System.IO.PathTest.Combine_3Params" executed="True" success="True" time="0.002" asserts="7" />
                      <test-case name="MonoTests.System.IO.PathTest.Combine_4Params" executed="True" success="True" time="0.002" asserts="8" />
                      <test-case name="MonoTests.System.IO.PathTest.Combine_ManyParams" executed="True" success="True" time="0.003" asserts="9" />
                      <test-case name="MonoTests.System.IO.PathTest.Combine_Path1_InvalidPathChars" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.IO.PathTest.Combine_Path1_Null" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.IO.PathTest.Combine_Path2_InvalidPathChars" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.IO.PathTest.Combine_Path2_Null" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.IO.PathTest.GetDirectoryName" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.IO.PathTest.GetDirectoryName_Path_Empty" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.IO.PathTest.GetDirectoryName_Path_InvalidPathChars" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.IO.PathTest.GetDirectoryName_Path_Null" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.IO.PathTest.GetDirectoryName_Path_Whitespace" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.IO.PathTest.GetExtension" executed="True" success="True" time="0.001" asserts="14" />
                      <test-case name="MonoTests.System.IO.PathTest.GetExtension_Path_InvalidPathChars" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.IO.PathTest.GetFileName" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.IO.PathTest.GetFileName_Path_InvalidPathChars" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.IO.PathTest.GetFileNameWithoutExtension" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.IO.PathTest.GetFileNameWithoutExtension_Path_InvalidPathChars" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.IO.PathTest.GetFullPath" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.IO.PathTest.GetFullPath_Path_Empty" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.IO.PathTest.GetFullPath_Path_EndingSeparator" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.IO.PathTest.GetFullPath_Path_InvalidPathChars" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.IO.PathTest.GetFullPath_Path_Null" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.IO.PathTest.GetFullPath_Path_Whitespace" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.IO.PathTest.GetFullPath_Unix" executed="True" success="True" time="0.002" asserts="26" />
                      <test-case name="MonoTests.System.IO.PathTest.GetFullPath_Windows" executed="False">
                        <reason>
                          <message><![CDATA[Not running on Windows.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.IO.PathTest.GetFullPath2" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.PathTest.GetInvalidFileNameChars_Modify" executed="True" success="True" time="0.003" asserts="2" />
                      <test-case name="MonoTests.System.IO.PathTest.GetInvalidFileNameChars_Values" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.PathTest.GetInvalidPathChars_Modify" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.IO.PathTest.GetInvalidPathChars_Order" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.PathTest.GetInvalidPathChars_Values" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.PathTest.GetPathRoot" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.IO.PathTest.GetPathRoot_Path_Empty" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.IO.PathTest.GetPathRoot_Path_InvalidPathChars" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.IO.PathTest.GetPathRoot_Path_Whitespace" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.IO.PathTest.GetPathRoot2" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.IO.PathTest.GetRandomFileName" executed="True" success="True" time="0.001" asserts="13" />
                      <test-case name="MonoTests.System.IO.PathTest.GetRandomFileNameIsAlphaNumerical" executed="True" success="True" time="0.010" asserts="13000" />
                      <test-case name="MonoTests.System.IO.PathTest.GetTempFileName" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.IO.PathTest.GetTempPath" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.IO.PathTest.HasExtension" executed="True" success="True" time="0.001" asserts="13" />
                      <test-case name="MonoTests.System.IO.PathTest.HasExtension_Path_InvalidPathChars" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.IO.PathTest.InvalidPathChars_Modify" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.IO.PathTest.InvalidPathChars_Values" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.PathTest.IsPathRooted" executed="True" success="True" time="0.001" asserts="11" />
                      <test-case name="MonoTests.System.IO.PathTest.IsPathRooted_Path_Empty" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.IO.PathTest.IsPathRooted_Path_InvalidPathChars" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.IO.PathTest.IsPathRooted_Path_Null" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.IO.PathTest.IsPathRooted_Path_Whitespace" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.IO.PathTest.WindowsDriveC14N_77058" executed="False">
                        <reason>
                          <message><![CDATA[Running on Unix.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.IO.PathTest.WindowsSystem32_76191" executed="False">
                        <reason>
                          <message><![CDATA[Running on Unix.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.IO.PathTest.WindowsSystem32_77007" executed="False">
                        <reason>
                          <message><![CDATA[Running on Unix.]]></message>
                        </reason>
                      </test-case>
                    </results>
                  </test-suite>
                  <test-suite name="StreamReaderTest" success="True" time="0.157" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.IO.StreamReaderTest.bug75526" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="MonoTests.System.IO.StreamReaderTest.Contructor_Path_NullEncoding" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.StreamReaderTest.Contructor_Stream_NullEncoding" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.StreamReaderTest.EncodingChangedAuto" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="MonoTests.System.IO.StreamReaderTest.EncodingDetection" executed="True" success="True" time="0.005" asserts="0" />
                      <test-case name="MonoTests.System.IO.StreamReaderTest.EncodingDetectionUnicode" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.IO.StreamReaderTest.EndOfBufferIsCR" executed="True" success="True" time="0.079" asserts="16108">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.IO.StreamReaderTest.NullStream" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.IO.StreamReaderTest.PeekWhileBlocking" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.IO.StreamReaderTest.Read_CountOverflow" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.StreamReaderTest.Read_DoesntStopAtLineEndings" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.IO.StreamReaderTest.Read_IndexOverflow" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.StreamReaderTest.Read_Null" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.StreamReaderTest.ReadLine1" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.IO.StreamReaderTest.ReadLine2" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.IO.StreamReaderTest.ReadLine3" executed="True" success="True" time="0.002" asserts="3" />
                      <test-case name="MonoTests.System.IO.StreamReaderTest.ReadLine4" executed="True" success="True" time="0.003" asserts="5" />
                      <test-case name="MonoTests.System.IO.StreamReaderTest.ReadLine5" executed="True" success="True" time="0.002" asserts="3" />
                      <test-case name="MonoTests.System.IO.StreamReaderTest.ReadLineAsync" executed="True" success="True" time="0.012" asserts="2" />
                      <test-case name="MonoTests.System.IO.StreamReaderTest.TestBaseStream" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.IO.StreamReaderTest.TestBaseStreamClosed" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.StreamReaderTest.TestCtor1" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.StreamReaderTest.TestCtor2" executed="True" success="True" time="0.002" asserts="6" />
                      <test-case name="MonoTests.System.IO.StreamReaderTest.TestCtor3" executed="True" success="True" time="0.002" asserts="6" />
                      <test-case name="MonoTests.System.IO.StreamReaderTest.TestCtor4" executed="True" success="True" time="0.003" asserts="12" />
                      <test-case name="MonoTests.System.IO.StreamReaderTest.TestPeek" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.IO.StreamReaderTest.TestRead" executed="True" success="True" time="0.002" asserts="16" />
                      <test-case name="MonoTests.System.IO.StreamReaderTest.TestReadLine" executed="True" success="True" time="0.001" asserts="5" />
                    </results>
                  </test-suite>
                  <test-suite name="StreamTest" success="True" time="0.025" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.IO.StreamTest.CopyAsync" executed="True" success="True" time="0.012" asserts="1" />
                      <test-case name="MonoTests.System.IO.StreamTest.FlushAsync" executed="True" success="True" time="0.003" asserts="2" />
                      <test-case name="MonoTests.System.IO.StreamTest.FlushAsync_Exception" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.StreamTest.ReadAsync" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.StreamTest.ReadAsync_Exception" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.StreamTest.WriteAsync" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.IO.StreamTest.WriteAsync_Exception" executed="True" success="True" time="0.001" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="StreamWriterTest" success="True" time="0.115" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.IO.StreamWriterTest.AutoFlush" executed="True" success="True" time="0.002" asserts="10" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.AutoFlush_Disposed" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.Close" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.Constructor1" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.Constructor1_Stream_NotWritable" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.Constructor1_Stream_Null" executed="True" success="True" time="0.002" asserts="4" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.Constructor2" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.Constructor2_Path_DirectoryNotFound" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.Constructor2_Path_Empty" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.Constructor2_Path_IllegalChars" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.Constructor2_Path_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.Constructor3" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.Constructor3_Encoding_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.Constructor3_Stream_NotWritable" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.Constructor3_Stream_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.Constructor4" executed="True" success="True" time="0.002" asserts="10" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.Constructor4_Path_DirectoryNotFound" executed="True" success="True" time="0.002" asserts="8" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.Constructor4_Path_Empty" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.Constructor4_Path_InvalidChars" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.Constructor4_Path_Null" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.Constructor5" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.Constructor5_BufferSize_NotPositive" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.Constructor5_Encoding_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.Constructor5_Stream_NotWritable" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.Constructor5_Stream_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.Constructor6" executed="True" success="True" time="0.001" asserts="10" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.Constructor6_Encoding_Null" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.Constructor6_Path_DirectoryNotFound" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.Constructor6_Path_Empty" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.Constructor6_Path_InvalidChars" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.Constructor6_Path_Null" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.Constructor7" executed="True" success="True" time="0.001" asserts="10" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.Constructor7_BufferSize_NotPositive" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.Constructor7_Encoding_Null" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.Constructor7_Path_DirectoryNotFound" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.Constructor7_Path_Empty" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.Constructor7_Path_InvalidChars" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.Constructor7_Path_Null" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.Flush" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.Flush_Disposed" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.FlushAsync" executed="True" success="True" time="0.009" asserts="3" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.KeepOpenWithDispose" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.NoPreambleOnAppend" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.WriteAsync" executed="True" success="True" time="0.006" asserts="5" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.WriteChar_Disposed" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.WriteCharArray_CountOverflow" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.WriteCharArray_Disposed" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.WriteCharArray_IndexOverflow" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.WriteCharArray_Null" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.WriteString_Disposed" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.StreamWriterTest.WriteString_Null" executed="True" success="True" time="0.001" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="StringReaderTest" success="True" time="0.014" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.IO.StringReaderTest.MixedLineEnding" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.IO.StringReaderTest.MoreEOL" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.IO.StringReaderTest.Read_CountOverflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.StringReaderTest.Read_DoesntStopAtLineEndings" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.IO.StringReaderTest.Read_IndexOverflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.StringReaderTest.TestClose" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.IO.StringReaderTest.TestExceptions" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.IO.StringReaderTest.TestPeekAndReadAtEndOfString" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.IO.StringReaderTest.TestPeekAndReadEmptyString" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.IO.StringReaderTest.TestPeekRead" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.IO.StringReaderTest.TestRead" executed="True" success="True" time="0.000" asserts="7" />
                      <test-case name="MonoTests.System.IO.StringReaderTest.TestReadEOL" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.IO.StringReaderTest.TestReadLine" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="StringWriterTest" success="True" time="0.027" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.IO.StringWriterTest.Disposed_DoubleClose" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.StringWriterTest.Disposed_Encoding" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.IO.StringWriterTest.Disposed_GetStringBuilder" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.IO.StringWriterTest.Disposed_ToString" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.IO.StringWriterTest.Disposed_WriteChar" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.StringWriterTest.Disposed_WriteChars" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.StringWriterTest.Disposed_WriteString" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.StringWriterTest.TestClose" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.StringWriterTest.TestConstructors" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.IO.StringWriterTest.TestCultureInfoConstructor" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.IO.StringWriterTest.TestExceptions" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.IO.StringWriterTest.TestGetStringBuilder" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.IO.StringWriterTest.TestNewLine" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.StringWriterTest.TestWrite" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.IO.StringWriterTest.TestWriteLine" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.IO.StringWriterTest.WriteChars_CountNegative" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.StringWriterTest.WriteChars_CountOverflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.StringWriterTest.WriteChars_IndexNegative" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.StringWriterTest.WriteChars_IndexOverflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.StringWriterTest.WriteChars_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.StringWriterTest.WriteString_Null" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="TextReaderTest" success="True" time="0.006" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.IO.TextReaderTest.TestNullReader" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.IO.TextReaderTest.TestTextReaderReadLine" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.IO.TextReaderTest.TestTextReaderReadToEnd" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="TextWriterTest" success="True" time="0.003" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.IO.TextWriterTest.CoreNewLine" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.TextWriterTest.TestCharArrayCallsArrayIntInt" executed="True" success="True" time="0.001" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="UnmanagedMemoryStreamTest" success="True" time="0.107" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.CanRead" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.CanRead_Stream_Closed" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.CanSeek" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.CanSeek_Stream_Closed" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.CanWrite" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.CanWrite_Stream_Closed" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Capacity_Stream_Closed" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Constructor1" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Constructor1_Length_Negative" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Constructor1_Pointer_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Constructor2" executed="True" success="True" time="0.001" asserts="18" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Constructor2_Access_Invalid" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Constructor2_Capacity_Negative" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Constructor2_Length_Negative" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Constructor2_Length_Overflow" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Constructor2_Pointer_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Defaults_Can_Properties" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Defaults_Capacity" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Defaults_Length" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Defaults_Position" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Defaults_PositionPointer" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Defaults_ReadTimeout" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Defaults_WriteTimeout" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Flush_Stream_Closed" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Initialize_Access_Invalid" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Initialize_Capacity_Negative" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Initialize_Length_Negative" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Initialize_Pointer_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Length_Stream_Closed" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Position" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Position_MaxValue_Exceeded" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Position_Negative" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Position_Overflow" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Position_Stream_Closed" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.PositionPointer_Overflow" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.PositionPointer_Set" executed="True" success="True" time="0.002" asserts="2" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.PositionPointer_Stream_Closed" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.PositionPointer_Underflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Read" executed="True" success="True" time="0.002" asserts="5" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Read_Buffer_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Read_Count_Negative" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Read_Count_Overflow" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Read_Count_Overlow" executed="True" success="True" time="0.004" asserts="4" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Read_EndOfStream" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Read_Offset_Negative" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Read_Offset_Overflow" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Read_Stream_Closed" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Read_WriteOnly" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.ReadByte" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.ReadByte_EndOfStream" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.ReadByte_Stream_Closed" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.ReadByte_WriteOnly" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Seek" executed="True" success="True" time="0.001" asserts="20" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Seek_Begin_Overflow" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Seek_Current_Overflow" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Seek_End_Overflow" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Seek_Offset_Invalid" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Seek_Origin_Invalid" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Seek_Stream_Closed" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.SetLength" executed="True" success="True" time="0.001" asserts="15" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.SetLength_Capacity_Exceeded" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.SetLength_Negative" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.SetLength_Stream_ReadOnly" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Write" executed="True" success="True" time="0.001" asserts="11" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Write_Capacity_Exceeded" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Write_Count_Negative" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Write_Count_Overflow" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Write_Offset_Negative" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Write_Offset_Overflow" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Write_Stream_Closed" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.Write_Stream_ReadOnly" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.WriteByte" executed="True" success="True" time="0.001" asserts="20" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.WriteByte_Capacity_Exceeded" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.WriteByte_Stream_Closed" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.IO.UnmanagedMemoryStreamTest.WriteByte_Stream_ReadOnly" executed="True" success="True" time="0.001" asserts="3" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="LazyTest" success="True" time="0.021" asserts="0">
                <results>
                  <test-case name="MonoTests.System.LazyTest.Ctor_Null_1" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.LazyTest.Ctor_Null_2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.LazyTest.DefaultCtor" executed="True" success="True" time="0.002" asserts="1" />
                  <test-case name="MonoTests.System.LazyTest.EnsureSingleThreadSafeExecution" executed="True" success="True" time="0.003" asserts="1" />
                  <test-case name="MonoTests.System.LazyTest.InitRecursion" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.LazyTest.IsValueCreated" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.LazyTest.ModeExecutionAndPublication" executed="True" success="True" time="0.003" asserts="3" />
                  <test-case name="MonoTests.System.LazyTest.ModeNone" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.LazyTest.ModePublicationOnly" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.LazyTest.NoDefaultCtor" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.LazyTest.NotThreadSafe" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.LazyTest.Trivial_Lazy" executed="True" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite name="MathTest" success="True" time="0.106" asserts="0">
                <results>
                  <test-case name="MonoTests.System.MathTest.TestAcos" executed="True" success="True" time="0.001" asserts="7" />
                  <test-case name="MonoTests.System.MathTest.TestAsin" executed="True" success="True" time="0.001" asserts="7" />
                  <test-case name="MonoTests.System.MathTest.TestAtan" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.MathTest.TestAtan2" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.MathTest.TestByteMax" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.MathTest.TestByteMin" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.MathTest.TestCeiling" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.MathTest.TestCos" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.MathTest.TestCosh" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.MathTest.TestDecimalAbs" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.MathTest.TestDecimalCeiling" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.MathTest.TestDecimalMax" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.MathTest.TestDecimalMin" executed="True" success="True" time="0.003" asserts="2" />
                  <test-case name="MonoTests.System.MathTest.TestDecimalRound" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.MathTest.TestDecimalRound2" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.MathTest.TestDecimalSign" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.MathTest.TestDecimalTruncate" executed="True" success="True" time="0.001" asserts="7" />
                  <test-case name="MonoTests.System.MathTest.TestDoubleAbs" executed="True" success="True" time="0.000" asserts="7" />
                  <test-case name="MonoTests.System.MathTest.TestDoubleMax" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.MathTest.TestDoubleMin" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.MathTest.TestDoubleRound" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.MathTest.TestDoubleRound2" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.MathTest.TestDoubleRound3" executed="True" success="True" time="0.003" asserts="61" />
                  <test-case name="MonoTests.System.MathTest.TestDoubleSign" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.MathTest.TestDoubleTruncate" executed="True" success="True" time="0.001" asserts="7" />
                  <test-case name="MonoTests.System.MathTest.TestExp" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.MathTest.TestFloatAbs" executed="True" success="True" time="0.001" asserts="7" />
                  <test-case name="MonoTests.System.MathTest.TestFloatMax" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.MathTest.TestFloatMin" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.MathTest.TestFloatSign" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.MathTest.TestFloor" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.MathTest.TestIEEERemainder" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.MathTest.TestIntAbs" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.MathTest.TestIntMax" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.MathTest.TestIntMin" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.MathTest.TestIntSign" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.MathTest.TestLog" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.MathTest.TestLog10" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.MathTest.TestLog2" executed="True" success="True" time="0.001" asserts="11" />
                  <test-case name="MonoTests.System.MathTest.TestLongAbs" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.MathTest.TestLongMax" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.MathTest.TestLongMin" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.MathTest.TestLongSign" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.MathTest.TestPow" executed="True" success="True" time="0.001" asserts="21" />
                  <test-case name="MonoTests.System.MathTest.TestSbyteAbs" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.MathTest.TestSbyteMax" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.MathTest.TestSbyteMin" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.MathTest.TestSbyteSign" executed="True" success="True" time="0.006" asserts="3" />
                  <test-case name="MonoTests.System.MathTest.TestShortAbs" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.MathTest.TestShortMax" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.MathTest.TestShortMin" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.MathTest.TestShortSign" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.MathTest.TestSin" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.MathTest.TestSinh" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.MathTest.TestSqrt" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.MathTest.TestTan" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.MathTest.TestTanh" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.MathTest.TestUintMax" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.MathTest.TestUintMin" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.MathTest.TestUlongMax" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.MathTest.TestUlongMin" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.MathTest.TestUshortMax" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.MathTest.TestUshortMin" executed="True" success="True" time="0.000" asserts="2" />
                </results>
              </test-suite>
              <test-suite name="ModuleHandleTest" success="True" time="0.020" asserts="0">
                <results>
                  <test-case name="MonoTests.System.ModuleHandleTest.ResolveFieldToken" executed="True" success="True" time="0.002" asserts="1" />
                  <test-case name="MonoTests.System.ModuleHandleTest.ResolveFieldTokenInvalidHandle" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ModuleHandleTest.ResolveFieldTokenInvalidToken" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ModuleHandleTest.ResolveFieldTokenInvalidTokenType" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ModuleHandleTest.ResolveFieldTokenInvalidTokenType2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ModuleHandleTest.ResolveFieldTokenInvalidTokenType3" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ModuleHandleTest.ResolveMethodToken" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.ModuleHandleTest.ResolveMethodTokenInvalidHandle" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ModuleHandleTest.ResolveMethodTokenInvalidToken" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ModuleHandleTest.ResolveMethodTokenInvalidTokenType" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ModuleHandleTest.ResolveMethodTokenInvalidTokenType2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ModuleHandleTest.ResolveMethodTokenInvalidTokenType3" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ModuleHandleTest.ResolveTypeToken" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.ModuleHandleTest.ResolveTypeTokenInvalidHandle" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ModuleHandleTest.ResolveTypeTokenInvalidTokenType" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.ModuleHandleTest.ResolveTypeTokenInvalidTokenType2" executed="True" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
              <test-suite name="MulticastDelegateTest" success="True" time="0.004" asserts="0">
                <results>
                  <test-case name="MonoTests.System.MulticastDelegateTest.TestCombineBothDirections" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.MulticastDelegateTest.TestCombineRemove" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.MulticastDelegateTest.TestEquals" executed="True" success="True" time="0.001" asserts="4" />
                </results>
              </test-suite>
              <test-suite name="NullableTest" success="True" time="0.002" asserts="0">
                <results>
                  <test-case name="MonoTests.System.NullableTest.GetUnderlyingType" executed="True" success="True" time="0.001" asserts="2" />
                </results>
              </test-suite>
              <test-suite name="NumberFormatterTest" success="True" time="0.655" asserts="0">
                <results>
                  <test-case name="MonoTests.System.NumberFormatterTest.Test00000" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test00001" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test00002" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test00003" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test00004" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test00005" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test00006" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test00007" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test00008" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test00009" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test00010" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test00011" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test00012" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test00013" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test00014" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test00015" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test00016" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test00017" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test00018" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test00019" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test00020" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test00021" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test00022" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test01000" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test01001" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test01002" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test01003" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test01004" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test01005" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test01006" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test01007" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test01008" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test01009" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test01010" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test01011" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test01012" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test01013" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test01014" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test01015" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test01016" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test01017" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test01018" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test01019" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test01020" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test01021" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test01022" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test01023" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test01024" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test01025" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test01026" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test01027" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test01028" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test02000" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test02001" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test02002" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test02003" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test02004" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test02005" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test02006" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test02007" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test02008" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test02009" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test02010" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test02011" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test02012" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test02013" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test02014" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test02015" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test02016" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test02017" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test02018" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test02019" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test02020" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test02021" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test02022" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test02023" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test02024" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test02025" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test02026" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test02027" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test03000" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test03001" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test03002" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test03003" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test03004" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test03005" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test03006" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test03007" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test03008" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test03009" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test03010" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test03011" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test03012" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test03013" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test03014" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test03015" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test03016" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test03017" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test03018" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test03019" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test03020" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test03021" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test03022" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test03023" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test03024" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test03025" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test03026" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test03027" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test04000" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test04001" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test04002" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test04003" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test04004" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test04005" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test04006" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test04007" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test04008" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test04009" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test04010" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test04011" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test04012" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test04013" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test04014" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test04015" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test04016" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test04017" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test04018" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test04019" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test04020" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test04021" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test04022" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test04023" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test04024" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test04025" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test04026" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test04027" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test04028" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test04029" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test04030" executed="True" success="True" time="0.001" asserts="8" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test04031" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test05000" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test05001" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test05002" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test05003" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test05004" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test05005" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test05006" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test05007" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test05008" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test05009" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test05010" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test05011" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test05012" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test05013" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test05014" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test05015" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test05016" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test05017" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test05018" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test05019" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test05020" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test05021" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test05022" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test05023" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test05024" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test05025" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test05026" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test05027" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test05028" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test05029" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test05030" executed="True" success="True" time="0.005" asserts="8" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test05031" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test05032" executed="True" success="True" time="0.002" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test05033" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test05034" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test05035" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test05036" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test05037" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test06000" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test07000" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test07001" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test07002" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test07003" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test07004" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test07005" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test07006" executed="True" success="True" time="0.004" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test07007" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test07008" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test07009" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test07010" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test07011" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test07012" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test07013" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test07014" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test07015" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test07016" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test07017" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test07018" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test07019" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test07020" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test07021" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test07022" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08000" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08001" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08002" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08003" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08004" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08005" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08006" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08007" executed="True" success="True" time="0.002" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08008" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08009" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08010" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08011" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08012" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08013" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08014" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08015" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08016" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08017" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08018" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08019" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08020" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08021" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08022" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08023" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08024" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08025" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08026" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08027" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08028" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08029" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08030" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08031" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08032" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08033" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08034" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08035" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08036" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08037" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08038" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08039" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08040" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08041" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08042" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08043" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08044" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08045" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08046" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08047" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08048" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08049" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08050" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08051" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08052" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08053" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08054" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08055" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08056" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08057" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08058" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08059" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08060" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08061" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08062" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08063" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08064" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08065" executed="True" success="True" time="0.002" asserts="4" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08066" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08067" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08068" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08069" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08070" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08071" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08072" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08073" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08074" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08075" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08076" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08077" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08078" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08079" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08080" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08081" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08082" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08083" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08084" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08085" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08086" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08087" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08088" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08089" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08090" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test08091" executed="True" success="True" time="0.004" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test10000" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test11000" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test11001" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test11002" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test11003" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test11004" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test11005" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test11006" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test11007" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test11008" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test11009" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test11010" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test11011" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test11012" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test11013" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test11014" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test11015" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test11016" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test11017" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test11018" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test11019" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test11020" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test11021" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test11022" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test11023" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test11024" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test11025" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test11026" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test11027" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test11028" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test11029" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test11030" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test11031" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test11032" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test12000" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test12001" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test12002" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test12003" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test12004" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test12005" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test12006" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test12007" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test12008" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test12009" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test12010" executed="True" success="True" time="0.004" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test12011" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test12012" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test12013" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test12014" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test12015" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test12016" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test12017" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test12018" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test12019" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test12020" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test12021" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test12022" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test12023" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test12024" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test12025" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test12026" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test12027" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test12028" executed="True" success="True" time="0.001" asserts="7" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test12029" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test12030" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test12031" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test13000" executed="True" success="True" time="0.001" asserts="7" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test13001" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test13002" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test13003" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test13004" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test13005" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test13006" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test13007" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test13008" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test13009" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test13010" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test13011" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test13012" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test13013" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test13014" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test13015" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test13016" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test13017" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test13018" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test13019" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test13020" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test13021" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test13022" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test13023" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test13024" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test13024_CarryPropagation" executed="True" success="True" time="0.001" asserts="17" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test13025" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test13026" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test13027" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test13028" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test13029" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test13030" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test13031" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test13032" executed="True" success="True" time="0.004" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test13033" executed="True" success="True" time="0.001" asserts="7" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test14000" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test14001" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test14002" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test14003" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test14004" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test14005" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test14006" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test14007" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test14008" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test14009" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test14010" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test14011" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test14012" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test14013" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test14014" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test14015" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test14016" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test14017" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test14018" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test14019" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test14020" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test14021" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test14022" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test14023" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test14024" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test14025" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test14026" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test14027" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test14028" executed="True" success="True" time="0.000" asserts="7" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test14029" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test14030" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test14031" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test14032" description="Bug #659061" executed="True" success="True" time="0.001" asserts="8" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test14033" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test15000" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test15001" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test15002" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test15003" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test15004" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test15005" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test15006" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test15007" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test15008" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test15009" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test15010" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test15011" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test15012" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test15013" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test15014" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test15015" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test15016" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test15017" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test15018" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test15019" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test15020" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test15021" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test15022" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test15023" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test15024" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test15025" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test15026" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test15027" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test15028" executed="True" success="True" time="0.001" asserts="7" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test15029" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test15030" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test15031" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test17000" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.NumberFormatterTest.Test18000" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.NumberFormatterTest.TestInvariantThreading" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.NumberFormatterTest.TestNaNToString" executed="True" success="True" time="0.001" asserts="12" />
                  <test-case name="MonoTests.System.NumberFormatterTest.TestRoundtrip" executed="True" success="True" time="0.001" asserts="11" />
                  <test-case name="MonoTests.System.NumberFormatterTest.TestToStringOverflow" executed="True" success="True" time="0.043" asserts="4096" />
                </results>
              </test-suite>
              <test-suite name="ObjectTest" success="True" time="0.009" asserts="0">
                <results>
                  <test-case name="MonoTests.System.ObjectTest.TestCtor" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.ObjectTest.TestEquals1" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.ObjectTest.TestEquals2" executed="True" success="True" time="0.001" asserts="7" />
                  <test-case name="MonoTests.System.ObjectTest.TestGetHashCode" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.ObjectTest.TestGetType" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.ObjectTest.TestReferenceEquals" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.ObjectTest.TestToString" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.ObjectTest.TestToStringOnGenericInstances" executed="True" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite name="ObsoleteAttributeTest" success="True" time="0.007" asserts="0">
                <results>
                  <test-case name="MonoTests.System.ObsoleteAttributeTest.Constructor" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.ObsoleteAttributeTest.ConstructorMessage" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.ObsoleteAttributeTest.ConstructorMessage_Empty" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.ObsoleteAttributeTest.ConstructorMessage_Null" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.ObsoleteAttributeTest.ConstructorMessageBoolFalse" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.ObsoleteAttributeTest.ConstructorMessageBoolTrue" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.ObsoleteAttributeTest.Type" executed="True" success="True" time="0.001" asserts="3" />
                </results>
              </test-suite>
              <test-suite name="ParamAttributeTest" success="True" time="0.015" asserts="0">
                <results>
                  <test-case name="MonoTests.System.ParamAttributeTest.GetAllCustomAttributes" executed="True" success="True" time="0.003" asserts="4" />
                  <test-case name="MonoTests.System.ParamAttributeTest.GetCustomAttributeHierarchy" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.ParamAttributeTest.GetCustomAttributeHierarchyMultiple" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.ParamAttributeTest.GetCustomAttributesOnEventOverride" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.ParamAttributeTest.GetCustomAttributesOnMethodOverride" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.ParamAttributeTest.GetCustomAttributeTopLevel" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.ParamAttributeTest.GetDataCustomAttributes" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.ParamAttributeTest.IsDefinedHierarchy" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.ParamAttributeTest.IsDefinedHierarchyMultiple" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.ParamAttributeTest.IsDefinedTopLevel" executed="True" success="True" time="0.000" asserts="2" />
                </results>
              </test-suite>
              <test-suite name="RandomTest" success="True" time="0.058" asserts="0">
                <results>
                  <test-case name="MonoTests.System.RandomTest.Base_Double" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.RandomTest.Base_Int" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.RandomTest.CompareStreamWithSameSeed" executed="True" success="True" time="0.001" asserts="20" />
                  <test-case name="MonoTests.System.RandomTest.JKISS" executed="True" success="True" time="0.049" asserts="64" />
                  <test-case name="MonoTests.System.RandomTest.Next" executed="True" success="True" time="0.000" asserts="20" />
                  <test-case name="MonoTests.System.RandomTest.NextMax" executed="True" success="True" time="0.000" asserts="20" />
                  <test-case name="MonoTests.System.RandomTest.NextMinMax" executed="True" success="True" time="0.001" asserts="126" />
                  <test-case name="MonoTests.System.RandomTest.NextZero" executed="True" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite name="Reflection" success="True" time="4.758" asserts="0">
                <results>
                  <test-suite name="AssemblyAlgorithmIdAttributeTest" success="True" time="0.005" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Reflection.AssemblyAlgorithmIdAttributeTest.AlgorithmIdTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyAlgorithmIdAttributeTest.MatchTestForFalse" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyAlgorithmIdAttributeTest.MatchTestForTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyAlgorithmIdAttributeTest.TypeIdTest" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="AssemblyConfigurationAttributeTest" success="True" time="0.005" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Reflection.AssemblyConfigurationAttributeTest.ConfigurationTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyConfigurationAttributeTest.MatchTestForFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyConfigurationAttributeTest.MatchTestForTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyConfigurationAttributeTest.TypeIdTest" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="AssemblyCopyrightAttributeTest" success="True" time="0.004" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Reflection.AssemblyCopyrightAttributeTest.CopyrightTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyCopyrightAttributeTest.MatchTestForFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyCopyrightAttributeTest.MatchTestForTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyCopyrightAttributeTest.TypeIdTest" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="AssemblyCultureAttributeTest" success="True" time="0.004" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Reflection.AssemblyCultureAttributeTest.CultureTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyCultureAttributeTest.MatchTestForFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyCultureAttributeTest.MatchTestForTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyCultureAttributeTest.TypeIdTest" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="AssemblyDelaySignAttributeTest" success="True" time="0.004" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Reflection.AssemblyDelaySignAttributeTest.DelaySignTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyDelaySignAttributeTest.MatchTestForFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyDelaySignAttributeTest.MatchTestForTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyDelaySignAttributeTest.TypeIdTest" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="AssemblyDescriptionAttributeTest" success="True" time="0.005" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Reflection.AssemblyDescriptionAttributeTest.DescriptionTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyDescriptionAttributeTest.MatchTestForFalse" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyDescriptionAttributeTest.MatchTestForTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyDescriptionAttributeTest.TypeIdTest" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="AssemblyFileVersionAttributeTest" success="True" time="0.006" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Reflection.AssemblyFileVersionAttributeTest.ArgumentNullExceptionTest" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.AssemblyFileVersionAttributeTest.FileVersionTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyFileVersionAttributeTest.MatchTestForFalse" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyFileVersionAttributeTest.MatchTestForTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyFileVersionAttributeTest.TypeIdTest" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="AssemblyInformationalVersionAttributeTest" success="True" time="0.005" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Reflection.AssemblyInformationalVersionAttributeTest.InformationalVersionTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyInformationalVersionAttributeTest.MatchTestForFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyInformationalVersionAttributeTest.MatchTestForTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyInformationalVersionAttributeTest.TypeIdTest" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="AssemblyNameTest" success="True" time="0.141" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.Clone_Corlib" executed="True" success="True" time="0.002" asserts="13" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.Clone_Empty" executed="True" success="True" time="0.001" asserts="11" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.Clone_Self" executed="True" success="True" time="0.002" asserts="14" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.Constructor0" executed="True" success="True" time="0.001" asserts="14" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.Constructor1_AssemblyName_Empty" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.Constructor1_AssemblyName_Invalid" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.Constructor1_AssemblyName_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.Constructor1_Culture" executed="True" success="True" time="0.001" asserts="14" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.Constructor1_Culture_Incomplete" executed="True" success="True" time="0.002" asserts="4" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.Constructor1_Culture_NotSupported" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.Constructor1_Full" executed="True" success="True" time="0.002" asserts="14">
                        <categories>
                          <category name="TargetJvmNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.Constructor1_Name" executed="True" success="True" time="0.001" asserts="16" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.Constructor1_ProcessorArchitecture" executed="True" success="True" time="0.001" asserts="17" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.Constructor1_ProcessorArchitecture_Incomplete" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.Constructor1_ProcessorArchitecture_Invalid" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.Constructor1_PublicKey_Incomplete" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.Constructor1_PublicKey_Invalid" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.Constructor1_PublicKey_Mono" executed="True" success="True" time="0.002" asserts="14">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.Constructor1_PublicKeyToken" executed="True" success="True" time="0.002" asserts="27" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.Constructor1_PublicKeyToken_Incomplete" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.Constructor1_PublicKeyToken_Invalid" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.Constructor1_Retargetable" executed="True" success="True" time="0.005" asserts="62" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.Constructor1_Retargetable_Incomplete" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.Constructor1_Retargetable_Invalid" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.Constructor1_Version" executed="True" success="True" time="0.001" asserts="14">
                        <categories>
                          <category name="TargetJvmNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.Constructor1_Version_Incomplete" executed="True" success="True" time="0.007" asserts="4" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.Constructor1_Version_Invalid" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.Flags_Corlib" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.Flags_Self" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.FullName_Corlib" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.FullName_Culture" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.FullName_CulturePublicKey" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.FullName_Flags" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.FullName_Name" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.FullName_PublicKey" executed="True" success="True" time="0.003" asserts="16" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.FullName_PublicKey_KeyPair" executed="True" success="True" time="0.002" asserts="12" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.FullName_PublicKeyToken" executed="True" success="True" time="0.002" asserts="18" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.FullName_Self" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.FullName_Version" executed="True" success="True" time="0.006" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.FullName_VersionCulture" executed="True" success="True" time="0.002" asserts="3" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.FullName_VersionPublicKey" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.GetAssemblyName_AssemblyFile_BadImage" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.GetAssemblyName_AssemblyFile_DoesNotExist" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.GetAssemblyName_CodeBase" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.GetObjectData_Info_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.GetPublicGetToken_Ecma" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.GetPublicKeyToken" executed="True" success="True" time="0.002" asserts="16" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.GetPublicKeyToken_Corlib" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.GetPublicKeyToken_Self" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.HashAlgorithm" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.KeyPair" executed="True" success="True" time="0.001" asserts="10" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.ReferenceMatchesDefinition_Compares_Only_SimpleName" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.Self" executed="True" success="True" time="0.001" asserts="10" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.Serialization" executed="True" success="True" time="0.005" asserts="12" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.Serialization_WithoutStrongName" executed="True" success="True" time="0.002" asserts="12" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.SetPublicKey" executed="True" success="True" time="0.004" asserts="44" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.SetPublicKey_PublicKey_Invalid" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.SetPublicKeyToken" executed="True" success="True" time="0.001" asserts="13" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.TestCultureInfo" executed="True" success="True" time="0.005" asserts="45" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.Version" executed="True" success="True" time="0.003" asserts="3" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.Version_Dynamic" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Reflection.AssemblyNameTest.WhiteSpaceInKeyValue" description="Xamarin bug #99 - whitespaces in key=value" executed="True" success="True" time="0.001" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="AssemblyTest" success="True" time="1.134" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Reflection.AssemblyTest.bug328812" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Reflection.AssemblyTest.bug78465" executed="True" success="True" time="0.342" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyTest.bug78468" executed="True" success="True" time="0.337" asserts="8" />
                      <test-case name="MonoTests.System.Reflection.AssemblyTest.bug79872" executed="True" success="True" time="0.002" asserts="2" />
                      <test-case name="MonoTests.System.Reflection.AssemblyTest.Corlib_test" executed="True" success="True" time="0.002" asserts="8" />
                      <test-case name="MonoTests.System.Reflection.AssemblyTest.CreateInstance" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Reflection.AssemblyTest.CreateInstanceOnRefOnly" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.AssemblyTest.CreateInvalidInstance" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyTest.DefinedTypes_Equality" executed="True" success="True" time="0.009" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyTest.GetAssembly" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Reflection.AssemblyTest.GetCustomAttributes_AttributeType_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Reflection.AssemblyTest.GetEntryAssembly" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Reflection.AssemblyTest.GetFile_Empty" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="TargetJvmNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Reflection.AssemblyTest.GetFile_Null" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="TargetJvmNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Reflection.AssemblyTest.GetFiles_False" executed="True" success="True" time="0.002" asserts="2">
                        <categories>
                          <category name="TargetJvmNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Reflection.AssemblyTest.GetFiles_True" executed="True" success="True" time="0.001" asserts="2">
                        <categories>
                          <category name="TargetJvmNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Reflection.AssemblyTest.GetManifestResourceStream_Name_Empty" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Reflection.AssemblyTest.GetManifestResourceStream_Name_Null" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Reflection.AssemblyTest.GetModules_MissingFile" executed="True" success="True" time="0.018" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyTest.GetObjectData_Info_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Reflection.AssemblyTest.GetReferencedAssemblies" executed="True" success="True" time="0.001" asserts="40" />
                      <test-case name="MonoTests.System.Reflection.AssemblyTest.GetType_TypeName_AssemblyName" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Reflection.AssemblyTest.GetTypeWithEmptyStringShouldThrow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.AssemblyTest.IsDefined_AttributeType_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Reflection.AssemblyTest.Load_PartialVersion" executed="True" success="True" time="0.324" asserts="6" />
                      <test-case name="MonoTests.System.Reflection.AssemblyTest.LoadFrom_Empty_Assembly" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyTest.LoadFrom_Invalid_Assembly" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyTest.LoadFrom_NonExisting_Assembly" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyTest.LoadWithPartialName" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.AssemblyTest.Location_Empty" executed="True" success="True" time="0.057" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.AssemblyTest.ManifestModule" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Reflection.AssemblyTest.ReflectionOnlyLoadFrom" executed="True" success="True" time="0.001" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="BinderTest" success="True" time="0.058" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Reflection.BinderTest.AmbiguousProperty1" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.ArgNullOnMethod" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.ArgNullOnProperty" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.BindToMethod_ByRef" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.BindToMethodNamedArgs" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.BindToMethodNamedArgs_2" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.Bug324998Bad" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.Bug324998Good" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.ChangeType" executed="True" success="True" time="0.002" asserts="2" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.ChangeTypeOnDefaultBinder" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.CustomMethodType" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.DefaultParameter" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.GetMethodAmbiguity" executed="True" success="True" time="0.002" asserts="6" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.GetMethodAvoidAmbiguity2" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.GetMethodAvoidAmbiguity3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.NullableArg" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.ParamsArrayTestCast" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.Select1Match" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.Select1Match2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.SelectAndInvokeAllProperties1" executed="True" success="True" time="0.002" asserts="5" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.SelectAndInvokeAllProperties2" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.SelectMethod_ByRef" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.SelectMethodWithExactAndAmbiguousMethods" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.SelectMethodWithGmdAmbiguity" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.SelectPropertyTestEmpty" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.SelectPropertyTestNull1" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.TestBindingFlagsA" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.TestBindingFlagsB" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.TestBindingFlagsExactBindingA" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.TestBindingFlagsExactBindingB" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.TestBindingFlagsExactBindingC" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.TestCustomBinderNonNullArgs" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.TestEnumConversion" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.TestEnumConversion2" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.TestExactBinding" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.TestParamsAttribute" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.TestParamsAttribute_1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.TestParamsAttribute_2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.TestTargetParameterCountExceptionA" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.BinderTest.TestTargetParameterCountExceptionB" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="ConstructorInfoTest" success="True" time="0.012" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Reflection.ConstructorInfoTest.Invoke" executed="True" success="True" time="0.005" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.ConstructorInfoTest.InvokeAbstract" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Reflection.ConstructorInfoTest.InvokeOpenGenericType" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.ConstructorInfoTest.InvokeOptionalArguments" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.ConstructorInfoTest.InvokeWithNullTarget" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.ConstructorInfoTest.InvokeWithWrongTarget" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="CustomAttributeDataTest" success="True" time="0.006" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Reflection.CustomAttributeDataTest.Arrays" executed="True" success="True" time="0.006" asserts="7">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                    </results>
                  </test-suite>
                  <test-suite name="Emit" success="True" time="2.934" asserts="0">
                    <results>
                      <test-suite name="ArrayTypeTest" success="True" time="0.060" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Reflection.Emit.ArrayTypeTest.ArrayAsGenericArgumentOfNonSreType" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.ArrayTypeTest.AsLocalVariable" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.ArrayTypeTest.AsParamType" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.ArrayTypeTest.AsReturnType" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.ArrayTypeTest.AttributeValues" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.ArrayTypeTest.GenericParameterAttributes" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.ArrayTypeTest.GenericParameterPosition" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.ArrayTypeTest.GenericTypeMembers" executed="True" success="True" time="0.002" asserts="5" />
                          <test-case name="MonoTests.System.Reflection.Emit.ArrayTypeTest.GenericTypeMembersOfEnum" executed="True" success="True" time="0.008" asserts="16" />
                          <test-case name="MonoTests.System.Reflection.Emit.ArrayTypeTest.GenericTypeMembersOfGenericTypeParam" executed="True" success="True" time="0.002" asserts="16" />
                          <test-case name="MonoTests.System.Reflection.Emit.ArrayTypeTest.GetArrayRank" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.ArrayTypeTest.GetGenericParameterConstraints" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.ArrayTypeTest.GetInterfaceMap" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.ArrayTypeTest.IsAssignableFrom" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.ArrayTypeTest.IsGenericType" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.ArrayTypeTest.IsGenericTypeDefinition" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.ArrayTypeTest.IsInstanceOfType" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.ArrayTypeTest.IsSubclassOf" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.ArrayTypeTest.MakeArrayType" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.ArrayTypeTest.MakeByRefType" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.ArrayTypeTest.MakeGenericType" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.ArrayTypeTest.MakePointerType" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.ArrayTypeTest.Methods" executed="True" success="True" time="0.003" asserts="8" />
                          <test-case name="MonoTests.System.Reflection.Emit.ArrayTypeTest.OneDimMultiDimentionArray" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Reflection.Emit.ArrayTypeTest.PropertiesValue" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Reflection.Emit.ArrayTypeTest.StructLayoutAttribute" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.ArrayTypeTest.TestEquals" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="AssemblyBuilderAccessTest" success="True" time="0.003" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderAccessTest.RunAndSaveTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderAccessTest.RunTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderAccessTest.SaveTest" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="AssemblyBuilderTest" success="True" time="1.251" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.AssemblyName_Culture" executed="True" success="True" time="0.252" asserts="6" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.AssemblyName_MoreCultureInfo" executed="True" success="True" time="0.010" asserts="11" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.AssemblyName_NoVersion" executed="True" success="True" time="0.241" asserts="6" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.AssemblyName_PublicKey" executed="True" success="True" time="0.010" asserts="13" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.AssemblyName_Version" executed="True" success="True" time="0.487" asserts="12" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.CannotCreateInstanceOfSaveOnlyAssembly" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.DynamicAssemblyGenerationInCurrentDomainShouldNotChangeTheOrderOfCurrentDomainGetAssemblies" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.GetLoadedModules" executed="True" success="True" time="0.002" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.GetModule" executed="True" success="True" time="0.002" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.GetModules" executed="True" success="True" time="0.002" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.GetModules2" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.GetReferencedAssemblies_Trivial" executed="True" success="True" time="0.001" asserts="1">
                            <categories>
                              <category name="NotDotNet" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.GetType_IgnoreCase" executed="True" success="True" time="0.002" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.GetTypes" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.GetTypesWithUnfinishedTypeBuilder" executed="True" success="True" time="0.002" asserts="7" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.SaveUnfinishedTypes" executed="True" success="True" time="0.002" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.StrongName_KeyFile_Delay" executed="True" success="True" time="0.003" asserts="7" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.StrongName_MissingKeyFile_NoDelay" executed="True" success="True" time="0.002" asserts="7" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.StrongName_WithoutAttributes" executed="True" success="True" time="0.011" asserts="7" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestAddResourceFile" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestAddResourceFile_FileName_DoesNotExist" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestAddResourceFile_FileName_Duplicate" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestAddResourceFile_Filename_Empty" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestAddResourceFile_Filename_IncludesPath" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestAddResourceFile_Filename_Null" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestAddResourceFile_Name_Duplicate" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestAddResourceFile_Name_Empty" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestAddResourceFile_Name_Null" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestCodeBase" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestDefineDynamicModule" executed="True" success="True" time="0.007" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestDefineDynamicModule_Access_Run" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestDefineDynamicModule_Assembly_Saved" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestDefineDynamicModule_FileName_Duplicate" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestDefineDynamicModule_Filename_Empty" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestDefineDynamicModule_Filename_IncludesPath" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestDefineDynamicModule_FileName_Null" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestDefineDynamicModule_Name_Duplicate" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestDefineDynamicModule_Name_Empty" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestDefineDynamicModule_Name_Null" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestDefineDynamicModule5_FileName_NoExtension" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestDefineResource" executed="True" success="True" time="0.008" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestDefineUnmanagedResource1_Resource_Null" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestDefineUnmanagedResource2_ResourceAlreadyDefined" executed="True" success="True" time="0.004" asserts="16" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestDefineUnmanagedResource2_ResourceFile_DoesNotExist" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestDefineUnmanagedResource2_ResourceFileName_Empty" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestDefineUnmanagedResource2_ResourceFileName_Null" executed="True" success="True" time="0.002" asserts="5" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestDefineVersionInfoResource1_Culture_NotSupported" executed="True" success="True" time="0.005" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestDefineVersionInfoResource1_ResourceAlreadyDefined" executed="True" success="True" time="0.002" asserts="16" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestDefineVersionInfoResource2_Culture_NotSupported" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestDefineVersionInfoResource2_ResourceAlreadyDefined" executed="True" success="True" time="0.002" asserts="16" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestEntryPoint" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestGetDynamicModule_Name_Empty" executed="True" success="True" time="0.002" asserts="5" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestGetDynamicModule_Name_Null" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestGetDynamicModule3" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestGetExportedTypes" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestGetFile" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestGetFiles1" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestGetFiles2" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestGetManifestResourceInfo" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestGetManifestResourceNames" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestGetManifestResourceStream1" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestGetManifestResourceStream2" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestGetType" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestImageRuntimeVersion" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestIsDefined" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestLocation" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestSetCustomAttribute1" executed="True" success="True" time="0.062" asserts="38" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestSetCustomAttribute1_CustomBuilder_Null" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestSetCustomAttribute2_BinaryAttribute_Null" executed="True" success="True" time="0.002" asserts="5" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestSetCustomAttribute2_ConstructorInfo_Null" executed="True" success="True" time="0.006" asserts="5" />
                          <test-case name="MonoTests.System.Reflection.Emit.AssemblyBuilderTest.TestSetEntryPoint" executed="True" success="True" time="0.002" asserts="5" />
                        </results>
                      </test-suite>
                      <test-suite name="ByrefTypeTest" success="True" time="0.036" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Reflection.Emit.ByrefTypeTest.AsLocalVariable" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.ByrefTypeTest.AsParamType" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.ByrefTypeTest.AttributeValues" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.ByrefTypeTest.ByRefOfGenericTypeParameter" executed="True" success="True" time="0.002" asserts="16" />
                          <test-case name="MonoTests.System.Reflection.Emit.ByrefTypeTest.GenericParameterAttributes" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.ByrefTypeTest.GenericParameterPosition" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.ByrefTypeTest.GetGenericParameterConstraints" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.ByrefTypeTest.GetInterfaceMap" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.ByrefTypeTest.IsAssignableFrom" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.ByrefTypeTest.IsGenericType" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.ByrefTypeTest.IsGenericTypeDefinition" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.ByrefTypeTest.IsInstanceOfType" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.ByrefTypeTest.IsSubclassOf" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.ByrefTypeTest.MakeArrayType" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.ByrefTypeTest.MakeByRefType" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.ByrefTypeTest.MakeGenericType" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.ByrefTypeTest.MakePointerType" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.ByrefTypeTest.Methods" executed="True" success="True" time="0.002" asserts="8" />
                          <test-case name="MonoTests.System.Reflection.Emit.ByrefTypeTest.PropertiesValue" executed="True" success="True" time="0.002" asserts="7" />
                          <test-case name="MonoTests.System.Reflection.Emit.ByrefTypeTest.StructLayoutAttribute" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.ByrefTypeTest.TestEquals" executed="True" success="True" time="0.001" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="ConstructorBuilderTest" success="True" time="0.075" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorBuilderTest.AddDeclarativeSecurity_Action_Duplicate" executed="True" success="True" time="0.003" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorBuilderTest.AddDeclarativeSecurity_Action_Invalid" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorBuilderTest.AddDeclarativeSecurity_Complete" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorBuilderTest.AddDeclarativeSecurity_PSet_Null" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorBuilderTest.Attributes" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorBuilderTest.CallingConvention" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorBuilderTest.DeclaringType" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorBuilderTest.DefineParameter" executed="True" success="True" time="0.002" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorBuilderTest.DefineParameter_Position_Max" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorBuilderTest.DefineParameter_Position_Negative" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorBuilderTest.DefineParameter_Position_Zero" executed="True" success="True" time="0.001" asserts="5">
                            <categories>
                              <category name="NotDotNet" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorBuilderTest.GetCustomAttributes_Emitted" executed="True" success="True" time="0.002" asserts="6" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorBuilderTest.GetCustomAttributes1" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorBuilderTest.GetCustomAttributes1_Complete" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorBuilderTest.GetCustomAttributes1_Incomplete" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorBuilderTest.GetCustomAttributes2" executed="True" success="True" time="0.008" asserts="6" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorBuilderTest.GetCustomAttributes2_Complete" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorBuilderTest.GetCustomAttributes2_Incomplete" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorBuilderTest.GetModule" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorBuilderTest.GetParameters_Complete1" executed="True" success="True" time="0.002" asserts="14" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorBuilderTest.GetParameters_Complete2" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorBuilderTest.GetParameters_Incomplete" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorBuilderTest.GetToken" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorBuilderTest.InitLocals" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorBuilderTest.Invoke1" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorBuilderTest.Invoke2" executed="True" success="True" time="0.002" asserts="6" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorBuilderTest.Invoke3" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorBuilderTest.Invoke4" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorBuilderTest.IsDefined" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorBuilderTest.MethodHandle" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorBuilderTest.Name" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorBuilderTest.ReturnType" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorBuilderTest.SetCustomAttribute1" executed="True" success="True" time="0.002" asserts="8" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorBuilderTest.SetCustomAttribute2" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorBuilderTest.SetCustomAttribute2_CustomBuilder_Null" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorBuilderTest.TestMethodImplementationFlags" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorBuilderTest.TestReflectedType" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="ConstructorOnTypeBuilderInstTest" success="True" time="0.051" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorOnTypeBuilderInstTest.ContainsGenericParameters" executed="True" success="True" time="0.005" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorOnTypeBuilderInstTest.DeclaringType" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorOnTypeBuilderInstTest.GetCustomAttributes1" executed="True" success="True" time="0.002" asserts="6" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorOnTypeBuilderInstTest.GetCustomAttributes2" executed="True" success="True" time="0.002" asserts="6" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorOnTypeBuilderInstTest.GetGenericArguments" executed="True" success="True" time="0.002" asserts="6" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorOnTypeBuilderInstTest.GetMethodImplementationFlags" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorOnTypeBuilderInstTest.GetParameters" executed="True" success="True" time="0.003" asserts="13" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorOnTypeBuilderInstTest.Invoke1" executed="True" success="True" time="0.002" asserts="6" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorOnTypeBuilderInstTest.Invoke2" executed="True" success="True" time="0.002" asserts="6" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorOnTypeBuilderInstTest.Invoke3" executed="True" success="True" time="0.002" asserts="6" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorOnTypeBuilderInstTest.Invoke4" executed="True" success="True" time="0.002" asserts="6" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorOnTypeBuilderInstTest.IsDefined" executed="True" success="True" time="0.002" asserts="6" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorOnTypeBuilderInstTest.IsGenericMethod" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorOnTypeBuilderInstTest.IsGenericMethodDefinition" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorOnTypeBuilderInstTest.MemberType" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorOnTypeBuilderInstTest.MethodHandle" executed="True" success="True" time="0.002" asserts="6" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorOnTypeBuilderInstTest.Module" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorOnTypeBuilderInstTest.Name" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.ConstructorOnTypeBuilderInstTest.ReflectedType" executed="True" success="True" time="0.001" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="CustomAttributeBuilderTest" success="True" time="0.041" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Reflection.Emit.CustomAttributeBuilderTest.ArgumentExceptionTest_1" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.CustomAttributeBuilderTest.ArgumentExceptionTest_10" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.CustomAttributeBuilderTest.ArgumentExceptionTest_11" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.CustomAttributeBuilderTest.ArgumentExceptionTest_2" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.CustomAttributeBuilderTest.ArgumentExceptionTest_3" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.CustomAttributeBuilderTest.ArgumentExceptionTest_4" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.CustomAttributeBuilderTest.ArgumentExceptionTest_6" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.CustomAttributeBuilderTest.ArgumentExceptionTest_7" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.CustomAttributeBuilderTest.ArgumentExceptionTest_8" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.CustomAttributeBuilderTest.ArgumentExceptionTest_9" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.CustomAttributeBuilderTest.ArgumentNullException_1" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.CustomAttributeBuilderTest.ArgumentNullException_2" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.CustomAttributeBuilderTest.ArgumentNullException_3" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.CustomAttributeBuilderTest.CtorFourTest" executed="True" success="True" time="0.003" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.CustomAttributeBuilderTest.CtorOneTest" executed="True" success="True" time="0.006" asserts="6" />
                          <test-case name="MonoTests.System.Reflection.Emit.CustomAttributeBuilderTest.CtorThreeTest" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.CustomAttributeBuilderTest.CtorTwoTest" executed="True" success="True" time="0.002" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.CustomAttributeBuilderTest.JaggedArrays" executed="True" success="True" time="0.004" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.CustomAttributeBuilderTest.ObjectParam_UserDefinedClass" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.CustomAttributeBuilderTest.ValueTypeArrayParam_Null" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.CustomAttributeBuilderTest.ValueTypeParam_Null" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="DynamicILInfoTest" success="True" time="0.012" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Reflection.Emit.DynamicILInfoTest.GetDynamicILInfo_Unique" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.DynamicILInfoTest.GetDynamicMethod" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.DynamicILInfoTest.GetTokenFor_Constructor" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.DynamicILInfoTest.GetTokenFor_DynamicMethod" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.DynamicILInfoTest.GetTokenFor_FieldInfo" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.DynamicILInfoTest.GetTokenFor_Method" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.DynamicILInfoTest.GetTokenFor_String" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.DynamicILInfoTest.GetTokenFor_Type" executed="True" success="True" time="0.001" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="DynamicMethodTest" success="True" time="0.030" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Reflection.Emit.DynamicMethodTest.AnonHosted" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.DynamicMethodTest.Circular_Refs" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.DynamicMethodTest.ConstrainedPrexixDoesntCrash" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.DynamicMethodTest.Constructor1_Name_Null" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.DynamicMethodTest.Constructor2_Name_Null" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.DynamicMethodTest.Constructor3_Name_Null" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.DynamicMethodTest.Constructor4_Name_Null" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.DynamicMethodTest.Constructor5_Name_Null" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.DynamicMethodTest.Constructor6_Name_Null" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.DynamicMethodTest.DynamicMethodReference" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.DynamicMethodTest.EmptyMethodBody" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.DynamicMethodTest.GetCurrentMethodWorksWithDynamicMethods" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.DynamicMethodTest.GetMethodBody" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.DynamicMethodTest.Module_GetMethod" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.DynamicMethodTest.Name_Empty" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.DynamicMethodTest.OwnerCantBeArray" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.DynamicMethodTest.OwnerCantBeInterface" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.DynamicMethodTest.ReturnType_Null" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.DynamicMethodTest.SkipVisibility" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.DynamicMethodTest.TestOwnerMemberAccess" executed="True" success="True" time="0.000" asserts="1">
                            <categories>
                              <category name="NotDotNet" />
                            </categories>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite name="EnumBuilderTest" success="True" time="0.027" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Reflection.Emit.EnumBuilderTest.GetEnumUnderlyingType" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.EnumBuilderTest.TestDefineLiteralTypeComplete" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.EnumBuilderTest.TestDefineLiteralTypeIncomplete" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Reflection.Emit.EnumBuilderTest.TestEnumBuilder" executed="True" success="True" time="0.004" asserts="43" />
                          <test-case name="MonoTests.System.Reflection.Emit.EnumBuilderTest.TestEnumBuilderGUIDIncomplete" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.EnumBuilderTest.TestEnumType" executed="True" success="True" time="0.001" asserts="38" />
                          <test-case name="MonoTests.System.Reflection.Emit.EnumBuilderTest.TestEnumTypeGUID" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.EnumBuilderTest.TestFieldProperties" executed="True" success="True" time="0.001" asserts="11" />
                          <test-case name="MonoTests.System.Reflection.Emit.EnumBuilderTest.TestFindInterfaces" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.EnumBuilderTest.TestFindMembersComplete" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.EnumBuilderTest.TestGetConstructorComplete" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.EnumBuilderTest.TestGetConstructorNullTypes" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.EnumBuilderTest.TestGetConstructorsComplete" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.EnumBuilderTest.TestHasElementTypeEnumBuilderComplete" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.EnumBuilderTest.TestIsValue__SpecialName" executed="True" success="True" time="0.001" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="EventBuilderTest" success="True" time="0.025" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Reflection.Emit.EventBuilderTest.TestAddOtherMethod1" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.EventBuilderTest.TestAddOtherMethod2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.EventBuilderTest.TestCreation" executed="True" success="True" time="0.003" asserts="19" />
                          <test-case name="MonoTests.System.Reflection.Emit.EventBuilderTest.TestSetAddOnMethod1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.EventBuilderTest.TestSetAddOnMethod2" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.EventBuilderTest.TestSetCustomAttribute1" executed="True" success="True" time="0.003" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.EventBuilderTest.TestSetCustomAttribute2" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.EventBuilderTest.TestSetCustomAttribute3" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.EventBuilderTest.TestSetCustomAttribute4" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.EventBuilderTest.TestSetCustomAttribute5" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.EventBuilderTest.TestSetRaiseMethod1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.EventBuilderTest.TestSetRaiseMethod2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.EventBuilderTest.TestSetRemoveAddOnMethod1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.EventBuilderTest.TestSetRemoveAddOnMethod2" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="FieldBuilderTest" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Reflection.Emit.FieldBuilderTest.GetCustomAttributes" executed="True" success="True" time="0.002" asserts="6" />
                          <test-case name="MonoTests.System.Reflection.Emit.FieldBuilderTest.TestFieldHandleComplete" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.FieldBuilderTest.TestFieldHandleIncomplete" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.FieldBuilderTest.TestFieldProperties" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Reflection.Emit.FieldBuilderTest.TestGetCustomAttributesComplete" executed="False">
                            <reason>
                              <message><![CDATA[mono supports this]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Reflection.Emit.FieldBuilderTest.TestGetCustomAttributesIncomplete" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.FieldBuilderTest.TestGetCustomAttributesOfTypeComplete" executed="False">
                            <reason>
                              <message><![CDATA[mono supports this]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Reflection.Emit.FieldBuilderTest.TestGetCustomAttributesOfTypeIncomplete" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.FieldBuilderTest.TestGetValueComplete" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.FieldBuilderTest.TestGetValueIncomplete" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.FieldBuilderTest.TestIsDefinedComplete" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.FieldBuilderTest.TestIsDefinedIncomplete" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.FieldBuilderTest.TestSetConstantComplete" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.FieldBuilderTest.TestSetConstantDateTime" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.FieldBuilderTest.TestSetConstantIncomplete" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.FieldBuilderTest.TestSetCustomAttributeCaBuilderComplete" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.FieldBuilderTest.TestSetCustomAttributeCtorComplete" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.FieldBuilderTest.TestSetMarshalComplete" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.FieldBuilderTest.TestSetOffsetComplete" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.FieldBuilderTest.TestSetValueComplete" executed="True" success="True" time="0.001" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="GenericTypeParameterBuilderTest" success="True" time="0.019" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Reflection.Emit.GenericTypeParameterBuilderTest.GenericParameterAttributes" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.GenericTypeParameterBuilderTest.GenericTypeMembers" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Reflection.Emit.GenericTypeParameterBuilderTest.MakeArrayType" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.GenericTypeParameterBuilderTest.MakeByRefType" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.GenericTypeParameterBuilderTest.MakeGenericType" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.GenericTypeParameterBuilderTest.MakePointerType" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.GenericTypeParameterBuilderTest.Methods" executed="True" success="True" time="0.004" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.GenericTypeParameterBuilderTest.PropertiesValue" executed="True" success="True" time="0.002" asserts="15" />
                          <test-case name="MonoTests.System.Reflection.Emit.GenericTypeParameterBuilderTest.SetBaseTypeConstraintWithNull" executed="True" success="True" time="0.001" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="ILGeneratorTest" success="True" time="0.046" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Reflection.Emit.ILGeneratorTest.DeclareLocal_LocalType_Null" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Reflection.Emit.ILGeneratorTest.DefineFilterBodyWithTypeNotNull" executed="True" success="True" time="0.003" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.ILGeneratorTest.Emit10_Labels_Null" executed="True" success="True" time="0.001" asserts="5">
                            <categories>
                              <category name="NotDotNet" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Reflection.Emit.ILGeneratorTest.Emit11_Local_Null" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Reflection.Emit.ILGeneratorTest.Emit12_Method_Null" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Reflection.Emit.ILGeneratorTest.Emit14_Signature_Null" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.ILGeneratorTest.Emit16_String_Null" executed="True" success="True" time="0.002" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.ILGeneratorTest.Emit16_Type_Null" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.ILGeneratorTest.Emit3_Constructor_Null" executed="True" success="True" time="0.001" asserts="4">
                            <categories>
                              <category name="NotDotNet" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Reflection.Emit.ILGeneratorTest.Emit5_Field_Null" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.ILGeneratorTest.EmitCall_MethodInfo_Null" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Reflection.Emit.ILGeneratorTest.FilterAndCatchBlock" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.ILGeneratorTest.GtdEncodingAsOpenInstance" executed="True" success="True" time="0.003" asserts="5" />
                          <test-case name="MonoTests.System.Reflection.Emit.ILGeneratorTest.InvalidFilterBlock1" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.ILGeneratorTest.LdObjByRef" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.ILGeneratorTest.TestEmitCallIgnoresOptionalArgsForNonVarargMethod" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.ILGeneratorTest.TestEmitCalliWithNullReturnType" executed="True" success="True" time="0.003" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.ILGeneratorTest.TestEmitLocalInfoWithNopOpCode" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.ILGeneratorTest.TestFilterEmittingWithHandlerExecution" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.ILGeneratorTest.TestFilterEmittingWithoutHandlerExecution" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.ILGeneratorTest.ValidFilterBlock1" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.ILGeneratorTest.ValidFilterBlock2" executed="True" success="True" time="0.001" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="MethodBuilderTest" success="True" time="0.112" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.ArrayOfGenericParam" executed="True" success="True" time="0.003" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.Bug354757" executed="True" success="True" time="0.002" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.CanCallGetMethodBodyOnDynamicImageMethod" executed="True" success="True" time="0.002" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.CanCallVarargMethods" executed="True" success="True" time="0.004" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.DefineGenericParameters_Names_Empty" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.DefineGenericParameters_Names_Null" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.GenericMethodIsProperlyInflated" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.GetCustomAttributes" executed="True" success="True" time="0.003" asserts="6" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.GetGenericArgumentsReturnsNullForNonGenericMethod" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.ILGen_GenericTypeParameterBuilder" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.ParamerersOfGenericArgumentsAreProperlyEncoded" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.SetConstantIllegalType" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.SetCustomAttribute_DllImport_DllName_Empty" executed="True" success="True" time="0.003" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.SetCustomAttribute_DllImport_DllName_Null" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.SetCustomAttribute_DllImport1" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.SetCustomAttribute_DllImport2" executed="True" success="True" time="0.002" asserts="9" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.SetCustomAttribute_DllImport3" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.SetCustomAttribute_DllImport4" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.SetCustomAttribute_SuppressUnmanagedCodeSecurity" executed="True" success="True" time="0.002" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.TestAddDeclarativeSecurityAlreadyCreated" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.TestAddDeclarativeSecurityDuplicateAction" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.TestAddDeclarativeSecurityInvalidAction" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.TestAddDeclarativeSecurityNullPermissionSet" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.TestAttributes" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.TestCallingConvention" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.TestCreateMethodBody" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.TestDeclaringType" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.TestDefineParameter" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.TestDefineParameterInvalidIndexComplete" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.TestDefineParameterValidIndexComplete" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.TestDynamicParams" executed="True" success="True" time="0.002" asserts="6" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.TestGetBaseDefinition" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.TestGetCustomAttributes_Incomplete" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.TestGetILGenerator" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.TestGetModule" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.TestGetParameters" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.TestGetToken" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.TestHashCode" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.TestInitLocals" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.TestInvoke" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.TestIsDefined" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.TestMethodHandleComplete" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.TestMethodHandleIncomplete" executed="True" success="True" time="0.009" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.TestMethodImplementationFlags" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.TestName" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.TestReflectedType" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.TestReturnType" executed="True" success="True" time="0.005" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.TestReturnTypeCustomAttributes" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.TestSetCustomAttribute" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.ZeroLengthBodyTest1" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodBuilderTest.ZeroLengthBodyTest2" executed="True" success="True" time="0.001" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="MethodOnTypeBuilderInstTest" success="True" time="0.022" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Reflection.Emit.MethodOnTypeBuilderInstTest.Attributes" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodOnTypeBuilderInstTest.CallingConvention" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodOnTypeBuilderInstTest.DeclaringType" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodOnTypeBuilderInstTest.GenericMethodInstanceValues" executed="True" success="True" time="0.002" asserts="12" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodOnTypeBuilderInstTest.GetMethodImplementationFlags" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodOnTypeBuilderInstTest.IsGenericMethod" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodOnTypeBuilderInstTest.IsGenericMethodDefinition" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodOnTypeBuilderInstTest.MemberType" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodOnTypeBuilderInstTest.Module" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodOnTypeBuilderInstTest.Name" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodOnTypeBuilderInstTest.PropertiesOfANonGenericMethodOnGenericType" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodOnTypeBuilderInstTest.ReflectedType" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodOnTypeBuilderInstTest.ReturnParameter" executed="True" success="True" time="0.001" asserts="6" />
                        </results>
                      </test-suite>
                      <test-suite name="MethodRentalTest" success="True" time="0.005" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Reflection.Emit.MethodRentalTest.SwapMethodBodyInvalidMethodSize" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodRentalTest.SwapMethodBodyNullType" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.MethodRentalTest.SwapMethodBodyUnfinishedType" executed="True" success="True" time="0.001" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="ModuleBuilderTest" success="True" time="0.103" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Reflection.Emit.ModuleBuilderTest.DefineType_InterfaceNotAbstract" executed="True" success="True" time="0.017" asserts="8" />
                          <test-case name="MonoTests.System.Reflection.Emit.ModuleBuilderTest.DefineType_Name_Empty" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.ModuleBuilderTest.DefineType_Name_Null" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.ModuleBuilderTest.DefineType_Name_NullChar" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.ModuleBuilderTest.DefineType_Parent_Interface" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.ModuleBuilderTest.DuplicateSymbolDocument" executed="True" success="True" time="0.003" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.ModuleBuilderTest.DuplicateTypeName" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.ModuleBuilderTest.GetArrayMethodToStringTest" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.ModuleBuilderTest.GetType_String_Empty" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.ModuleBuilderTest.GetType_String_Null" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.ModuleBuilderTest.GetTypes" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.ModuleBuilderTest.GetTypeToken2_Type_Array" executed="True" success="True" time="0.010" asserts="4">
                            <categories>
                              <category name="NotDotNet" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Reflection.Emit.ModuleBuilderTest.GetTypeToken2_Type_String" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.ModuleBuilderTest.ModuleBuilder_ModuleVersionId" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.ModuleBuilderTest.ResolveFieldDefWithGenericArguments" executed="True" success="True" time="0.002" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.ModuleBuilderTest.ResolveFieldMemberRefWithGenericArguments" executed="True" success="True" time="0.002" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.ModuleBuilderTest.ResolveFieldTokenFieldBuilder" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.ModuleBuilderTest.ResolveFieldTokenInvalidToken" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.ModuleBuilderTest.ResolveGenericFieldBuilderOnGenericTypeBuilder" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.ModuleBuilderTest.ResolveMemberField" executed="True" success="True" time="0.002" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.ModuleBuilderTest.ResolveMemberMethod" executed="True" success="True" time="0.002" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.ModuleBuilderTest.ResolveMethodDefWithGenericArguments" executed="True" success="True" time="0.002" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.ModuleBuilderTest.ResolveMethodMemberRefWithGenericArguments" executed="True" success="True" time="0.003" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.ModuleBuilderTest.ResolveMethodSpecWithGenericArguments" executed="True" success="True" time="0.003" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.ModuleBuilderTest.ResolveMethodTokenMethodBuilder" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.ModuleBuilderTest.ResolveTypeDefWithGenericArguments" executed="True" success="True" time="0.002" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.ModuleBuilderTest.TestGlobalData" executed="True" success="True" time="0.005" asserts="11" />
                          <test-case name="MonoTests.System.Reflection.Emit.ModuleBuilderTest.TestIsTransient" executed="True" success="True" time="0.001" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="MonoGenericClassTest" success="True" time="0.015" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Reflection.Emit.MonoGenericClassTest.BaseTypeMustReturnNonInflatedType" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.MonoGenericClassTest.ClassMustNotBeRegisteredAfterTypeBuilderIsFinished" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.MonoGenericClassTest.DeclaringTypeMustReturnNonInflatedType" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.MonoGenericClassTest.MethodsThatRaiseNotSupported" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.MonoGenericClassTest.TestNameMethods" executed="True" success="True" time="0.002" asserts="5" />
                        </results>
                      </test-suite>
                      <test-suite name="ParameterBuilderTest" success="True" time="0.002" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Reflection.Emit.ParameterBuilderTest.ParameterBuilderSetConstant_Bug3912" executed="True" success="True" time="0.002" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="PointerTypeTest" success="True" time="0.020" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Reflection.Emit.PointerTypeTest.AsLocalVariable" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.PointerTypeTest.AsParamType" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.PointerTypeTest.AttributeValues" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.PointerTypeTest.ByRefOfGenericTypeParameter" executed="True" success="True" time="0.002" asserts="16" />
                          <test-case name="MonoTests.System.Reflection.Emit.PointerTypeTest.GenericParameterAttributes" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.PointerTypeTest.GenericParameterPosition" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.PointerTypeTest.GenericTypeMembers" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Reflection.Emit.PointerTypeTest.GetGenericParameterConstraints" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.PointerTypeTest.GetInterfaceMap" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.PointerTypeTest.IsAssignableFrom" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.PointerTypeTest.IsGenericType" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.PointerTypeTest.IsGenericTypeDefinition" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.PointerTypeTest.IsInstanceOfType" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.PointerTypeTest.IsSubclassOf" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.PointerTypeTest.MakeArrayType" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.PointerTypeTest.MakeByRefType" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.PointerTypeTest.MakeGenericType" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.PointerTypeTest.MakePointerType" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.PointerTypeTest.Methods" executed="True" success="True" time="0.002" asserts="8" />
                          <test-case name="MonoTests.System.Reflection.Emit.PointerTypeTest.PropertiesValue" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Reflection.Emit.PointerTypeTest.StructLayoutAttribute" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.PointerTypeTest.TestEquals" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="PropertyBuilderTest" success="True" time="0.005" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Reflection.Emit.PropertyBuilderTest.TestProperties" executed="True" success="True" time="0.005" asserts="11" />
                        </results>
                      </test-suite>
                      <test-suite name="SignatureHelperTest" success="True" time="0.054" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Reflection.Emit.SignatureHelperTest.GetFieldSigHelperNormalModule" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.SignatureHelperTest.GetFieldSigHelperNullModule" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.SignatureHelperTest.GetLocalVarSigHelperNormalModule" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.SignatureHelperTest.GetLocalVarSigHelperNullModule" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.SignatureHelperTest.GetMethodSigHelperNormalModule" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.SignatureHelperTest.GetMethodSigHelperNullModule" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="TypeBuilderTest" success="True" time="0.805" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.AddInterfaceImplementation_InterfaceType_Null" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.CircularArrayType" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.ConcreteTypeDontLeakGenericParamFromItSelf" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.ConcreteTypeDontLeakGenericParamFromMethods" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.CreateConcreteTypeWithAbstractMethod" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.CreatedTypeAndTypeBuilderDontShareGenericArguments" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.CreatedTypeAndTypeBuilderOwnTheirGenericArguments" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.CreatedTypeInstantiationOverTypeBuilderArgsIsNotAGenericTypeDefinition" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.CreateInstanceOfIncompleteType" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.CreateType_Ctor_NoBody" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.CreateType_EmptyCtorBody" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.CreateType_EmptyMethodBody" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.CreateType_Enum_NoInstanceField" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.CreateType_Parent_DefaultCtorMissing" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.CreateType_Parent_Null" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.CreateTypeFailsWithInvalidMethodOverride" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.CreateTypeThrowsForMethodsWithBadLabels" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.DeclaringMethodReturnsNull" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.DefineCtorUsingDefineMethod" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.DefinedDefaultConstructorWorksWithGenericBaseType" executed="True" success="True" time="0.003" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.DefineDefaultConstructor" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.DefineDefaultConstructor_Parent_DefaultCtorInaccessible" executed="True" success="True" time="0.002" asserts="9" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.DefineDefaultConstructor_Parent_DefaultCtorMissing" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.DefineEnum" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.DefineEvent_Name_NullChar" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.DefineField1" executed="True" success="True" time="0.003" asserts="19" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.DefineField1_Name_NullChar" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.DefineField1_Type_Null" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.DefineField2_Type_Null" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.DefineGenericParameters_Names_Empty" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.DefineGenericParameters_Names_Null" executed="True" success="True" time="0.008" asserts="8" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.DefineMethod_Name_NullChar" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.DefinePInvokeMethod_Name_NullChar" executed="True" success="True" time="0.002" asserts="6" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.DefineProperty_Name_NullChar" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.DefineProperty_ParameterTypes_ItemNull" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.DefineProperty_ReturnType_Null" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.DefineUninitializedData" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.DefineUninitializedDataAlreadyCreated" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.DefineUninitializedDataInvalidArgs" executed="True" success="True" time="0.002" asserts="16" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.FieldOnTypeBuilderInstDontInflateWhenEncoded" executed="True" success="True" time="0.088" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.FieldWithInitializedDataWorksWithCompilerRuntimeHelpers" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.GenericParameterAttributesReturnsNone" executed="True" success="True" time="0.002" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.GenericParameterPositionReturns0" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.GenericType" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.GetConstructor_FailWithTypeBuilderParameter" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.GetConstructor1_Incomplete" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.GetConstructor2_Complete" executed="True" success="True" time="0.033" asserts="324" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.GetConstructor2_Incomplete" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.GetConstructor3_Incomplete" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.GetConstructorCheckCtorDeclaringType" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.GetConstructors2_Complete" executed="True" success="True" time="0.008" asserts="156" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.GetConstructorsThrowWhenIncomplete" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.GetCustomAttributes_InflatedType" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.GetCustomAttrOnEventOfInflatedType" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.GetCustomAttrOnFieldOfInflatedType" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.GetCustomAttrOnPropertyOfInflatedType" executed="True" success="True" time="0.003" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.GetElementTypeNotSupported" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.GetEventsThrowWhenIncomplete" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.GetField" executed="True" success="True" time="0.003" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.GetField_FailWithTypeBuilderParameter" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.GetFieldCheckFieldDeclaringType" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.GetGenericArgumentsReturnsNullForNonGenericTypeBuilder" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.GetGenericTypeDefinitionBehavior" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.GetInterfacesAfterCreate" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.GetMethod_RejectMethodFromInflatedTypeBuilder" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.GetMethod_WorksWithTypeBuilderParameter" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.GetMethod_WorkWithInstancesOfCreatedTypeBuilder" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.GetNestedTypeCreatedAfterTypeIsCreated" executed="True" success="True" time="0.002" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.IsAssignableFrom_Created" executed="True" success="True" time="0.012" asserts="219" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.IsAssignableFrom_NotCreated" executed="True" success="True" time="0.004" asserts="91" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.IsAssignableFrom_NotCreated_AddInterfaceImplementation_Mono" executed="True" success="True" time="0.001" asserts="4">
                            <categories>
                              <category name="NotDotNet" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.IsAssignableFrom_NotCreated_Array" executed="True" success="True" time="0.001" asserts="3">
                            <categories>
                              <category name="NotDotNet" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.IsAssignableFrom_NotCreated_BaseInterface_Mono" executed="True" success="True" time="0.001" asserts="2">
                            <categories>
                              <category name="NotDotNet" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.IsAssignableToWorksWithInterfacesOnParent" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.IsDefined_AttributeType_Null" executed="True" success="True" time="0.001" asserts="4">
                            <categories>
                              <category name="NotDotNet" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.IsDefinedThrowWhenIncomplete" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.IsSealed" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.IsSerializable" executed="True" success="True" time="0.002" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.IsSubclassOfWorksIfSetParentIsCalledOnParent" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.Ldfld_Encoding_10122" executed="True" success="True" time="0.003" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.Ldfld_Regress_9531" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.MakeArrayType_Complete" executed="True" success="True" time="0.002" asserts="15" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.MakeArrayType_Incomplete" executed="True" success="True" time="0.002" asserts="14" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.MakeGenericType" executed="True" success="True" time="0.002" asserts="16" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.MakeGenericType_NoGenericTypeDefinition" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.MakeGenericType_TypeArguments_Mismatch_Mono" executed="True" success="True" time="0.001" asserts="4">
                            <categories>
                              <category name="NotDotNet" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.MakeGenericType_TypeArguments_Null_Mono" executed="True" success="True" time="0.002" asserts="8">
                            <categories>
                              <category name="NotDotNet" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.MakeGenericTypeRespectBaseType" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.MemberRef_Caching_16096" executed="True" success="True" time="0.003" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.MethodOverrideBodyMustBelongToTypeBuilder" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.SetCustomAttribute_SuppressUnmanagedCodeSecurity" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.SetParent_Parent_Interface" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.SetParent_Parent_Null" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.Static_GetConstructor_TypeBuilderGeneric_ConstructorInfoNull" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.Static_GetConstructor_TypeGeneric" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.Static_GetConstructor_TypeNull" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.StaticMethodNotUsedInIfaceVtable" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestAddDeclarativeSecurityAlreadyCreated" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestAddDeclarativeSecurityDuplicateAction" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestAddDeclarativeSecurityInvalidAction" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestAddDeclarativeSecurityNullPermissionSet" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestAddInterfaceImplementation" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestAssembly" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestAssemblyQualifiedName" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestAttributes" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestBaseTypeClass" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestBaseTypeInterface" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestCreateType_Created" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestCreateTypeReturnsNullOnSecondCallForBadType" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestDeclaringType" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestDefineConstructor" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestDefineEvent" executed="True" success="True" time="0.001" asserts="15" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestDefineInitializedData" executed="True" success="True" time="0.002" asserts="23" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestDefineMethod" executed="True" success="True" time="0.002" asserts="15" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestDefineNestedType" executed="True" success="True" time="0.002" asserts="20" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestDefinePInvokeMethod" executed="True" success="True" time="0.002" asserts="12" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestEnums" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestEnumWithBadTypeValueFieldBuildFails" executed="True" success="True" time="0.009" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestEnumWithEmptyInterfaceBuildsOk" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestEnumWithExplicitLayoutBuildsFails" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestEnumWithGoodTypeValueFieldBuildOk" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestEnumWithMethodsBuildFails" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestEnumWithMultipleValueFieldsBuildFals" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestEnumWithSequentialLayoutBuildsFails" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestEnumWithValueFieldBuildOk" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestFullName" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGenericFieldAccess" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetConstructor" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetCustomAttributesComplete" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetCustomAttributesIncomplete" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetCustomAttributesOfNullTypeComplete" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetCustomAttributesOfTypeComplete" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetCustomAttributesOfTypeIncomplete" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetEventComplete" executed="True" success="True" time="0.002" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetEventFlagsComplete" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetEventFlagsComplete_Inheritance" executed="True" success="True" time="0.021" asserts="504" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetEventFlagsIncomplete" executed="False">
                            <reason>
                              <message><![CDATA[mcs depends on this]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetEventIncomplete" executed="False">
                            <reason>
                              <message><![CDATA[mcs depends on this]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetEventsComplete" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetEventsFlagsComplete" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetEventsFlagsComplete_Inheritance" executed="True" success="True" time="0.006" asserts="102" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetEventsFlagsIncomplete" executed="False">
                            <reason>
                              <message><![CDATA[mcs depends on this]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetEventsIncomplete" executed="False">
                            <reason>
                              <message><![CDATA[mcs depends on this]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetFieldComplete" executed="True" success="True" time="0.002" asserts="9" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetFieldComplete_Type" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetFieldFlagsComplete" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetFieldFlagsComplete_Inheritance" executed="True" success="True" time="0.019" asserts="504" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetFieldFlagsIncomplete_Mono" executed="True" success="True" time="0.001" asserts="12">
                            <categories>
                              <category name="NotDotNet" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetFieldIncomplete_Mono" executed="True" success="True" time="0.001" asserts="5">
                            <categories>
                              <category name="NotDotNet" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetFieldsComplete" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetFieldsComplete_Generic" executed="True" success="True" time="0.003" asserts="18" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetFieldsFlagsComplete" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetFieldsFlagsComplete_Inheritance" executed="True" success="True" time="0.008" asserts="102" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetFieldsFlagsIncomplete_Mono" executed="True" success="True" time="0.001" asserts="11">
                            <categories>
                              <category name="NotDotNet" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetFieldsIncomplete_Mono" executed="True" success="True" time="0.001" asserts="8">
                            <categories>
                              <category name="NotDotNet" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetInterfaceIncomplete" executed="True" success="True" time="0.009" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetInterfaces" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetMemberComplete" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetMemberIncomplete" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetMembersComplete" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetMembersFlagsComplete" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetMembersFlagsIncomplete" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetMembersIncomplete" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetMethod" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetMethodFlagsComplete" executed="True" success="True" time="0.053" asserts="504" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetMethodsComplete" executed="True" success="True" time="0.003" asserts="23" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetMethodsFlagsComplete" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetMethodsFlagsComplete_Inheritance" executed="True" success="True" time="0.016" asserts="504" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetMethodsFlagsIncomplete_Inheritance" executed="True" success="True" time="0.015" asserts="504">
                            <categories>
                              <category name="NotDotNet" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetMethodsFlagsIncomplete_Mono" executed="True" success="True" time="0.002" asserts="18">
                            <categories>
                              <category name="NotDotNet" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetMethodsIncomplete_Mono" executed="True" success="True" time="0.002" asserts="22">
                            <categories>
                              <category name="NotDotNet" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetPropertiesComplete" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetPropertiesFlagsComplete" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetPropertiesFlagsComplete_Inheritance" executed="True" success="True" time="0.005" asserts="102" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetPropertiesFlagsIncomplete_Mono" executed="True" success="True" time="0.002" asserts="9">
                            <categories>
                              <category name="NotDotNet" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetPropertiesIncomplete_Mono" executed="True" success="True" time="0.001" asserts="3">
                            <categories>
                              <category name="NotDotNet" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetPropertyComplete" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetPropertyFlagsComplete" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetPropertyFlagsIncomplete" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGetPropertyIncomplete" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestGUIDIncomplete" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestHasElementType_Complete" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestHasElementType_Incomplete" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestIsAbstract" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestIsAnsiClass" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestIsArray" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestIsAutoClass" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestIsAutoLayout" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestIsByRef" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestIsClass" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestIsCOMObject" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestIsContextful" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestIsDefinedComplete" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestIsEnum" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestIsExplicitLayout" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestIsImport" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestIsInterface" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestIsLayoutSequential" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestIsMarshalByRef" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestIsPointer" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestIsPrimitive" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestIsSpecialName" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestIsUnicodeClass" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestIsValueType" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestMemberType" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestModule" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestName" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestNamespace" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestPackingSize" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestReflectedType" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestSetParentComplete" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestSetParentIncomplete" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestSize" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestTypeHandle" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestTypeInitializerComplete" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestTypeInitializerIncomplete" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestTypeResolve" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TestTypeToken" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TypeResolveGenericInstances" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.TypeWithFieldRVAWorksUnderSgen" executed="True" success="True" time="0.035" asserts="1" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.UnderlyingSystemType" executed="True" success="True" time="0.002" asserts="17" />
                          <test-case name="MonoTests.System.Reflection.Emit.TypeBuilderTest.UserTypes" executed="True" success="True" time="0.007" asserts="0">
                            <categories>
                              <category name="NotDotNet" />
                            </categories>
                          </test-case>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="EventInfoTest" success="True" time="0.008" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Reflection.EventInfoTest.AddHandlerToNullInstanceEventRaisesTargetException" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.EventInfoTest.AddHandlerWithIncompatibleTargetShouldRaiseTargetException" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.EventInfoTest.AddHandleToPrivateEventRaisesInvalidOperationException" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.EventInfoTest.IsDefined_AttributeType_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Reflection.EventInfoTest.RemoveHandleToPrivateEventRaisesInvalidOperationException" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.EventInfoTest.TestGetXXXMethod" executed="True" success="True" time="0.001" asserts="6" />
                    </results>
                  </test-suite>
                  <test-suite name="FieldInfoTest" success="True" time="0.057" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Reflection.FieldInfoTest.GetCustomAttributes" executed="True" success="True" time="0.002" asserts="20" />
                      <test-case name="MonoTests.System.Reflection.FieldInfoTest.GetFieldFromHandle1_Handle_Zero" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Reflection.FieldInfoTest.GetFieldFromHandle2_DeclaringType_Zero" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Reflection.FieldInfoTest.GetFieldFromHandle2_Handle_Generic" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Reflection.FieldInfoTest.GetFieldFromHandle2_Handle_Zero" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Reflection.FieldInfoTest.GetFieldFromHandle2_Incompatible" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.FieldInfoTest.GetRawDefaultValue" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Reflection.FieldInfoTest.GetRawDefaultValueNoDefault" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.FieldInfoTest.GetSetValuePointers" executed="True" success="True" time="0.002" asserts="2" />
                      <test-case name="MonoTests.System.Reflection.FieldInfoTest.GetValueOnConstantOfOpenGeneric" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Reflection.FieldInfoTest.GetValueOnRefOnlyAssembly" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.FieldInfoTest.GetValueOpenGeneric" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.FieldInfoTest.IsDefined_AttributeType_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Reflection.FieldInfoTest.NonPublicTests" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Reflection.FieldInfoTest.NullableTests" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Reflection.FieldInfoTest.PseudoCustomAttributes" executed="True" success="True" time="0.002" asserts="27" />
                      <test-case name="MonoTests.System.Reflection.FieldInfoTest.SetValueOnLiteralField" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.FieldInfoTest.SetValueOnRefOnlyAssembly" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.FieldInfoTest.SetValueOpenGeneric" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.FieldInfoTest.SetValuePrimitiveConversions" executed="True" success="True" time="0.028" asserts="161" />
                      <test-case name="MonoTests.System.Reflection.FieldInfoTest.TestSetValueArray" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="IntrospectionExtensionsTest" success="True" time="0.011" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Reflection.IntrospectionExtensionsTest.GetTypeInfo_NullArgument" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.IntrospectionExtensionsTest.GetTypeInfo_SystemType" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="MethodBaseTest" success="True" time="0.014" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Reflection.MethodBaseTest.GetCurrentMethodDropsAllGenericArguments" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Reflection.MethodBaseTest.GetMethodFromHandle" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Reflection.MethodBaseTest.GetMethodFromHandle_Handle_Generic_Method" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Reflection.MethodBaseTest.GetMethodFromHandle_Handle_Generic_Method_Instance" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Reflection.MethodBaseTest.GetMethodFromHandle_Handle_Generic_Method_On_Generic_Class" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Reflection.MethodBaseTest.GetMethodFromHandle_Handle_Method_On_Generic_Class" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Reflection.MethodBaseTest.GetMethodFromHandle_NonGenericType_DeclaringTypeZero" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Reflection.MethodBaseTest.GetMethodFromHandle1_Handle_Generic" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.MethodBaseTest.GetMethodFromHandle1_Handle_Zero" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Reflection.MethodBaseTest.GetMethodFromHandle2_DeclaringType_Zero" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.Reflection.MethodBaseTest.GetMethodFromHandle2_Handle_Generic" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.Reflection.MethodBaseTest.GetMethodFromHandle2_Handle_Zero" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Reflection.MethodBaseTest.MutableString" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="MethodInfoTest" success="True" time="0.063" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.Bug354757" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.ByRefInvoke" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.ByrefVtypeInvoke" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.ContainsGenericParameters" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.GetBaseDefinition" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.GetGenericMethodDefinition" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.GetInterfaceMapWorksWithVariantIfaces" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.GetMethodBody" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.GetMethodBody_Abstract" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.GetMethodBody_Icall" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.GetMethodBody_Pinvoke" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.GetMethodBody_Runtime" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.GetMethodFromHandle_Generic" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.GetParametersDontReturnInternedArray" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.InheritanceTestGetMethodTest" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.InvokeGenericInst" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.InvokeGenericVtype" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.InvokeInvalidOpExceptionThrow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.InvokeOnRefOnlyAssembly" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.InvokeThreadAbort" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.IsDefined_AttributeType_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.IsGenericMethod" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.IsGenericMethodDefinition" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.MakeGenericMethodArgsMismatch" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.MakeGenericMethodRespectConstraints" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.MakeGenericMethodWithNonGenericMethodDefinitionMethod" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.MakeGenericMethodWithNullArray" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.MakeGenericMethodWithNullValueInTypesArray" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.MakeGenericMethodWithSreTypeResultsInStupidMethodInfo" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.MethodToStringShouldPrintFullNameOfGenericStructs" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.NullableTests" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.PseudoCustomAttributes" executed="True" success="True" time="0.001" asserts="9" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.ReturnParameter" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.ReturnTypePseudoCustomAttributes" executed="True" success="True" time="0.000" asserts="1">
                        <categories>
                          <category name="TargetJvmNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.StaticInvokeWithObject" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.TestInvokeByRefReturnMethod" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.ToStringArgList" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.ToStringByRef" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.ToStringGenericMethod" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.ToStringWithPointerSignatures" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.MethodInfoTest.ToStringWithPointerSignaturesToNonPrimitiveType" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="ModuleTest" success="True" time="0.057" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Reflection.ModuleTest.FindTypes" executed="True" success="True" time="0.005" asserts="6" />
                      <test-case name="MonoTests.System.Reflection.ModuleTest.GetField_Name_Null" executed="True" success="True" time="0.001" asserts="10" />
                      <test-case name="MonoTests.System.Reflection.ModuleTest.GetObjectData_Null" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.ModuleTest.GetTypes" executed="True" success="True" time="0.032" asserts="2" />
                      <test-case name="MonoTests.System.Reflection.ModuleTest.IsDefined_AttributeType_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Reflection.ModuleTest.ResolveField" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.ModuleTest.ResolveMember" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Reflection.ModuleTest.ResolveMethod" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.ModuleTest.ResolveMethodOfGenericClass" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.ModuleTest.ResolveString" executed="False">
                        <reason>
                          <message><![CDATA[it breaks nunit-console.exe execution under .NET 2.0]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Reflection.ModuleTest.ResolveType" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.ModuleTest.TestGlobalData" executed="True" success="True" time="0.004" asserts="15">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                    </results>
                  </test-suite>
                  <test-suite name="ParameterInfoTest" success="True" time="0.025" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Reflection.ParameterInfoTest.ArrayMethodParameters" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Reflection.ParameterInfoTest.DefaultValueDecimal" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.ParameterInfoTest.DefaultValueEnum" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Reflection.ParameterInfoTest.DefaultValuesFromCustomAttr" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Reflection.ParameterInfoTest.Generics_Name" executed="True" success="True" time="0.001" asserts="11" />
                      <test-case name="MonoTests.System.Reflection.ParameterInfoTest.HasDefaultValueDecimal" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.ParameterInfoTest.HasDefaultValueEnum" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.ParameterInfoTest.IsDefined_AttributeType_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Reflection.ParameterInfoTest.Member" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Reflection.ParameterInfoTest.PseudoCustomAttributes" executed="True" success="True" time="0.001" asserts="11" />
                      <test-case name="MonoTests.System.Reflection.ParameterInfoTest.SubClassWithNoOverrides" executed="True" success="True" time="0.002" asserts="16" />
                      <test-case name="MonoTests.System.Reflection.ParameterInfoTest.SubClassWithOverrides" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Reflection.ParameterInfoTest.SubClassWithValuesSet" executed="True" success="True" time="0.001" asserts="14" />
                      <test-case name="MonoTests.System.Reflection.ParameterInfoTest.TestDefaultValues" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Reflection.ParameterInfoTest.TestHasDefaultValues" executed="True" success="True" time="0.000" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite name="PropertyInfoTest" success="True" time="0.035" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Reflection.PropertyInfoTest.AccessorsReflectedType" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Reflection.PropertyInfoTest.Bug77160" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.PropertyInfoTest.ConstantValue" executed="True" success="True" time="0.003" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.PropertyInfoTest.DeclaringTypeOfPropertyFromInheritedTypePointsToBase" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Reflection.PropertyInfoTest.GetAccessorsTest" executed="True" success="True" time="0.002" asserts="39" />
                      <test-case name="MonoTests.System.Reflection.PropertyInfoTest.GetCustomAttributes" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.Reflection.PropertyInfoTest.GetCustomAttributes_Inherited" executed="True" success="True" time="0.001" asserts="10" />
                      <test-case name="MonoTests.System.Reflection.PropertyInfoTest.GetException" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.PropertyInfoTest.GetIndexParameterReturnedObjectsCustomAttributes" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Reflection.PropertyInfoTest.GetIndexParameterReturnsObjectsBoundToTheProperty" executed="True" success="True" time="0.002" asserts="30" />
                      <test-case name="MonoTests.System.Reflection.PropertyInfoTest.IsDefined_AttributeType_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Reflection.PropertyInfoTest.NullableTests" executed="True" success="True" time="0.009" asserts="2" />
                      <test-case name="MonoTests.System.Reflection.PropertyInfoTest.PropertyWithDefaultValue" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Reflection.PropertyInfoTest.SetValue_Enum" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Reflection.PropertyInfoTest.ToStringTest" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="ReflectedTypeTest" success="True" time="0.002" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Reflection.ReflectedTypeTest.TestMembers" executed="True" success="True" time="0.001" asserts="40" />
                    </results>
                  </test-suite>
                  <test-suite name="StrongNameKeyPairTest" success="True" time="0.010" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Reflection.StrongNameKeyPairTest.ConstructorByteArray" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.StrongNameKeyPairTest.ConstructorECMAByteArray" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.StrongNameKeyPairTest.ConstructorFileStream" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.StrongNameKeyPairTest.ConstructorInvalidByteArray" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.StrongNameKeyPairTest.ConstructorInvalidFileStream" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.StrongNameKeyPairTest.ConstructorNullByteArray" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.StrongNameKeyPairTest.ConstructorNullFileStream" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Reflection.StrongNameKeyPairTest.ConstructorNullString" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="TypeDelegatorTest" success="True" time="0.004" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Reflection.TypeDelegatorTest.CreateInstance" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Reflection.TypeDelegatorTest.IsAssignableFrom" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Reflection.TypeDelegatorTest.Properties" executed="True" success="True" time="0.001" asserts="11" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="ResolveEventArgsTest" success="True" time="0.001" asserts="0">
                <results>
                  <test-case name="MonoTests.System.ResolveEventArgsTest.TestTheWholeThing" executed="True" success="True" time="0.001" asserts="1" />
                </results>
              </test-suite>
              <test-suite name="Resources" success="True" time="0.244" asserts="0">
                <results>
                  <test-suite name="ResourceManagerTest" success="True" time="0.122" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.Constructor0" executed="True" success="True" time="0.002" asserts="8" />
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.Constructor1" executed="True" success="True" time="0.002" asserts="13" />
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.Constructor1_ResourceSource_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.Constructor2" executed="True" success="True" time="0.002" asserts="26" />
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.Constructor2_Assembly_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.Constructor2_BaseName_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.Constructor2_BaseName_Resources" executed="True" success="True" time="0.016" asserts="13" />
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.Constructor3" executed="True" success="True" time="0.001" asserts="22" />
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.Constructor3_Assembly_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.Constructor3_BaseName_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.Constructor3_BaseName_Resources" executed="True" success="True" time="0.001" asserts="11" />
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.Constructor3_UsingResourceSet_Invalid" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.Constructor3_UsingResourceSet_Null" executed="True" success="True" time="0.001" asserts="13" />
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.CreateFileBasedResourceManager_BaseName_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.CreateFileBasedResourceManager_ResourceDir_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.CreateFileBasedResourceManager_UsingResourceSet_Invalid" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.CreateFileBasedResourceManager_UsingResourceSet_Null" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.GetObject" executed="True" success="True" time="0.031" asserts="17">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.GetObject_Name_Null" executed="True" success="True" time="0.001" asserts="10" />
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.GetObject_ResourceSet_Disposed" executed="True" success="True" time="0.001" asserts="3">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.GetResourceFileName" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.GetResourceFileName_Culture_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.GetResourceSet_Culture_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.GetStream" executed="True" success="True" time="0.004" asserts="6">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.GetStream_Culture" executed="True" success="True" time="0.001" asserts="6">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.GetStream_Name_Null" executed="True" success="True" time="0.001" asserts="10" />
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.GetStream_Resource_DoesNotExist" executed="True" success="True" time="0.000" asserts="1">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.GetStream_Resource_NonStream" executed="True" success="True" time="0.001" asserts="3">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.GetStream_ResourceFile_DoesNotExist" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.GetStream_ResourceSet_Disposed" executed="True" success="True" time="0.001" asserts="3">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.GetString" executed="True" success="True" time="0.002" asserts="17">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.GetString_Name_Null" executed="True" success="True" time="0.001" asserts="10" />
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.GetString_ResourceSet_Disposed" executed="True" success="True" time="0.001" asserts="3">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.IgnoreCase" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.InternalGetResourceSet_Culture_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.TestResourceManagerGetResourceSetEmpty" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.TestResourceManagerReleaseAllResources" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.TestResourceManagerReleaseAllResourcesEmpty" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.TestResourceManagerResourceSetClosedException" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.TestResourceManagerResourceSets" executed="True" success="True" time="0.001" asserts="3">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Resources.ResourceManagerTest.TestSatellites" executed="True" success="True" time="0.004" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite name="ResourceReaderTest" success="True" time="0.035" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Resources.ResourceReaderTest.ByteArray" executed="True" success="True" time="0.002" asserts="3" />
                      <test-case name="MonoTests.System.Resources.ResourceReaderTest.Close" executed="True" success="True" time="0.001" asserts="1">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Resources.ResourceReaderTest.ConstructorStream_Closed" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Resources.ResourceReaderTest.ConstructorStream_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Resources.ResourceReaderTest.ConstructorString" executed="True" success="True" time="0.001" asserts="1">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Resources.ResourceReaderTest.ConstructorString_Bad" executed="False">
                        <reason>
                          <message><![CDATA[Not covered in the docs, not sure what the correct behavior should be for this]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Resources.ResourceReaderTest.ConstructorString_NotFound" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Resources.ResourceReaderTest.ConstructorString_Path_Empty" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Resources.ResourceReaderTest.ConstructorString_Path_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Resources.ResourceReaderTest.Enumerator" executed="True" success="True" time="0.001" asserts="8">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Resources.ResourceReaderTest.GetResourceData" executed="True" success="True" time="0.002" asserts="6">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Resources.ResourceReaderTest.GetResourceData2" executed="True" success="True" time="0.001" asserts="2">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Resources.ResourceReaderTest.GetResourceDataNullName" executed="True" success="True" time="0.001" asserts="5">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Resources.ResourceReaderTest.ReadNullResource" executed="True" success="True" time="0.002" asserts="4" />
                      <test-case name="MonoTests.System.Resources.ResourceReaderTest.Stream" executed="True" success="True" time="0.001" asserts="1">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                    </results>
                  </test-suite>
                  <test-suite name="ResourceSetTest" success="True" time="0.019" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Resources.ResourceSetTest.Clonable" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Resources.ResourceSetTest.Constructor1_Reader_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Resources.ResourceSetTest.Constructor2_Stream_Closed" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Resources.ResourceSetTest.Constructor2_Stream_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Resources.ResourceSetTest.Constructor3_FileName_Empty" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Resources.ResourceSetTest.Constructor3_FileName_Null" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Resources.ResourceSetTest.Defaults" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Resources.ResourceSetTest.Dispose" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Resources.ResourceSetTest.GetEnumerator" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Resources.ResourceSetTest.GetEnumerator_Disposed" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Resources.ResourceSetTest.GetObject_Disposed" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Resources.ResourceSetTest.GetObject_DoesNotExists" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Resources.ResourceSetTest.GetString_Disposed" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Resources.ResourceSetTest.GetString_DoesNotExists" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Resources.ResourceSetTest.GetString_NotAString" executed="True" success="True" time="0.001" asserts="6" />
                    </results>
                  </test-suite>
                  <test-suite name="ResourceWriterTest" success="True" time="0.055" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Resources.ResourceWriterTest.AddResource_Closed" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Resources.ResourceWriterTest.AddResource_Name_Duplicate" executed="True" success="True" time="0.002" asserts="4" />
                      <test-case name="MonoTests.System.Resources.ResourceWriterTest.AddResource_Stream_Default" executed="True" success="True" time="0.002" asserts="4">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Resources.ResourceWriterTest.AddResource_Stream_Details" executed="True" success="True" time="0.004" asserts="4" />
                      <test-case name="MonoTests.System.Resources.ResourceWriterTest.AddResource_Stream_Errors" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Resources.ResourceWriterTest.AddResource0" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Resources.ResourceWriterTest.AddResource0_Name_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Resources.ResourceWriterTest.AddResource0_Value_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Resources.ResourceWriterTest.AddResource1" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Resources.ResourceWriterTest.AddResource1_Name_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Resources.ResourceWriterTest.AddResource1_Value_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Resources.ResourceWriterTest.AddResource2" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Resources.ResourceWriterTest.AddResource2_Name_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Resources.ResourceWriterTest.AddResource2_Value_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Resources.ResourceWriterTest.Bug81759" executed="True" success="True" time="0.004" asserts="2">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Resources.ResourceWriterTest.Close" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Resources.ResourceWriterTest.Close_NoResources" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Resources.ResourceWriterTest.Constructor0_Stream_NotWritable" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Resources.ResourceWriterTest.Constructor0_Stream_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Resources.ResourceWriterTest.Constructor1_FileName_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Resources.ResourceWriterTest.Generate" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Resources.ResourceWriterTest.Generate_Closed" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Resources.ResourceWriterTest.WriteEnum" executed="True" success="True" time="0.003" asserts="5" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="Runtime" success="True" time="21.608" asserts="0">
                <results>
                  <test-suite name="CompilerServices" success="True" time="3.893" asserts="0">
                    <results>
                      <test-suite name="AsyncVoidMethodBuilderTest" success="True" time="0.025" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Runtime.CompilerServices.AsyncVoidMethodBuilderTest.SetException" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="MonoTests.System.Runtime.CompilerServices.AsyncVoidMethodBuilderTest.SetResult" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="ConditionalWeakTableTest" success="True" time="3.771" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Runtime.CompilerServices.ConditionalWeakTableTest.Add" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Runtime.CompilerServices.ConditionalWeakTableTest.FinalizableObjectsThatRetainDeadKeys" executed="True" success="True" time="0.131" asserts="2" />
                          <test-case name="MonoTests.System.Runtime.CompilerServices.ConditionalWeakTableTest.GetOrCreateValue" executed="True" success="True" time="0.002" asserts="3" />
                          <test-case name="MonoTests.System.Runtime.CompilerServices.ConditionalWeakTableTest.GetValue" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Runtime.CompilerServices.ConditionalWeakTableTest.InsertStress" executed="True" success="True" time="0.065" asserts="10" />
                          <test-case name="MonoTests.System.Runtime.CompilerServices.ConditionalWeakTableTest.OldGenKeysMakeNewGenObjectsReachable" executed="True" success="True" time="3.510" asserts="2000000" />
                          <test-case name="MonoTests.System.Runtime.CompilerServices.ConditionalWeakTableTest.OldGenStress" executed="True" success="True" time="0.053" asserts="40" />
                          <test-case name="MonoTests.System.Runtime.CompilerServices.ConditionalWeakTableTest.Remove" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Runtime.CompilerServices.ConditionalWeakTableTest.TryGetValue" executed="True" success="True" time="0.000" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="InternalsVisibleToAttributeTest" success="True" time="0.002" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Runtime.CompilerServices.InternalsVisibleToAttributeTest.AllInternalsVisible" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Runtime.CompilerServices.InternalsVisibleToAttributeTest.Constructor1" executed="True" success="True" time="0.001" asserts="12" />
                        </results>
                      </test-suite>
                      <test-suite name="RuntimeHelpersTest" success="True" time="0.008" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Runtime.CompilerServices.RuntimeHelpersTest.InitializeArray" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Runtime.CompilerServices.RuntimeHelpersTest.InitializeArray_Default" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Runtime.CompilerServices.RuntimeHelpersTest.InitializeArray_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Runtime.CompilerServices.RuntimeHelpersTest.InitializeArray_Uninitialized" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Runtime.CompilerServices.RuntimeHelpersTest.RunClassConstructor_Default" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Runtime.CompilerServices.RuntimeHelpersTest.RunClassConstructor_Throw" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Runtime.CompilerServices.RuntimeHelpersTest.RunClassConstructor_Uninitialized" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="RuntimeWrappedExceptionTest" success="True" time="0.003" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Runtime.CompilerServices.RuntimeWrappedExceptionTest.GetObjectData" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Runtime.CompilerServices.RuntimeWrappedExceptionTest.GetObjectData_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Runtime.CompilerServices.RuntimeWrappedExceptionTest.WrappedException" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="TaskAwaiterTest" success="True" time="0.059" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Runtime.CompilerServices.TaskAwaiterTest.CompletionOnSameCustomSynchronizationContext" executed="True" success="True" time="0.015" asserts="1" />
                          <test-case name="MonoTests.System.Runtime.CompilerServices.TaskAwaiterTest.CustomScheduler" executed="True" success="True" time="0.005" asserts="5" />
                          <test-case name="MonoTests.System.Runtime.CompilerServices.TaskAwaiterTest.FinishedTaskOnCompleted" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Runtime.CompilerServices.TaskAwaiterTest.GetResultCanceled" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Runtime.CompilerServices.TaskAwaiterTest.GetResultFaulted" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Runtime.CompilerServices.TaskAwaiterTest.GetResultWaitOnCompletion" executed="True" success="True" time="0.030" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="TaskAwaiterTest_T" success="True" time="0.005" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Runtime.CompilerServices.TaskAwaiterTest_T.ContextTest" executed="True" success="True" time="0.002" asserts="4" />
                          <test-case name="MonoTests.System.Runtime.CompilerServices.TaskAwaiterTest_T.GetResultCanceled" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Runtime.CompilerServices.TaskAwaiterTest_T.GetResultFaulted" executed="True" success="True" time="0.001" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="YieldAwaitableTest" success="True" time="0.009" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Runtime.CompilerServices.YieldAwaitableTest.IsCompleted" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Runtime.CompilerServices.YieldAwaitableTest.OnCompleted_1" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Runtime.CompilerServices.YieldAwaitableTest.OnCompleted_2" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.Runtime.CompilerServices.YieldAwaitableTest.OnCompleted_3" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Runtime.CompilerServices.YieldAwaitableTest.OnCompleted_4" executed="True" success="True" time="0.001" asserts="2" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="ExceptionServices" success="True" time="0.006" asserts="0">
                    <results>
                      <test-suite name="ExceptionDispatchInfoTest" success="True" time="0.005" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Runtime.ExceptionServices.ExceptionDispatchInfoTest.Capture" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Runtime.ExceptionServices.ExceptionDispatchInfoTest.Capture_InvalidArguments" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Runtime.ExceptionServices.ExceptionDispatchInfoTest.Throw" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Runtime.ExceptionServices.ExceptionDispatchInfoTest.ThrowWithEmptyFrames" executed="True" success="True" time="0.001" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="InteropServices" success="True" time="0.415" asserts="0">
                    <results>
                      <test-suite name="ExternalExceptionTest" success="True" time="0.006" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Runtime.InteropServices.ExternalExceptionTest.Constructor0" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.ExternalExceptionTest.Constructor1" executed="True" success="True" time="0.001" asserts="11" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.ExternalExceptionTest.Constructor3" executed="True" success="True" time="0.001" asserts="14" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.ExternalExceptionTest.Constructor4" executed="True" success="True" time="0.001" asserts="14" />
                        </results>
                      </test-suite>
                      <test-suite name="GCHandleTest" success="True" time="0.303" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Runtime.InteropServices.GCHandleTest.AddrOfPinnedObjectNormal" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.GCHandleTest.AddrOfPinnedObjectNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.GCHandleTest.AddrOfPinnedObjectWeak" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.GCHandleTest.AddrOfPinnedObjectWeakTrackResurrection" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.GCHandleTest.AllocInvalidType" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.GCHandleTest.AllocMinusOne" executed="False">
                            <reason>
                              <message><![CDATA[throw non-catchable ExecutionEngineException]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Runtime.InteropServices.GCHandleTest.AllocNull" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.GCHandleTest.AllocNullWeakTrack" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.GCHandleTest.DefaultZeroValue_Allocated" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.GCHandleTest.DefaultZeroValue_Target" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.GCHandleTest.WeakHandleWorksOnNonRootDomain" executed="True" success="True" time="0.292" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="MarshalTest" success="True" time="0.075" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.AllocHGlobalZeroSize" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.BSTR_Roundtrip" executed="True" success="True" time="0.000" asserts="1">
                            <categories>
                              <category name="MobileNotWorking" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.FreeHGlobal" executed="True" success="True" time="0.001" asserts="1024" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.GetHINSTANCE" executed="False">
                            <reason>
                              <message><![CDATA[GetHINSTANCE only applies to Windows.]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.GetHINSTANCE_Module_Dynamic" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.GetHINSTANCE_Module_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.OffsetOf_FieldName_Static" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.PtrToStringAnsi_Ptr_Zero" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.PtrToStringWithNull" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.PtrToStringWithUni_Ptr_Zero" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.PtrToStructureNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.ReadInt16" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.ReadInt32" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.ReadInt32_Endian" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.ReadInt64" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.ReadIntByte" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.SecureStringToBSTR" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.SecureStringToBSTR_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.SecureStringToCoTaskMemAnsi" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.SecureStringToCoTaskMemAnsi_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.SecureStringToCoTaskMemUnicode" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.SecureStringToCoTaskMemUnicode_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.SecureStringToGlobalAllocAnsi" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.SecureStringToGlobalAllocAnsi_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.SecureStringToGlobalAllocUnicode" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.SecureStringToGlobalAllocUnicode_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.SizeOf_Array" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.SizeOf_Class_LayoutExplicit" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.SizeOf_Class_LayoutNotSet" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.SizeOf_Class_LayoutSequential" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.Sizeof_Pointer" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.SizeOf_Struct_LayoutExplicit" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.SizeOf_Struct_LayoutNotSet" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.SizeOf_Struct_LayoutSequential" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.StringToBSTRWithNullValues" executed="True" success="True" time="0.001" asserts="2">
                            <categories>
                              <category name="MobileNotWorking" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.StringToCoTaskMemAnsiWithNullValues" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.StringToCoTaskMemAutoWithNullValues" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.StringToCoTaskMemUniWithNullValues" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.StringToHGlobalAnsiWithNullValues" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.StringToHGlobalAutoWithNullValues" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.StringToHGlobalUni" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.StringToHGlobalUniWithNullValues" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.TestGenerateProgIdForType" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.TestGetComSlotForMethod_Method_Null" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.TestGetComSlotForMethodInfo" executed="True" success="True" time="0.001" asserts="14" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.TestGetComSlotForMethodInfo_Method_NotOnInterface" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.TestGetExceptionForHR" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.TestGlobalAlloc" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.TestPtrToStringAuto" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.MarshalTest.UnsafeAddrOfPinnedArrayElement" executed="True" success="True" time="0.001" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="RuntimeEnvironmentTest" success="True" time="0.005" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Runtime.InteropServices.RuntimeEnvironmentTest.FromGlobalAccessCache" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.RuntimeEnvironmentTest.FromGlobalAccessCache_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.RuntimeEnvironmentTest.GetRuntimeDirectory" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.RuntimeEnvironmentTest.GetSystemVersion" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.RuntimeEnvironmentTest.SystemConfigurationFile" executed="True" success="True" time="0.000" asserts="2">
                            <categories>
                              <category name="MobileNotWorking" />
                            </categories>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite name="SafeHandleTest" success="True" time="0.005" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Runtime.InteropServices.SafeHandleTest.DangerousAddRefOnNewInstance" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.SafeHandleTest.Dispose1" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.SafeHandleTest.Dispose2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.SafeHandleTest.Dispose3" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Runtime.InteropServices.SafeHandleTest.NoReleaseUnowned" executed="True" success="True" time="0.001" asserts="3" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Remoting" success="True" time="16.689" asserts="0">
                    <results>
                      <test-suite name="Channels" success="True" time="0.004" asserts="0">
                        <results>
                          <test-suite name="ChannelServicesTest" success="True" time="0.003" asserts="0">
                            <results>
                              <test-case name="MonoTests.System.Runtime.Remoting.Channels.ChannelServicesTest.ConstructorEnsureSecurity" executed="True" success="True" time="0.001" asserts="0" />
                              <test-case name="MonoTests.System.Runtime.Remoting.Channels.ChannelServicesTest.ConstructorEnsureSecurity2" executed="True" success="True" time="0.001" asserts="0" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="Contexts" success="True" time="0.008" asserts="0">
                        <results>
                          <test-suite name="SynchronizationAttributeTest" success="True" time="0.007" asserts="0">
                            <results>
                              <test-case name="MonoTests.System.Runtime.Remoting.Contexts.SynchronizationAttributeTest.Constructor_Bool" executed="True" success="True" time="0.001" asserts="2" />
                              <test-case name="MonoTests.System.Runtime.Remoting.Contexts.SynchronizationAttributeTest.Constructor_Default" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="MonoTests.System.Runtime.Remoting.Contexts.SynchronizationAttributeTest.Constructor_Int" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="MonoTests.System.Runtime.Remoting.Contexts.SynchronizationAttributeTest.Constructor_IntBool" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="MonoTests.System.Runtime.Remoting.Contexts.SynchronizationAttributeTest.DeserializeKnownValue" executed="True" success="True" time="0.001" asserts="2" />
                              <test-case name="MonoTests.System.Runtime.Remoting.Contexts.SynchronizationAttributeTest.SerializationRoundtrip" executed="True" success="True" time="0.001" asserts="2" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="ContextTest" success="True" time="0.017" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Runtime.Remoting.ContextTest.TestDatastore" executed="True" success="True" time="0.004" asserts="3" />
                          <test-case name="MonoTests.System.Runtime.Remoting.ContextTest.TestDoCallback" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="Messaging" success="True" time="0.011" asserts="0">
                        <results>
                          <test-suite name="CallContextTest" success="True" time="0.010" asserts="0">
                            <results>
                              <test-case name="MonoTests.System.Runtime.Remoting.Messaging.CallContextTest.CallContextPropagation_Not_ThreadPool" executed="True" success="True" time="0.001" asserts="2" />
                              <test-case name="MonoTests.System.Runtime.Remoting.Messaging.CallContextTest.CallContextPropagation_Task" executed="True" success="True" time="0.001" asserts="2" />
                              <test-case name="MonoTests.System.Runtime.Remoting.Messaging.CallContextTest.CallContextPropagation_TaskContinuation" executed="True" success="True" time="0.002" asserts="3" />
                              <test-case name="MonoTests.System.Runtime.Remoting.Messaging.CallContextTest.CallContextPropagation_Thread" executed="True" success="True" time="0.001" asserts="2" />
                              <test-case name="MonoTests.System.Runtime.Remoting.Messaging.CallContextTest.CallContextPropagation_ThreadPool" executed="True" success="True" time="0.001" asserts="2" />
                              <test-case name="MonoTests.System.Runtime.Remoting.Messaging.CallContextTest.FreeNamedDataSlot_ShouldClearBothLogicalAndIllogicalData" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="MonoTests.System.Runtime.Remoting.Messaging.CallContextTest.FreeNamedDataSlot_ShouldClearIllogicalData" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="MonoTests.System.Runtime.Remoting.Messaging.CallContextTest.FreeNamedDataSlot_ShouldClearLogicalData" executed="True" success="True" time="0.000" asserts="2" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="Metadata" success="True" time="0.004" asserts="0">
                        <results>
                          <test-suite name="W3cXsd2001" success="True" time="0.004" asserts="0">
                            <results>
                              <test-suite name="SoapHexBinaryTest" success="True" time="0.004" asserts="0">
                                <results>
                                  <test-case name="MonoTests.System.Runtime.Remoting.Metadata.W3cXsd2001.SoapHexBinaryTest.Constructor1" executed="True" success="True" time="0.001" asserts="2" />
                                  <test-case name="MonoTests.System.Runtime.Remoting.Metadata.W3cXsd2001.SoapHexBinaryTest.Constructor2" executed="True" success="True" time="0.001" asserts="8" />
                                  <test-case name="MonoTests.System.Runtime.Remoting.Metadata.W3cXsd2001.SoapHexBinaryTest.Parse" executed="True" success="True" time="0.001" asserts="6" />
                                  <test-case name="MonoTests.System.Runtime.Remoting.Metadata.W3cXsd2001.SoapHexBinaryTest.Parse_Value_Invalid" executed="True" success="True" time="0.001" asserts="20" />
                                  <test-case name="MonoTests.System.Runtime.Remoting.Metadata.W3cXsd2001.SoapHexBinaryTest.Parse_Value_Null" executed="True" success="True" time="0.000" asserts="0" />
                                  <test-case name="MonoTests.System.Runtime.Remoting.Metadata.W3cXsd2001.SoapHexBinaryTest.Value" executed="True" success="True" time="0.000" asserts="3" />
                                  <test-case name="MonoTests.System.Runtime.Remoting.Metadata.W3cXsd2001.SoapHexBinaryTest.XsdType" executed="True" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="SoapServicesTest" success="True" time="0.068" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Runtime.Remoting.SoapServicesTest.TestGetInteropType" executed="True" success="True" time="0.065" asserts="8" />
                          <test-case name="MonoTests.System.Runtime.Remoting.SoapServicesTest.TestGetXmlType" executed="True" success="True" time="0.001" asserts="20" />
                          <test-case name="MonoTests.System.Runtime.Remoting.SoapServicesTest.TestSoapFields" executed="True" success="True" time="0.001" asserts="6" />
                        </results>
                      </test-suite>
                      <test-suite name="SynchronizationAttributeTest" success="True" time="16.567" asserts="0">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                        <results>
                          <test-case name="MonoTests.System.Runtime.Remoting.SynchronizationAttributeTest.TestCallback" executed="True" success="True" time="2.013" asserts="2" />
                          <test-case name="MonoTests.System.Runtime.Remoting.SynchronizationAttributeTest.TestLocked1" executed="True" success="True" time="2.008" asserts="2" />
                          <test-case name="MonoTests.System.Runtime.Remoting.SynchronizationAttributeTest.TestLocked2" executed="True" success="True" time="1.204" asserts="2" />
                          <test-case name="MonoTests.System.Runtime.Remoting.SynchronizationAttributeTest.TestLocked3" executed="True" success="True" time="5.002" asserts="0" />
                          <test-case name="MonoTests.System.Runtime.Remoting.SynchronizationAttributeTest.TestMonitorWait" executed="True" success="True" time="1.103" asserts="4">
                            <categories>
                              <category name="MobileNotWorking" />
                              <category name="NotDotNet" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Runtime.Remoting.SynchronizationAttributeTest.TestNoReentry" executed="True" success="True" time="2.009" asserts="2" />
                          <test-case name="MonoTests.System.Runtime.Remoting.SynchronizationAttributeTest.TestNotSupported" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Runtime.Remoting.SynchronizationAttributeTest.TestReentry" executed="True" success="True" time="1.204" asserts="2" />
                          <test-case name="MonoTests.System.Runtime.Remoting.SynchronizationAttributeTest.TestRequired" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.Runtime.Remoting.SynchronizationAttributeTest.TestRequiresNew" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Runtime.Remoting.SynchronizationAttributeTest.TestSupported" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Runtime.Remoting.SynchronizationAttributeTest.TestSynchronization" executed="True" success="True" time="2.007" asserts="2" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Serialization" success="True" time="0.430" asserts="0">
                    <results>
                      <test-suite name="ArraySerializationTest" success="True" time="0.296" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Runtime.Serialization.ArraySerializationTest.TestBoolArray" executed="True" success="True" time="0.004" asserts="2001" />
                          <test-case name="MonoTests.System.Runtime.Serialization.ArraySerializationTest.TestByteArray" executed="True" success="True" time="0.020" asserts="10001" />
                          <test-case name="MonoTests.System.Runtime.Serialization.ArraySerializationTest.TestCharArray" executed="True" success="True" time="0.004" asserts="2001" />
                          <test-case name="MonoTests.System.Runtime.Serialization.ArraySerializationTest.TestDateTimeArray" executed="True" success="True" time="0.020" asserts="10001" />
                          <test-case name="MonoTests.System.Runtime.Serialization.ArraySerializationTest.TestDecimalArray" executed="True" success="True" time="0.005" asserts="2001" />
                          <test-case name="MonoTests.System.Runtime.Serialization.ArraySerializationTest.TestDoubleArray" executed="True" success="True" time="0.020" asserts="10001" />
                          <test-case name="MonoTests.System.Runtime.Serialization.ArraySerializationTest.TestFloatArray" executed="True" success="True" time="0.019" asserts="10001" />
                          <test-case name="MonoTests.System.Runtime.Serialization.ArraySerializationTest.TestIntArray" executed="True" success="True" time="0.018" asserts="10001" />
                          <test-case name="MonoTests.System.Runtime.Serialization.ArraySerializationTest.TestLongArray" executed="True" success="True" time="0.020" asserts="10001" />
                          <test-case name="MonoTests.System.Runtime.Serialization.ArraySerializationTest.TestSByteArray" executed="True" success="True" time="0.019" asserts="10001" />
                          <test-case name="MonoTests.System.Runtime.Serialization.ArraySerializationTest.TestShortArray" executed="True" success="True" time="0.019" asserts="10001" />
                          <test-case name="MonoTests.System.Runtime.Serialization.ArraySerializationTest.TestStringArray" executed="True" success="True" time="0.052" asserts="10001" />
                          <test-case name="MonoTests.System.Runtime.Serialization.ArraySerializationTest.TestUIntArray" executed="True" success="True" time="0.019" asserts="10001" />
                          <test-case name="MonoTests.System.Runtime.Serialization.ArraySerializationTest.TestULongArray" executed="True" success="True" time="0.019" asserts="10001" />
                          <test-case name="MonoTests.System.Runtime.Serialization.ArraySerializationTest.TestUShortArray" executed="True" success="True" time="0.019" asserts="10001" />
                        </results>
                      </test-suite>
                      <test-suite name="Formatters" success="True" time="0.030" asserts="0">
                        <results>
                          <test-suite name="Binary" success="True" time="0.028" asserts="0">
                            <results>
                              <test-suite name="BinaryFormatterTest" success="True" time="0.027" asserts="0">
                                <results>
                                  <test-case name="MonoTests.System.Runtime.Serialization.Formatters.Binary.BinaryFormatterTest.Constructor" executed="True" success="True" time="0.001" asserts="6" />
                                  <test-case name="MonoTests.System.Runtime.Serialization.Formatters.Binary.BinaryFormatterTest.Constructor_Default" executed="True" success="True" time="0.001" asserts="6" />
                                  <test-case name="MonoTests.System.Runtime.Serialization.Formatters.Binary.BinaryFormatterTest.DateTimeArray" executed="True" success="True" time="0.001" asserts="7" />
                                  <test-case name="MonoTests.System.Runtime.Serialization.Formatters.Binary.BinaryFormatterTest.GenericArray" executed="True" success="True" time="0.002" asserts="2" />
                                  <test-case name="MonoTests.System.Runtime.Serialization.Formatters.Binary.BinaryFormatterTest.Inheritance" executed="True" success="True" time="0.002" asserts="10" />
                                  <test-case name="MonoTests.System.Runtime.Serialization.Formatters.Binary.BinaryFormatterTest.NestedObjectReference" executed="True" success="True" time="0.002" asserts="4" />
                                  <test-case name="MonoTests.System.Runtime.Serialization.Formatters.Binary.BinaryFormatterTest.NestedObjectReferences" executed="True" success="True" time="0.003" asserts="1" />
                                  <test-case name="MonoTests.System.Runtime.Serialization.Formatters.Binary.BinaryFormatterTest.SerializationBindToName" executed="True" success="True" time="0.002" asserts="2" />
                                  <test-case name="MonoTests.System.Runtime.Serialization.Formatters.Binary.BinaryFormatterTest.SerializationBindToName2" executed="True" success="True" time="0.001" asserts="2" />
                                  <test-case name="MonoTests.System.Runtime.Serialization.Formatters.Binary.BinaryFormatterTest.SerializationRoundtrip" executed="True" success="True" time="0.001" asserts="2" />
                                  <test-case name="MonoTests.System.Runtime.Serialization.Formatters.Binary.BinaryFormatterTest.SerializationUnsafeRoundtrip" executed="True" success="True" time="0.001" asserts="2" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="ObjectManagerTest" success="True" time="0.006" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Runtime.Serialization.ObjectManagerTest.TestSerialization" executed="True" success="True" time="0.006" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="SerializationBinderTest" success="True" time="0.001" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Runtime.Serialization.SerializationBinderTest.BindToName" executed="True" success="True" time="0.001" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="SerializationCallbackTest" success="True" time="0.021" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Runtime.Serialization.SerializationCallbackTest.Test" executed="True" success="True" time="0.006" asserts="20" />
                          <test-case name="MonoTests.System.Runtime.Serialization.SerializationCallbackTest.TestInheritance" executed="True" success="True" time="0.002" asserts="22" />
                          <test-case name="MonoTests.System.Runtime.Serialization.SerializationCallbackTest.TestISerializable" executed="True" success="True" time="0.001" asserts="20" />
                        </results>
                      </test-suite>
                      <test-suite name="SerializationInfoTest" success="True" time="0.006" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Runtime.Serialization.SerializationInfoTest.IsAssemblyNameSetExplicit" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Runtime.Serialization.SerializationInfoTest.IsFullTypeNameSetExplicit" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Runtime.Serialization.SerializationInfoTest.ObjectType" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Runtime.Serialization.SerializationInfoTest.SetType" executed="True" success="True" time="0.001" asserts="10" />
                        </results>
                      </test-suite>
                      <test-suite name="SerializationTest" success="True" time="0.055" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Runtime.Serialization.SerializationTest.TestSerialization" executed="True" success="True" time="0.054" asserts="2203">
                            <categories>
                              <category name="MobileNotWorking" />
                            </categories>
                          </test-case>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Serialization2" success="True" time="0.001" asserts="0">
                    <results>
                      <test-suite name="SerializationTest2" success="True" time="0.001" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Runtime.Serialization2.SerializationTest2.TestSerialization" executed="True" success="True" time="0.001" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Versioning" success="True" time="0.140" asserts="0">
                    <results>
                      <test-suite name="ResourceConsumptionAttributeTest" success="True" time="0.002" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Runtime.Versioning.ResourceConsumptionAttributeTest.Constructor1" executed="True" success="True" time="0.001" asserts="14" />
                          <test-case name="MonoTests.System.Runtime.Versioning.ResourceConsumptionAttributeTest.Constructor2" executed="True" success="True" time="0.001" asserts="98" />
                          <test-case name="MonoTests.System.Runtime.Versioning.ResourceConsumptionAttributeTest.InvalidResourceScope1" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Runtime.Versioning.ResourceConsumptionAttributeTest.InvalidResourceScope2" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="ResourceExposureAttributeTest" success="True" time="0.018" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Runtime.Versioning.ResourceExposureAttributeTest.Constructor1" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Runtime.Versioning.ResourceExposureAttributeTest.InvalidResourceScope1" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="TargetFrameworkAttributeTest" success="True" time="0.003" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Runtime.Versioning.TargetFrameworkAttributeTest.Constructor_String" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Runtime.Versioning.TargetFrameworkAttributeTest.FrameworkDisplayName" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="VersioningHelperTest" success="True" time="0.113" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Runtime.Versioning.VersioningHelperTest.ConvertTo_AppDomain" executed="True" success="True" time="0.002" asserts="4" />
                          <test-case name="MonoTests.System.Runtime.Versioning.VersioningHelperTest.ConvertTo_AppDomain_Process" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Runtime.Versioning.VersioningHelperTest.ConvertTo_Process" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Runtime.Versioning.VersioningHelperTest.From_Invalid" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Runtime.Versioning.VersioningHelperTest.MakeVersionSafeName" executed="True" success="True" time="0.102" asserts="4096" />
                          <test-case name="MonoTests.System.Runtime.Versioning.VersioningHelperTest.MakeVersionSafeName_SingleUnWorking" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Runtime.Versioning.VersioningHelperTest.Name_Null" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Runtime.Versioning.VersioningHelperTest.To_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Runtime.Versioning.VersioningHelperTest.Type_Null" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="RuntimeFieldHandleTest" success="True" time="0.002" asserts="0">
                <results>
                  <test-case name="MonoTests.System.RuntimeFieldHandleTest.Serialization_Of_Empty_Handle" executed="True" success="True" time="0.001" asserts="0" />
                </results>
              </test-suite>
              <test-suite name="RuntimeMethodHandleTest" success="True" time="0.005" asserts="0">
                <results>
                  <test-case name="MonoTests.System.RuntimeMethodHandleTest.Equals_Object" executed="True" success="True" time="0.001" asserts="8" />
                  <test-case name="MonoTests.System.RuntimeMethodHandleTest.Equals_RuntimeMethodHandle" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.RuntimeMethodHandleTest.Operators" executed="True" success="True" time="0.001" asserts="12" />
                  <test-case name="MonoTests.System.RuntimeMethodHandleTest.Serialization_Of_Empty_Handle" executed="True" success="True" time="0.001" asserts="0" />
                </results>
              </test-suite>
              <test-suite name="RuntimeTypeHandleTest" success="True" time="0.001" asserts="0">
                <results>
                  <test-case name="MonoTests.System.RuntimeTypeHandleTest.GetModuleHandle_Of_Empty_Handle" executed="True" success="True" time="0.000" asserts="0">
                    <categories>
                      <category name="NotDotNet" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.RuntimeTypeHandleTest.Serialization_Of_Empty_Handle" executed="True" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
              <test-suite name="SByteTest" success="True" time="0.016" asserts="0">
                <results>
                  <test-case name="MonoTests.System.SByteTest.Bug3677" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.SByteTest.Parse_MinMax" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.SByteTest.TestCompareTo" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.SByteTest.TestEquals" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.SByteTest.TestGetHashCode" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.SByteTest.TestMinMax" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.SByteTest.TestParse" executed="True" success="True" time="0.002" asserts="12" />
                  <test-case name="MonoTests.System.SByteTest.TestToString" executed="True" success="True" time="0.002" asserts="20" />
                  <test-case name="MonoTests.System.SByteTest.ToString_Defaults" executed="True" success="True" time="0.001" asserts="7" />
                </results>
              </test-suite>
              <test-suite name="Security" success="True" time="19.006" asserts="0">
                <results>
                  <test-suite name="AccessControl" success="True" time="0.310" asserts="0">
                    <results>
                      <test-suite name="AclTest" success="True" time="0.012" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.AccessControl.AclTest.GetBinaryForm" executed="True" success="True" time="0.010" asserts="2" />
                          <test-case name="MonoTests.System.Security.AccessControl.AclTest.NonNegativeCapacity" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="AuthorizationRuleTest" success="True" time="0.007" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.AccessControl.AuthorizationRuleTest.AcceptNTAccount" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.AccessControl.AuthorizationRuleTest.AcceptSecurityIdentifier" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.AccessControl.AuthorizationRuleTest.AcceptValidFlags" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.AccessControl.AuthorizationRuleTest.ThrowOnBadInheritanceFlags" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.AccessControl.AuthorizationRuleTest.ThrowOnBadPropagationFlags" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.AccessControl.AuthorizationRuleTest.ThrowOnZeroAccessMask" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="CommonAceTest" success="True" time="0.002" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.AccessControl.CommonAceTest.GetBinaryForm" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonAceTest.MaxOpaqueLength" executed="True" success="True" time="0.000" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite name="CommonAclTest" success="True" time="0.041" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.AccessControl.CommonAclTest.BinaryRoundtrip" executed="True" success="True" time="0.011" asserts="181" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonAclTest.ContiguousRangeSorting" executed="True" success="True" time="0.002" asserts="11" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonAclTest.DetectsCanonicalMergesAndRemovesInheritedAces" executed="True" success="True" time="0.002" asserts="14" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonAclTest.DetectsNonCanonicalAndDoesNotMerge" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonAclTest.DoesNotMergeOrEvaluateOrderingForInherited" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonAclTest.EmptyBinaryFormDSOK" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonAclTest.EmptyBinaryFormOK" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonAclTest.EmptyBinaryLengthOK" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonAclTest.GuidEmptyMergesRegardlessOfFlagsAndOpaqueDataIsNotConsidered" executed="True" success="True" time="0.001" asserts="11" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonAclTest.IndexerMakesCopies" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonAclTest.InheritanceFlagsAreClearedBeforeMergeCheckingWhenNotContainer" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonAclTest.InheritanceFlagsDoNotMergeForAccessMasksThatAND" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonAclTest.InheritanceFlagsMergeForAccessMasksThatMatch" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonAclTest.MergesAfterSortingForMultipleSids" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonAclTest.NullRawAclRevisionOK" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonAclTest.RemovesMeaninglessAces" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonAclTest.RevisionDSOK" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonAclTest.RevisionOK" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonAclTest.SetterNotSupported" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonAclTest.UsesRawAclRevision" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="CommonObjectSecurityTest" success="True" time="0.019" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.AccessControl.CommonObjectSecurityTest.AddAndGetAccessRulesWorkAndMergeCorrectly" executed="True" success="True" time="0.010" asserts="12" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonObjectSecurityTest.AddAndPurgeWorks" executed="True" success="True" time="0.002" asserts="4" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonObjectSecurityTest.Defaults" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonObjectSecurityTest.ResetAccessRuleCausesExactlyOneModifyAccessCall" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="CommonSecurityDescriptorTest" success="True" time="0.036" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.AccessControl.CommonSecurityDescriptorTest.AefaModifiedFlagIsStoredOnDiscretionaryAcl" executed="True" success="True" time="0.007" asserts="4" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonSecurityDescriptorTest.AefaRoundtrip" executed="True" success="True" time="0.003" asserts="2" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonSecurityDescriptorTest.ContainerAndDSConsistencyEnforcedA" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonSecurityDescriptorTest.ContainerAndDSConsistencyEnforcedB" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonSecurityDescriptorTest.ContainerAndDSConsistencyEnforcedInSetter" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonSecurityDescriptorTest.DaclPresent" executed="True" success="True" time="0.001" asserts="11" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonSecurityDescriptorTest.DefaultDaclIsAllowEveryoneFullAccess" executed="True" success="True" time="0.002" asserts="18" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonSecurityDescriptorTest.DefaultOwnerAndGroup" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonSecurityDescriptorTest.GetBinaryForm" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonSecurityDescriptorTest.GetBinaryFormNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonSecurityDescriptorTest.GetBinaryFormOffset" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonSecurityDescriptorTest.GetSddlFormAefaRemovesDacl" executed="True" success="True" time="0.001" asserts="16" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonSecurityDescriptorTest.OwnerAndGroupAreReferences" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonSecurityDescriptorTest.ProtectionChangesFlags" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonSecurityDescriptorTest.ProtectionPreserveInheritanceIgnoredUnlessProtectedTrue" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonSecurityDescriptorTest.PurgeDefaultDacl" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonSecurityDescriptorTest.PurgeNullSaclWithoutError" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.AccessControl.CommonSecurityDescriptorTest.SaclPresent" executed="True" success="True" time="0.001" asserts="10" />
                        </results>
                      </test-suite>
                      <test-suite name="CryptoKeyAccessRuleTest" success="True" time="0.002" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.AccessControl.CryptoKeyAccessRuleTest.StringOverloadIsNotSID" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.AccessControl.CryptoKeyAccessRuleTest.StringOverloadIsNTAccount" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="DirectoryObjectSecurityTest" success="True" time="0.023" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.AccessControl.DirectoryObjectSecurityTest.ChecksAccessControlModificationRange" executed="True" success="True" time="0.009" asserts="0" />
                          <test-case name="MonoTests.System.Security.AccessControl.DirectoryObjectSecurityTest.ConstructorFailsOnNullDescriptor" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.AccessControl.DirectoryObjectSecurityTest.ConstructorLetsFalseDSThrough" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.AccessControl.DirectoryObjectSecurityTest.Defaults" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.AccessControl.DirectoryObjectSecurityTest.FactoryWithGuidsThrowsNotImplementedByDefault" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Security.AccessControl.DirectoryObjectSecurityTest.FactoryWithoutGuidsCalledWhenNotObjectAce" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.AccessControl.DirectoryObjectSecurityTest.IgnoresResetOnAuditAndReturnsTrue" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="MonoTests.System.Security.AccessControl.DirectoryObjectSecurityTest.LocksAreEnforced" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.AccessControl.DirectoryObjectSecurityTest.ObjectSecurityJustWrapsCommonSecurityDescriptor" executed="True" success="True" time="0.001" asserts="5" />
                        </results>
                      </test-suite>
                      <test-suite name="DirectorySecurityTest" success="True" time="0.003" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.AccessControl.DirectorySecurityTest.InheritedPermissions" executed="False">
                            <reason>
                              <message><![CDATA[]]></message>
                            </reason>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite name="DiscretionaryAclTest" success="True" time="0.023" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.AccessControl.DiscretionaryAclTest.AddAccessCommonAce" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.AccessControl.DiscretionaryAclTest.AddAccessCommonAceUsingDSOverload" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.AccessControl.DiscretionaryAclTest.AddAccessFailsOnNonCanonical" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.AccessControl.DiscretionaryAclTest.AddAccessObjectAceAndCommonAce" executed="True" success="True" time="0.002" asserts="11" />
                          <test-case name="MonoTests.System.Security.AccessControl.DiscretionaryAclTest.AddAccessObjectAceNonDSFailsEvenIfObjectAceFlagsNoneImplyingCommonAce" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.AccessControl.DiscretionaryAclTest.InheritanceFlagsRequireContainer" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.AccessControl.DiscretionaryAclTest.InvalidAccessControlType" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.AccessControl.DiscretionaryAclTest.PropagationFlagsDoNotRequireInheritanceFlagsForRemoveSpecific" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.AccessControl.DiscretionaryAclTest.PropagationFlagsRequireInheritanceFlagsForAdd" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.AccessControl.DiscretionaryAclTest.RemoveSpecific" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.AccessControl.DiscretionaryAclTest.RemoveSpecificIgnoresPropagationFlagsWhenMatchingInheritanceFlagsNone" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.AccessControl.DiscretionaryAclTest.RemoveSpecificIsContainer" executed="True" success="True" time="0.000" asserts="7" />
                          <test-case name="MonoTests.System.Security.AccessControl.DiscretionaryAclTest.RemoveSpecificUsingDSOverload" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.AccessControl.DiscretionaryAclTest.SetAccess" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.AccessControl.DiscretionaryAclTest.StartsEmpty" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="EventWaitHandleSecurityTest" success="True" time="0.002" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.AccessControl.EventWaitHandleSecurityTest.PermissionsActuallyWork" executed="False">
                            <reason>
                              <message><![CDATA[]]></message>
                            </reason>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite name="FileSecurityTest" success="True" time="0.005" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.AccessControl.FileSecurityTest.ChangeAccessRules" executed="False">
                            <reason>
                              <message><![CDATA[]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Security.AccessControl.FileSecurityTest.ChangeGroupToEveryone" executed="False">
                            <reason>
                              <message><![CDATA[]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Security.AccessControl.FileSecurityTest.EveryoneMayNotBeOwner" executed="False">
                            <reason>
                              <message><![CDATA[]]></message>
                            </reason>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite name="MutexAccessRuleTest" success="True" time="0.001" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.AccessControl.MutexAccessRuleTest.ConstructsWithoutCrashingAndRemembersRights" executed="True" success="True" time="0.001" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="MutexSecurityTest" success="True" time="0.007" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.AccessControl.MutexSecurityTest.CanSetAndGetMutexSecurity" executed="False">
                            <reason>
                              <message><![CDATA[]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Security.AccessControl.MutexSecurityTest.FailsForNonexistantMutex" executed="False">
                            <reason>
                              <message><![CDATA[]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Security.AccessControl.MutexSecurityTest.PermissionsActuallyWork" executed="False">
                            <reason>
                              <message><![CDATA[]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Security.AccessControl.MutexSecurityTest.SucceedsForExistingMutex" executed="False">
                            <reason>
                              <message><![CDATA[]]></message>
                            </reason>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite name="ObjectAceTest" success="True" time="0.003" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.AccessControl.ObjectAceTest.BinaryRoundtrip" executed="True" success="True" time="0.002" asserts="276" />
                          <test-case name="MonoTests.System.Security.AccessControl.ObjectAceTest.BlobMatchesMSNet" executed="True" success="True" time="0.000" asserts="276" />
                        </results>
                      </test-suite>
                      <test-suite name="ObjectSecurity_TTest" success="True" time="0.015" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.AccessControl.ObjectSecurity_TTest.TypesAreCorrect" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.AccessControl.ObjectSecurity_TTest.WillFailFailsUsingConstructor" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.AccessControl.ObjectSecurity_TTest.WillFailFailsUsingFactoryOnGetter" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.AccessControl.ObjectSecurity_TTest.WillWorkOKUsingAccessFactory" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.AccessControl.ObjectSecurity_TTest.WillWorkOKUsingConstructor" executed="True" success="True" time="0.001" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="ObjectSecurityTest" success="True" time="0.018" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.AccessControl.ObjectSecurityTest.AllTypesAcceptedOnGetGroupOwnerUntilTheyAreSet" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Security.AccessControl.ObjectSecurityTest.Defaults" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Security.AccessControl.ObjectSecurityTest.DefaultsForSddlAndBinary" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.AccessControl.ObjectSecurityTest.ModifyAccessRuleAllowsDerivedTypeAndCallsModifyAccessButNothingChanges" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.AccessControl.ObjectSecurityTest.ModifyAccessRuleThrowsOnWrongType" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.AccessControl.ObjectSecurityTest.Protection" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.AccessControl.ObjectSecurityTest.PurgeThrowsOnNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.AccessControl.ObjectSecurityTest.Reset" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.AccessControl.ObjectSecurityTest.SetGroupThrowsOnNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.AccessControl.ObjectSecurityTest.SetOwnerThrowsOnNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.AccessControl.ObjectSecurityTest.SetSddlForm" executed="True" success="True" time="0.002" asserts="4" />
                          <test-case name="MonoTests.System.Security.AccessControl.ObjectSecurityTest.SetSddlFormAllowsFlags" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="RawSecurityDescriptorTest" success="True" time="0.022" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.AccessControl.RawSecurityDescriptorTest.ConstructorBinary" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Security.AccessControl.RawSecurityDescriptorTest.ConstructorEmptyString" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.AccessControl.RawSecurityDescriptorTest.ConstructorString" executed="True" success="True" time="0.003" asserts="12" />
                          <test-case name="MonoTests.System.Security.AccessControl.RawSecurityDescriptorTest.FlagMismatch" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.AccessControl.RawSecurityDescriptorTest.GetBinaryForm" executed="True" success="True" time="0.002" asserts="3" />
                          <test-case name="MonoTests.System.Security.AccessControl.RawSecurityDescriptorTest.GetSddlForm" executed="True" success="True" time="0.002" asserts="7" />
                          <test-case name="MonoTests.System.Security.AccessControl.RawSecurityDescriptorTest.RoundTrip" executed="True" success="True" time="0.001" asserts="7" />
                        </results>
                      </test-suite>
                      <test-suite name="RegistrySecurityTest" success="True" time="0.007" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.AccessControl.RegistrySecurityTest.ChangeGroupToEveryone" executed="False">
                            <reason>
                              <message><![CDATA[]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Security.AccessControl.RegistrySecurityTest.EveryoneCanRead" executed="False">
                            <reason>
                              <message><![CDATA[]]></message>
                            </reason>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite name="SystemAclTest" success="True" time="0.022" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.AccessControl.SystemAclTest.AddAuditCommonAce" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.AccessControl.SystemAclTest.AddAuditCommonAceUsingDSOverload" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.AccessControl.SystemAclTest.AddAuditMergesFlags" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.AccessControl.SystemAclTest.AddAuditObjectAceAndCommonAce" executed="True" success="True" time="0.002" asserts="11" />
                          <test-case name="MonoTests.System.Security.AccessControl.SystemAclTest.RemoveSpecific" executed="True" success="True" time="0.002" asserts="7" />
                          <test-case name="MonoTests.System.Security.AccessControl.SystemAclTest.RemoveSpecificUsingDSOverload" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.Security.AccessControl.SystemAclTest.SetAudit" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Security.AccessControl.SystemAclTest.StartsEmpty" executed="True" success="True" time="0.001" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Claims" success="True" time="0.002" asserts="0">
                    <results>
                      <test-suite name="ClaimsIdentityTest" success="True" time="0.002" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Claims.ClaimsIdentityTest.EmptyCtorWorks" executed="True" success="True" time="0.001" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Cryptography" success="True" time="15.340" asserts="0">
                    <results>
                      <test-suite name="AesCfbTests" success="True" time="0.032" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.AesCfbTests.Roundtrip" executed="True" success="True" time="0.031" asserts="854" />
                        </results>
                      </test-suite>
                      <test-suite name="AsymmetricAlgorithmTest" success="True" time="0.001" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.AsymmetricAlgorithmTest.TestProperties" executed="True" success="True" time="0.001" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="CipherModeTest" success="True" time="0.048" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.CipherModeTest.CipherModeEnum" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Security.Cryptography.CipherModeTest.DES_CBC" executed="True" success="True" time="0.005" asserts="17" />
                          <test-case name="MonoTests.System.Security.Cryptography.CipherModeTest.DES_CFB" executed="True" success="True" time="0.000" asserts="17" />
                          <test-case name="MonoTests.System.Security.Cryptography.CipherModeTest.DES_CTS" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CipherModeTest.DES_ECB" executed="True" success="True" time="0.000" asserts="17" />
                          <test-case name="MonoTests.System.Security.Cryptography.CipherModeTest.DES_OFB" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CipherModeTest.RC2_CBC" executed="True" success="True" time="0.004" asserts="17" />
                          <test-case name="MonoTests.System.Security.Cryptography.CipherModeTest.RC2_CFB" executed="True" success="True" time="0.000" asserts="17" />
                          <test-case name="MonoTests.System.Security.Cryptography.CipherModeTest.RC2_CTS" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CipherModeTest.RC2_ECB" executed="True" success="True" time="0.001" asserts="17" />
                          <test-case name="MonoTests.System.Security.Cryptography.CipherModeTest.RC2_OFB" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CipherModeTest.Rijndael_CBC" executed="True" success="True" time="0.010" asserts="33" />
                          <test-case name="MonoTests.System.Security.Cryptography.CipherModeTest.Rijndael_CFB" executed="True" success="True" time="0.001" asserts="33" />
                          <test-case name="MonoTests.System.Security.Cryptography.CipherModeTest.Rijndael_CTS" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CipherModeTest.Rijndael_ECB" executed="True" success="True" time="0.000" asserts="33" />
                          <test-case name="MonoTests.System.Security.Cryptography.CipherModeTest.Rijndael_OFB" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CipherModeTest.TripleDES_CBC" executed="True" success="True" time="0.003" asserts="17" />
                          <test-case name="MonoTests.System.Security.Cryptography.CipherModeTest.TripleDES_CFB" executed="True" success="True" time="0.000" asserts="17" />
                          <test-case name="MonoTests.System.Security.Cryptography.CipherModeTest.TripleDES_CTS" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CipherModeTest.TripleDES_ECB" executed="True" success="True" time="0.000" asserts="17" />
                          <test-case name="MonoTests.System.Security.Cryptography.CipherModeTest.TripleDES_OFB" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="CryptoConfigTest" success="True" time="0.078" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoConfigTest.CCToString" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoConfigTest.CreateFromName" executed="True" success="True" time="0.009" asserts="59" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoConfigTest.CreateFromName_LowerCase" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoConfigTest.CreateFromName_MixedCase" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoConfigTest.CreateFromName_UpperCase" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoConfigTest.CreateFromNameNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoConfigTest.CreateFromURL" executed="True" success="True" time="0.037" asserts="25" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoConfigTest.EncodeOID" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoConfigTest.EncodeOID_BiggerThan127bytes" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoConfigTest.EncodeOID_BiggerThanInt32" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoConfigTest.EncodeOID_InvalidSecondPart" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoConfigTest.EncodeOID_InvalidStart" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoConfigTest.EncodeOID_TooShort" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoConfigTest.EncodeOIDNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoConfigTest.MapNameToOID" executed="True" success="True" time="0.001" asserts="56" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoConfigTest.MapNameToOID_LowerCase" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoConfigTest.MapNameToOID_MixedCase" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoConfigTest.MapNameToOID_UpperCase" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoConfigTest.MapNameToOIDNull" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="CryptoStreamTest" success="True" time="0.120" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.CascadedCryptoStream_Write" executed="True" success="True" time="0.006" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.Compress" executed="True" success="True" time="0.003" asserts="4" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.Ctor_InvalidEnumValue" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.CustomDisposeCalled" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.DecryptorWriteBlocks" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.DecryptPartial_TransformFinalBlock_required" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.EmptyStreamWithPaddingNone" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.EmptyStreamWithPaddingPKCS7" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.EmptyStreamWithPaddingZeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.EncryptOnRead" executed="True" success="True" time="0.009" asserts="62" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.EncryptorWriteBlocks" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.Expand" executed="True" success="True" time="0.002" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.ExplicitFlush" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.FlushFinalBlock_Disposed" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.FlushFinalBlock_Dual" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.FlushFinalBlockReadStream" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.FlushReadStream" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.FromBase64_Read" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.FromBase64_Write" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.FullRoundtripRead" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.GetLength" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.GetPosition" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.ImplicitFlush" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.ImplicitFlushCascade" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.MultiblocksWithPartial" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.NonMultipleOfBlockSize" executed="True" success="True" time="0.008" asserts="5" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.OutputBlock_Smaller" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.PaddingModeNone" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.PartialRoundtripRead" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.PreGeneratedStreams" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.Read_Disposed" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.Read_EmptyBuffer_ZeroCount" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.Read_InvalidOffset" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.Read_NegativeCount" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.Read_NegativeOffset" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.Read_NullBuffer" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.Read_OverflowCount" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.Read_OverflowOffset" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.Read_WriteStream" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.Read_ZeroCount" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.ReadModeDispose_FinalBlock" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.Seek" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.SetLength" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.SetPosition" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.StreamNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.StreamReadModeRead" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.StreamReadModeWrite" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.StreamWriteModeRead" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.StreamWriteModeWrite" executed="True" success="True" time="0.008" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.ToBase64_Read" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.ToBase64_Write" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.TransformNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.Write_EmptyBuffer_ZeroCount" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.Write_InvalidOffset" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.Write_NegativeCount" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.Write_NegativeOffset" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.Write_NullBuffer" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.Write_OverflowCount" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.Write_OverflowOffset" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.Write_ReadStream" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.Write_ZeroCount" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.WriteByte" executed="True" success="True" time="0.001" asserts="15" />
                          <test-case name="MonoTests.System.Security.Cryptography.CryptoStreamTest.WriteOnBlockWithFinal" executed="True" success="True" time="0.001" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="CspProviderFlagsTest" success="True" time="0.002" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.CspProviderFlagsTest.Flags" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.CspProviderFlagsTest.Values" executed="True" success="True" time="0.000" asserts="8" />
                        </results>
                      </test-suite>
                      <test-suite name="DesCfbTests" success="True" time="0.003" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.DesCfbTests.Cfb_None" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.DesCfbTests.Roundtrip" executed="True" success="True" time="0.001" asserts="31" />
                        </results>
                      </test-suite>
                      <test-suite name="DESCryptoServiceProviderTest" success="True" time="0.026" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.DESCryptoServiceProviderTest.CreateDecryptor_IV_BlockSize" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESCryptoServiceProviderTest.CreateDecryptor_IV_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESCryptoServiceProviderTest.CreateDecryptor_IV_TooBig" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESCryptoServiceProviderTest.CreateDecryptor_IV_TooSmall" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESCryptoServiceProviderTest.CreateDecryptor_IV_Zero" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESCryptoServiceProviderTest.CreateDecryptor_IvNull" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESCryptoServiceProviderTest.CreateDecryptor_KeyIv" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESCryptoServiceProviderTest.CreateDecryptor_KeyNull" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESCryptoServiceProviderTest.CreateEncryptor_IV_BlockSize" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESCryptoServiceProviderTest.CreateEncryptor_IV_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESCryptoServiceProviderTest.CreateEncryptor_IV_TooBig" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESCryptoServiceProviderTest.CreateEncryptor_IV_TooSmall" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESCryptoServiceProviderTest.CreateEncryptor_IV_Zero" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESCryptoServiceProviderTest.CreateEncryptor_IvNull" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESCryptoServiceProviderTest.CreateEncryptor_KeyIv" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESCryptoServiceProviderTest.CreateEncryptor_KeyNull" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESCryptoServiceProviderTest.FIPS81_CBCMode" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESCryptoServiceProviderTest.FIPS81_CFB8Mode" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESCryptoServiceProviderTest.FIPS81_ECBMode" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESCryptoServiceProviderTest.IV" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESCryptoServiceProviderTest.KeyChecks" executed="True" success="True" time="0.000" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="DESTest" success="True" time="0.025" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.DESTest.DefaultProperties" executed="True" success="True" time="0.001" asserts="13" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTest.GetKey" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTest.IsSemiWeakKey_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTest.IsSemiWeakKey_WrongKeyLength" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTest.IsWeakKey_Null" executed="True" success="True" time="0.008" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTest.IsWeakKey_WrongKeyLength" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTest.SemiWeakKeys" executed="True" success="True" time="0.002" asserts="3072" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTest.SetKey_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTest.SetKey_SemiWeak" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTest.SetKey_Weak" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTest.SetKey_WrongLength" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTest.WeakKeys" executed="True" success="True" time="0.001" asserts="1024" />
                        </results>
                      </test-suite>
                      <test-suite name="DESTransformTest" success="True" time="0.172" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.CreateDecryptor_TransformBlock_One_ANSIX923_CBC" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.CreateDecryptor_TransformBlock_One_ANSIX923_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.CreateDecryptor_TransformBlock_One_ANSIX923_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.CreateDecryptor_TransformBlock_One_ISO10126_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.CreateDecryptor_TransformBlock_One_ISO10126_CFB" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.CreateDecryptor_TransformBlock_One_ISO10126_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.CreateDecryptor_TransformBlock_One_None_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.CreateDecryptor_TransformBlock_One_None_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.CreateDecryptor_TransformBlock_One_None_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.CreateDecryptor_TransformBlock_One_PKCS7_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.CreateDecryptor_TransformBlock_One_PKCS7_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.CreateDecryptor_TransformBlock_One_PKCS7_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.CreateDecryptor_TransformBlock_One_Zeros_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.CreateDecryptor_TransformBlock_One_Zeros_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.CreateDecryptor_TransformBlock_One_Zeros_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.CreateEncryptor_TransformBlock_One_ANSIX923_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.CreateEncryptor_TransformBlock_One_ANSIX923_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.CreateEncryptor_TransformBlock_One_ANSIX923_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.CreateEncryptor_TransformBlock_One_ISO10126_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.CreateEncryptor_TransformBlock_One_ISO10126_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.CreateEncryptor_TransformBlock_One_ISO10126_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.CreateEncryptor_TransformBlock_One_None_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.CreateEncryptor_TransformBlock_One_None_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.CreateEncryptor_TransformBlock_One_None_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.CreateEncryptor_TransformBlock_One_PKCS7_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.CreateEncryptor_TransformBlock_One_PKCS7_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.CreateEncryptor_TransformBlock_One_PKCS7_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.CreateEncryptor_TransformBlock_One_Zeros_CBC" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.CreateEncryptor_TransformBlock_One_Zeros_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.CreateEncryptor_TransformBlock_One_Zeros_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptLastBlock_CBC_ANSIX923" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptLastBlock_CBC_ISO10126" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptLastBlock_CBC_None" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptLastBlock_CBC_PKCS7" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptLastBlock_CBC_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptLastBlock_CFB_ANSIX923" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptLastBlock_CFB_ISO10126" executed="True" success="True" time="0.007" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptLastBlock_CFB_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptLastBlock_CFB_PKCS7" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptLastBlock_CFB_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptLastBlock_ECB_ANSIX923" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptLastBlock_ECB_ISO10126" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptLastBlock_ECB_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptLastBlock_ECB_PKCS7" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptLastBlock_ECB_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptLastBlock_Final_CBC_ANSIX923" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptLastBlock_Final_CBC_ISO10126" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptLastBlock_Final_CBC_None" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptLastBlock_Final_CBC_PKCS7" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptLastBlock_Final_CBC_Zeros" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptLastBlock_Final_CFB_ANSIX923" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptLastBlock_Final_CFB_ISO10126" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptLastBlock_Final_CFB_None" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptLastBlock_Final_CFB_PKCS7" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptLastBlock_Final_CFB_Zeros" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptLastBlock_Final_ECB_ANSIX923" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptLastBlock_Final_ECB_ISO10126" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptLastBlock_Final_ECB_None" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptLastBlock_Final_ECB_PKCS7" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptLastBlock_Final_ECB_Zeros" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptMultipleBlock_CBC_ANSIX923" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptMultipleBlock_CBC_ISO10126" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptMultipleBlock_CBC_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptMultipleBlock_CBC_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptMultipleBlock_CBC_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptMultipleBlock_CFB_ANSIX923" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptMultipleBlock_CFB_ISO10126" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptMultipleBlock_CFB_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptMultipleBlock_CFB_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptMultipleBlock_CFB_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptMultipleBlock_ECB_ANSIX923" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptMultipleBlock_ECB_ISO10126" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptMultipleBlock_ECB_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptMultipleBlock_ECB_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptMultipleBlock_ECB_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptMultipleBlock_Final_CBC_ANSIX923" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptMultipleBlock_Final_CBC_ISO10126" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptMultipleBlock_Final_CBC_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptMultipleBlock_Final_CBC_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptMultipleBlock_Final_CBC_Zeros" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptMultipleBlock_Final_CFB_ANSIX923" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptMultipleBlock_Final_CFB_ISO10126" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptMultipleBlock_Final_CFB_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptMultipleBlock_Final_CFB_PKCS7" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptMultipleBlock_Final_CFB_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptMultipleBlock_Final_ECB_ANSIX923" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptMultipleBlock_Final_ECB_ISO10126" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptMultipleBlock_Final_ECB_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptMultipleBlock_Final_ECB_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.DontDecryptMultipleBlock_Final_ECB_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.EncryptEncryptDecryptDecrypt_CBC_ANSIX923" executed="True" success="True" time="0.001" asserts="84" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.EncryptEncryptDecryptDecrypt_CBC_ISO10126" executed="True" success="True" time="0.000" asserts="84" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.EncryptEncryptDecryptDecrypt_CBC_None" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.EncryptEncryptDecryptDecrypt_CBC_PKCS7" executed="True" success="True" time="0.008" asserts="84" />
                          <test-case name="MonoTests.System.Security.Cryptography.DESTransformTest.EncryptEncryptDecryptDecrypt_CBC_Zeros" executed="True" success="True" time="0.001" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="DSACryptoServiceProviderTest" success="True" time="2.242" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.CapiSignature" executed="True" success="True" time="0.226" asserts="36" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.CapiVerify" executed="True" success="True" time="0.073" asserts="18" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.CapiXmlImportExport" executed="True" success="True" time="0.003" asserts="9" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.ConstructorCspParameters" executed="True" success="True" time="0.044" asserts="3">
                            <categories>
                              <category name="TargetJvmNotSupported" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.ConstructorEmpty" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.ConstructorKeySize" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.ConstructorKeySizeCspParameters" executed="True" success="True" time="0.000" asserts="3">
                            <categories>
                              <category name="TargetJvmNotSupported" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.CreateSignature" executed="True" success="True" time="0.234" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.CreateSignatureDisposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.CreateSignatureInvalidHashLength" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.DSAImportMissingG" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.DSAImportMissingJ" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.DSAImportMissingP" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.DSAImportMissingQ" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.DSAImportMissingSeed" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.DSAImportMissingY" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.ExportCspBlob_Full" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.ExportCspBlob_MissingPrivateKey" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.ExportCspBlob_MissingPrivateKey_PublicOnly" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.ExportCspBlob_PublicKey" executed="True" success="True" time="0.004" asserts="444" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.ExportCspBlob_PublicOnly" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.ExportDisposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.ImportCspBlob_Bad" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.ImportCspBlob_Keypair" executed="True" success="True" time="0.004" asserts="336" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.ImportCspBlob_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.KeyGeneration" executed="False">
                            <reason>
                              <message><![CDATA[Much too long (with MS as Mono doesn't generates the keypair unless it need it)]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.LimitedKeyGeneration" executed="True" success="True" time="0.244" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.MonoSignature" executed="True" success="True" time="0.215" asserts="36" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.MonoVerify" executed="True" success="True" time="0.079" asserts="18" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.MonoXmlImportExport" executed="True" success="True" time="0.002" asserts="9" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.Persistence_Delete" executed="True" success="True" time="0.202" asserts="1">
                            <categories>
                              <category name="TargetJvmNotSupported" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.Persistence_PersistKeyInCsp_False" executed="True" success="True" time="0.233" asserts="3">
                            <categories>
                              <category name="TargetJvmNotSupported" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.Persistence_PersistKeyInCsp_True" executed="True" success="True" time="0.001" asserts="2">
                            <categories>
                              <category name="TargetJvmNotSupported" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.PersistKey_False" executed="True" success="True" time="0.175" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.PersistKey_FalseTrue" executed="True" success="True" time="0.195" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.PersistKey_True" executed="True" success="True" time="0.173" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.Properties" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.SignData" executed="True" success="True" time="0.003" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.SignDataDisposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.SignHashDisposed" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.SignHashInvalidAlgorithm" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.TooBigKeyPair" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.TooSmallKeyPair" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.UseMachineKeyStore" executed="True" success="True" time="0.067" asserts="0">
                            <categories>
                              <category name="TargetJvmNotSupported" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.UseMachineKeyStore_Default" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.VerifyDataDisposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.VerifyHashDisposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.VerifyHashInvalidAlgorithm" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.VerifySignatureDisposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.VerifySignatureInvalidHashLength" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.VerifySignatureInvalidSignatureLength" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSACryptoServiceProviderTest.VerifySignatureWithoutKey" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="DSASignatureDeformatterTest" success="True" time="0.037" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.DSASignatureDeformatterTest.Constructor_DSA" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSASignatureDeformatterTest.Constructor_Empty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSASignatureDeformatterTest.Constructor_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSASignatureDeformatterTest.Constructor_RSA" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSASignatureDeformatterTest.SetHash_MD5" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSASignatureDeformatterTest.SetHash_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSASignatureDeformatterTest.SetHash_SHA1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSASignatureDeformatterTest.SetKey_DSA" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSASignatureDeformatterTest.SetKey_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSASignatureDeformatterTest.SetKey_RSA" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSASignatureDeformatterTest.Verify" executed="True" success="True" time="0.006" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSASignatureDeformatterTest.Verify_Bad" executed="True" success="True" time="0.006" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSASignatureDeformatterTest.Verify_NoKeyPair" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSASignatureDeformatterTest.Verify_NullHash" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSASignatureDeformatterTest.Verify_NullSignature" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="DSASignatureFormatterTest" success="True" time="0.024" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.DSASignatureFormatterTest.Constructor_DSA" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSASignatureFormatterTest.Constructor_Empty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSASignatureFormatterTest.Constructor_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSASignatureFormatterTest.Constructor_RSA" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSASignatureFormatterTest.SetHash_MD5" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSASignatureFormatterTest.SetHash_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSASignatureFormatterTest.SetHash_SHA1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSASignatureFormatterTest.SetKey_DSA" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSASignatureFormatterTest.SetKey_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSASignatureFormatterTest.SetKey_RSA" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSASignatureFormatterTest.Signature" executed="True" success="True" time="0.009" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSASignatureFormatterTest.Signature_NoKeyPair" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSASignatureFormatterTest.Signature_NullHash" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSASignatureFormatterTest.Signature_OnlyPublicKey" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="DSATest" success="True" time="1.131" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.DSATest.DSAImportPrivateExportPrivate" executed="True" success="True" time="0.003" asserts="9" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSATest.DSAImportPrivateExportPublic" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSATest.DSAImportPublicExportPrivate" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSATest.DSAImportPublicExportPublic" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSATest.FromXmlString_Embedded" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSATest.FromXmlString_EmbeddedTwoLevelWithExtraElement" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSATest.FromXmlString_InvalidTop" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSATest.FromXmlString_InvalidXml" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSATest.FromXmlString_TwoKeys" executed="True" success="True" time="1.103" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSATest.FromXmlStringNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSATest.ImportExportWithoutJ" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSATest.ImportExportWithoutY" executed="True" success="True" time="0.003" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSATest.ToXmlStringWithoutSeed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.DSATest.ToXmlStringWithZeroCounter" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="FromBase64TransformTest" success="True" time="0.043" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.FromBase64TransformTest.A0" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Cryptography.FromBase64TransformTest.A1" executed="True" success="True" time="0.000" asserts="7" />
                          <test-case name="MonoTests.System.Security.Cryptography.FromBase64TransformTest.A2" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Security.Cryptography.FromBase64TransformTest.A3" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Cryptography.FromBase64TransformTest.Dispose" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Security.Cryptography.FromBase64TransformTest.DontIgnore" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.FromBase64TransformTest.IgnoreCR" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Security.Cryptography.FromBase64TransformTest.IgnoreLF" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Security.Cryptography.FromBase64TransformTest.IgnoreSPACE" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Security.Cryptography.FromBase64TransformTest.IgnoreTAB" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Security.Cryptography.FromBase64TransformTest.InvalidData" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.FromBase64TransformTest.InvalidLength" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.FromBase64TransformTest.Properties" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Cryptography.FromBase64TransformTest.ReuseDisposedTransform" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.FromBase64TransformTest.ReuseDisposedTransformFinal" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.FromBase64TransformTest.ReuseTransform" executed="True" success="True" time="0.000" asserts="10" />
                          <test-case name="MonoTests.System.Security.Cryptography.FromBase64TransformTest.TransformBlock_Input_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.FromBase64TransformTest.TransformBlock_InputCount_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.FromBase64TransformTest.TransformBlock_InputCount_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.FromBase64TransformTest.TransformBlock_InputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.FromBase64TransformTest.TransformBlock_InputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.FromBase64TransformTest.TransformBlock_Output_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.FromBase64TransformTest.TransformBlock_OutputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.FromBase64TransformTest.TransformBlock_OutputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.FromBase64TransformTest.TransformFinalBlock_Input_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.FromBase64TransformTest.TransformFinalBlock_InputCount_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.FromBase64TransformTest.TransformFinalBlock_InputCount_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.FromBase64TransformTest.TransformFinalBlock_InputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.FromBase64TransformTest.TransformFinalBlock_InputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="HashAlgorithmTest" success="True" time="0.041" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.HashAlgorithmTest.Clear" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HashAlgorithmTest.Clear2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HashAlgorithmTest.ComputeHash_ArrayNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HashAlgorithmTest.ComputeHash_ArrayNullIntInt" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HashAlgorithmTest.ComputeHash_CountNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HashAlgorithmTest.ComputeHash_CountOverflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HashAlgorithmTest.ComputeHash_OffsetNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HashAlgorithmTest.ComputeHash_OffsetOverflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HashAlgorithmTest.Create" executed="True" success="True" time="0.001" asserts="17" />
                          <test-case name="MonoTests.System.Security.Cryptography.HashAlgorithmTest.CreateNull" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HashAlgorithmTest.Disposable" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HashAlgorithmTest.Hash_AfterInitialize_SecondTime" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HashAlgorithmTest.Hash_AfterTransformBlock" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HashAlgorithmTest.Hash_AfterTransformFinalBlock" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.HashAlgorithmTest.InitializeDisposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HashAlgorithmTest.InputOutputIntersection" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.HashAlgorithmTest.NullStream" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HashAlgorithmTest.TransformBlock_Disposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HashAlgorithmTest.TransformBlock_InputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HashAlgorithmTest.TransformBlock_InputCount_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HashAlgorithmTest.TransformBlock_InputCount_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HashAlgorithmTest.TransformBlock_InputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HashAlgorithmTest.TransformBlock_InputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HashAlgorithmTest.TransformBlock_OutputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HashAlgorithmTest.TransformBlock_OutputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HashAlgorithmTest.TransformBlock_OutputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HashAlgorithmTest.TransformFinalBlock_Disposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HashAlgorithmTest.TransformFinalBlock_InputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HashAlgorithmTest.TransformFinalBlock_InputCount_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HashAlgorithmTest.TransformFinalBlock_InputCount_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HashAlgorithmTest.TransformFinalBlock_InputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HashAlgorithmTest.TransformFinalBlock_InputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HashAlgorithmTest.TransformFinalBlock_ReturnedBuffer" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.HashAlgorithmTest.TransformFinalBlock_Twice_Initialize" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="HMACMD5Test" success="True" time="0.066" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.BlockSize" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.ChangeKey" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.Clear" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.Clear2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.ComputeHash_ArrayNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.ComputeHash_ArrayNullIntInt" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.ComputeHash_CountNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.ComputeHash_CountOverflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.ComputeHash_OffsetNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.ComputeHash_OffsetOverflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.Constructor_Null" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.Constructors" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.Create" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.CreateNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.Disposable" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.Hash_AfterInitialize_SecondTime" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.Hash_AfterTransformBlock" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.Hash_AfterTransformFinalBlock" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.InitializeDisposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.InputOutputIntersection" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.Invariants" executed="True" success="True" time="0.000" asserts="7" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.Key" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.NullStream" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.RFC2202_TC1" executed="True" success="True" time="0.004" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.RFC2202_TC2" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.RFC2202_TC3" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.RFC2202_TC4" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.RFC2202_TC5" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.RFC2202_TC6" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.RFC2202_TC7" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.TransformBlock_Disposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.TransformBlock_InputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.TransformBlock_InputCount_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.TransformBlock_InputCount_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.TransformBlock_InputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.TransformBlock_InputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.TransformBlock_OutputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.TransformBlock_OutputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.TransformBlock_OutputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.TransformFinalBlock_Disposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.TransformFinalBlock_InputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.TransformFinalBlock_InputCount_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.TransformFinalBlock_InputCount_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.TransformFinalBlock_InputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.TransformFinalBlock_InputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.TransformFinalBlock_ReturnedBuffer" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACMD5Test.TransformFinalBlock_Twice_Initialize" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="HMACRIPEMD160Test" success="True" time="0.799" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.BlockSize" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.ChangeKey" executed="True" success="True" time="0.006" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.Clear" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.Clear2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.ComputeHash_ArrayNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.ComputeHash_ArrayNullIntInt" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.ComputeHash_CountNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.ComputeHash_CountOverflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.ComputeHash_OffsetNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.ComputeHash_OffsetOverflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.Create" executed="True" success="True" time="0.000" asserts="7" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.CreateNull" executed="True" success="True" time="0.005" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.Disposable" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.Hash_AfterInitialize_SecondTime" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.Hash_AfterTransformBlock" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.Hash_AfterTransformFinalBlock" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.HMACRIPEMD160_Key1_Test1" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.HMACRIPEMD160_Key1_Test2" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.HMACRIPEMD160_Key1_Test3" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.HMACRIPEMD160_Key1_Test4" executed="True" success="True" time="0.006" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.HMACRIPEMD160_Key1_Test5" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.HMACRIPEMD160_Key1_Test6" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.HMACRIPEMD160_Key1_Test7" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.HMACRIPEMD160_Key1_Test8" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.HMACRIPEMD160_Key1_Test9" executed="True" success="True" time="0.375" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.HMACRIPEMD160_Key2_Test1" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.HMACRIPEMD160_Key2_Test2" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.HMACRIPEMD160_Key2_Test3" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.HMACRIPEMD160_Key2_Test4" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.HMACRIPEMD160_Key2_Test5" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.HMACRIPEMD160_Key2_Test6" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.HMACRIPEMD160_Key2_Test7" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.HMACRIPEMD160_Key2_Test8" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.HMACRIPEMD160_Key2_Test9" executed="True" success="True" time="0.368" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.InitializeDisposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.InputOutputIntersection" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.Invariants" executed="True" success="True" time="0.000" asserts="7" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.Key" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.NullStream" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.TransformBlock_Disposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.TransformBlock_InputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.TransformBlock_InputCount_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.TransformBlock_InputCount_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.TransformBlock_InputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.TransformBlock_InputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.TransformBlock_OutputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.TransformBlock_OutputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.TransformBlock_OutputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.TransformFinalBlock_Disposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.TransformFinalBlock_InputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.TransformFinalBlock_InputCount_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.TransformFinalBlock_InputCount_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.TransformFinalBlock_InputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.TransformFinalBlock_InputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.TransformFinalBlock_ReturnedBuffer" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACRIPEMD160Test.TransformFinalBlock_Twice_Initialize" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="HMACSHA1Test" success="True" time="0.097" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.BlockSize" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.ChangeKey" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.Clear" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.Clear2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.ComputeHash_ArrayNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.ComputeHash_ArrayNullIntInt" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.ComputeHash_CountNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.ComputeHash_CountOverflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.ComputeHash_OffsetNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.ComputeHash_OffsetOverflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.Constructor_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.Constructors" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.Create" executed="True" success="True" time="0.000" asserts="7" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.CreateNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.Disposable" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.FIPS198_A1" executed="True" success="True" time="0.003" asserts="9" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.FIPS198_A2" executed="True" success="True" time="0.000" asserts="9" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.FIPS198_A3" executed="True" success="True" time="0.000" asserts="9" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.FIPS198_A4" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.Hash_AfterInitialize_SecondTime" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.Hash_AfterTransformBlock" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.Hash_AfterTransformFinalBlock" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.InitializeDisposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.InputOutputIntersection" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.Invariants" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.Key" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.NullStream" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.RFC2202_TC1" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.RFC2202_TC2" executed="True" success="True" time="0.000" asserts="9" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.RFC2202_TC3" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.RFC2202_TC4" executed="True" success="True" time="0.000" asserts="9" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.RFC2202_TC5" executed="True" success="True" time="0.000" asserts="9" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.RFC2202_TC6" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.RFC2202_TC7" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.TransformBlock_Disposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.TransformBlock_InputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.TransformBlock_InputCount_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.TransformBlock_InputCount_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.TransformBlock_InputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.TransformBlock_InputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.TransformBlock_OutputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.TransformBlock_OutputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.TransformBlock_OutputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.TransformFinalBlock_Disposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.TransformFinalBlock_InputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.TransformFinalBlock_InputCount_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.TransformFinalBlock_InputCount_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.TransformFinalBlock_InputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.TransformFinalBlock_InputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.TransformFinalBlock_ReturnedBuffer" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA1Test.TransformFinalBlock_Twice_Initialize" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="HMACSHA256Test" success="True" time="0.071" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.BlockSize" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.ChangeKey" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.Clear" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.Clear2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.ComputeHash_ArrayNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.ComputeHash_ArrayNullIntInt" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.ComputeHash_CountNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.ComputeHash_CountOverflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.ComputeHash_OffsetNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.ComputeHash_OffsetOverflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.Constructor_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.Constructors" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.Create" executed="True" success="True" time="0.000" asserts="7" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.CreateNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.Disposable" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.Hash_AfterInitialize_SecondTime" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.Hash_AfterTransformBlock" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.Hash_AfterTransformFinalBlock" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.HMACSHA256_TC1" executed="True" success="True" time="0.003" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.HMACSHA256_TC10" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.HMACSHA256_TC2" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.HMACSHA256_TC3" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.HMACSHA256_TC4" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.HMACSHA256_TC5" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.HMACSHA256_TC6" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.HMACSHA256_TC7" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.HMACSHA256_TC8" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.HMACSHA256_TC9" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.InitializeDisposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.InputOutputIntersection" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.Invariants" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.Key" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.NullStream" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.TransformBlock_Disposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.TransformBlock_InputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.TransformBlock_InputCount_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.TransformBlock_InputCount_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.TransformBlock_InputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.TransformBlock_InputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.TransformBlock_OutputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.TransformBlock_OutputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.TransformBlock_OutputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.TransformFinalBlock_Disposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.TransformFinalBlock_InputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.TransformFinalBlock_InputCount_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.TransformFinalBlock_InputCount_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.TransformFinalBlock_InputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.TransformFinalBlock_InputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.TransformFinalBlock_ReturnedBuffer" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA256Test.TransformFinalBlock_Twice_Initialize" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="HMACSHA384Test" success="True" time="0.075" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.ChangeKey" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.Clear" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.Clear2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.ComputeHash_ArrayNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.ComputeHash_ArrayNullIntInt" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.ComputeHash_CountNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.ComputeHash_CountOverflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.ComputeHash_OffsetNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.ComputeHash_OffsetOverflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.Constructor_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.Constructors" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.Create" executed="True" success="True" time="0.000" asserts="7" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.CreateNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.Disposable" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.Hash_AfterInitialize_SecondTime" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.Hash_AfterTransformBlock" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.Hash_AfterTransformFinalBlock" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.InitializeDisposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.InputOutputIntersection" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.Invariants" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.Key" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.NullStream" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.RFC4231_TC1_Legacy" executed="True" success="True" time="0.002" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.RFC4231_TC1_Normal" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.RFC4231_TC2_Legacy" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.RFC4231_TC2_Normal" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.RFC4231_TC3_Legacy" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.RFC4231_TC3_Normal" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.RFC4231_TC4_Legacy" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.RFC4231_TC4_Normal" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.RFC4231_TC5_Legacy" executed="True" success="True" time="0.009" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.RFC4231_TC5_Normal" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.RFC4231_TC6_Legacy" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.RFC4231_TC6_Normal" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.RFC4231_TC7_Legacy" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.RFC4231_TC7_Normal" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.TransformBlock_Disposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.TransformBlock_InputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.TransformBlock_InputCount_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.TransformBlock_InputCount_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.TransformBlock_InputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.TransformBlock_InputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.TransformBlock_OutputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.TransformBlock_OutputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.TransformBlock_OutputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.TransformFinalBlock_Disposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.TransformFinalBlock_InputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.TransformFinalBlock_InputCount_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.TransformFinalBlock_InputCount_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.TransformFinalBlock_InputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.TransformFinalBlock_InputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.TransformFinalBlock_ReturnedBuffer" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA384Test.TransformFinalBlock_Twice_Initialize" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="HMACSHA512Test" success="True" time="0.084" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.Bug6510a" executed="True" success="True" time="0.004" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.Bug6510b" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.ChangeKey" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.Clear" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.Clear2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.ComputeHash_ArrayNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.ComputeHash_ArrayNullIntInt" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.ComputeHash_CountNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.ComputeHash_CountOverflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.ComputeHash_OffsetNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.ComputeHash_OffsetOverflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.Constructor_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.Constructors" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.Create" executed="True" success="True" time="0.000" asserts="7" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.CreateNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.Disposable" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.Hash_AfterInitialize_SecondTime" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.Hash_AfterTransformBlock" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.Hash_AfterTransformFinalBlock" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.InitializeDisposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.InputOutputIntersection" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.Invariants" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.Key" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.NullStream" executed="True" success="True" time="0.007" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.RFC4231_TC1_Legacy" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.RFC4231_TC1_Normal" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.RFC4231_TC2_Legacy" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.RFC4231_TC2_Normal" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.RFC4231_TC3_Legacy" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.RFC4231_TC3_Normal" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.RFC4231_TC4_Legacy" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.RFC4231_TC4_Normal" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.RFC4231_TC5_Legacy" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.RFC4231_TC5_Normal" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.RFC4231_TC6_Legacy" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.RFC4231_TC6_Normal" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.RFC4231_TC7_Legacy" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.RFC4231_TC7_Normal" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.TransformBlock_Disposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.TransformBlock_InputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.TransformBlock_InputCount_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.TransformBlock_InputCount_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.TransformBlock_InputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.TransformBlock_InputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.TransformBlock_OutputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.TransformBlock_OutputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.TransformBlock_OutputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.TransformFinalBlock_Disposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.TransformFinalBlock_InputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.TransformFinalBlock_InputCount_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.TransformFinalBlock_InputCount_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.TransformFinalBlock_InputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.TransformFinalBlock_InputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.TransformFinalBlock_ReturnedBuffer" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.HMACSHA512Test.TransformFinalBlock_Twice_Initialize" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="KeyedHashAlgorithmTest" success="True" time="0.044" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.KeyedHashAlgorithmTest.ChangeKey" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.KeyedHashAlgorithmTest.Clear" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.KeyedHashAlgorithmTest.Clear2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.KeyedHashAlgorithmTest.ComputeHash_ArrayNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.KeyedHashAlgorithmTest.ComputeHash_ArrayNullIntInt" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.KeyedHashAlgorithmTest.ComputeHash_CountNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.KeyedHashAlgorithmTest.ComputeHash_CountOverflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.KeyedHashAlgorithmTest.ComputeHash_OffsetNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.KeyedHashAlgorithmTest.ComputeHash_OffsetOverflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.KeyedHashAlgorithmTest.Create" executed="True" success="True" time="0.000" asserts="7" />
                          <test-case name="MonoTests.System.Security.Cryptography.KeyedHashAlgorithmTest.CreateNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.KeyedHashAlgorithmTest.Disposable" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.KeyedHashAlgorithmTest.Hash_AfterInitialize_SecondTime" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.KeyedHashAlgorithmTest.Hash_AfterTransformBlock" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.KeyedHashAlgorithmTest.Hash_AfterTransformFinalBlock" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.KeyedHashAlgorithmTest.InitializeDisposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.KeyedHashAlgorithmTest.InputOutputIntersection" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.KeyedHashAlgorithmTest.Key" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.KeyedHashAlgorithmTest.NullStream" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.KeyedHashAlgorithmTest.TransformBlock_Disposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.KeyedHashAlgorithmTest.TransformBlock_InputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.KeyedHashAlgorithmTest.TransformBlock_InputCount_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.KeyedHashAlgorithmTest.TransformBlock_InputCount_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.KeyedHashAlgorithmTest.TransformBlock_InputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.KeyedHashAlgorithmTest.TransformBlock_InputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.KeyedHashAlgorithmTest.TransformBlock_OutputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.KeyedHashAlgorithmTest.TransformBlock_OutputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.KeyedHashAlgorithmTest.TransformBlock_OutputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.KeyedHashAlgorithmTest.TransformFinalBlock_Disposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.KeyedHashAlgorithmTest.TransformFinalBlock_InputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.KeyedHashAlgorithmTest.TransformFinalBlock_InputCount_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.KeyedHashAlgorithmTest.TransformFinalBlock_InputCount_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.KeyedHashAlgorithmTest.TransformFinalBlock_InputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.KeyedHashAlgorithmTest.TransformFinalBlock_InputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.KeyedHashAlgorithmTest.TransformFinalBlock_ReturnedBuffer" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.KeyedHashAlgorithmTest.TransformFinalBlock_Twice_Initialize" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="MACTripleDESTest" success="True" time="0.025" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.MACTripleDESTest.ConstructorEmpty" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.MACTripleDESTest.ConstructorKey" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.MACTripleDESTest.ConstructorKeyNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.MACTripleDESTest.ConstructorNameKey" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.MACTripleDESTest.ConstructorNameNullKey" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.MACTripleDESTest.ConstructorNameNullKeyNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.MACTripleDESTest.ExactlyOneBlockSize" executed="True" success="True" time="0.003" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.MACTripleDESTest.ExactMultipleBlockSize" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.MACTripleDESTest.InvalidAlgorithmName" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.MACTripleDESTest.Invariants" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Cryptography.MACTripleDESTest.MoreThanOneBlockSize" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.MACTripleDESTest.ObjectDisposed" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.MACTripleDESTest.SmallerThanOneBlockSize" executed="True" success="True" time="0.002" asserts="8" />
                        </results>
                      </test-suite>
                      <test-suite name="MD5Test" success="True" time="0.004" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.MD5Test.ComputeHashA" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.MD5Test.ComputeHashB" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.MD5Test.ComputeHashNull" executed="True" success="True" time="0.001" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="PaddingModeTest" success="True" time="0.125" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.ANSIX923_366623" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.ANSIX923_ISO10126" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.ANSIX923_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.ANSIX923_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.ANSIX923_Zeros" executed="True" success="True" time="0.009" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.DES_ANSIX923_Full" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.DES_ANSIX923_Partial" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.DES_ISO10126_Full" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.DES_ISO10126_Partial" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.DES_PKCS7_Full" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.DES_PKCS7_Partial" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.DES_Zeros_Full" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.DES_Zeros_Partial" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.ISO10126_ANSIX923" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.ISO10126_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.ISO10126_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.ISO10126_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.MACTripleDES_ANSIX923" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.MACTripleDES_ISO10126" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.MACTripleDES_None" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.MACTripleDES_None_Partial" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.MACTripleDES_PKCS7" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.MACTripleDES_Zeros" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.None_ANSIX923" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.None_ISO10126" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.None_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.None_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.PaddingModeEnum" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.PKCS7_ANSIX923" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.PKCS7_ISO10126" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.PKCS7_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.PKCS7_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.RC2_ANSIX923_Full" executed="True" success="True" time="0.000" asserts="10" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.RC2_ANSIX923_Partial" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.RC2_ISO10126_Full" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.RC2_ISO10126_Partial" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.RC2_PKCS7_Full" executed="True" success="True" time="0.000" asserts="10" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.RC2_PKCS7_Partial" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.RC2_Zeros_Full" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.RC2_Zeros_Partial" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.Rijndael_ANSIX923_Full" executed="True" success="True" time="0.001" asserts="18" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.Rijndael_ANSIX923_Partial" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.Rijndael_ISO10126_Full" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.Rijndael_ISO10126_Partial" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.Rijndael_PKCS7_Full" executed="True" success="True" time="0.000" asserts="18" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.Rijndael_PKCS7_Partial" executed="True" success="True" time="0.000" asserts="10" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.Rijndael_Zeros_Full" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.Rijndael_Zeros_Partial" executed="True" success="True" time="0.000" asserts="10" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.RijndaelNone_ExactlyOneBlockSize" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.RijndaelNone_ExactMultipleBlockSize" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.RijndaelNone_MoreThanOneBlockSize" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.RijndaelNone_SmallerThanOneBlockSize" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.RijndaelPKCS7_ExactlyOneBlockSize" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.RijndaelPKCS7_ExactMultipleBlockSize" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.RijndaelPKCS7_MoreThanOneBlockSize" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.RijndaelPKCS7_SmallerThanOneBlockSize" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.RijndaelZeros_ExactlyOneBlockSize" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.RijndaelZeros_ExactMultipleBlockSize" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.RijndaelZeros_MoreThanOneBlockSize" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.RijndaelZeros_SmallerThanOneBlockSize" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.TripleDES_ANSIX923_Full" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.TripleDES_ANSIX923_Partial" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.TripleDES_ISO10126_Full" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.TripleDES_ISO10126_Partial" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.TripleDES_PKCS7_Full" executed="True" success="True" time="0.000" asserts="10" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.TripleDES_PKCS7_Partial" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.TripleDES_Zeros_Full" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.TripleDES_Zeros_Partial" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.TripleDESNone_ExactlyOneBlockSize" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.TripleDESNone_ExactMultipleBlockSize" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.TripleDESNone_MoreThanOneBlockSize" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.TripleDESNone_SmallerThanOneBlockSize" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.TripleDESPKCS7_ExactlyOneBlockSize" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.TripleDESPKCS7_ExactMultipleBlockSize" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.TripleDESPKCS7_MoreThanOneBlockSize" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.TripleDESPKCS7_SmallerThanOneBlockSize" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.TripleDESZeros_ExactlyOneBlockSize" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.TripleDESZeros_ExactMultipleBlockSize" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.TripleDESZeros_MoreThanOneBlockSize" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.TripleDESZeros_SmallerThanOneBlockSize" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.Zeros_ANSIX923" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.Zeros_ISO10126" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.Zeros_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.PaddingModeTest.Zeros_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="PasswordDeriveBytesTest" success="True" time="0.095" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.CryptDeriveKey_TooLongKey" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.Ctor_PasswordNullSalt" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.Ctor_PasswordNullSaltCspParameters" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.Ctor_PasswordNullSaltHashIteration" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.Ctor_PasswordNullSaltHashIterationCspParameters" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.Ctor_PasswordSalt" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.Ctor_PasswordSaltCspParametersNull" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.Ctor_PasswordSaltHashIteration" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.Ctor_PasswordSaltHashIterationCspParametersNull" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.Ctor_PasswordSaltHashIterationMaxValue" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.Ctor_PasswordSaltHashIterationNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.Ctor_PasswordSaltHashIterationNegativeCspParameters" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.Ctor_PasswordSaltHashIterationZero" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.Ctor_PasswordSaltHashIterationZeroCspParameters" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.Ctor_PasswordSaltHashNullIteration" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.Ctor_PasswordSaltHashNullIterationCspParameters" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.Ctor_PasswordSaltNull" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.Ctor_PasswordSaltNullHashIteration" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.MD5" executed="True" success="True" time="0.002" asserts="10" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.MD5NoSaltLongRun" executed="True" success="True" time="0.010" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.MD5NoSaltShortRun" executed="True" success="True" time="0.002" asserts="16" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.MD5SaltLongRun" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.MD5SaltShortRun" executed="True" success="True" time="0.001" asserts="16" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.NoSalt" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.OneByOne" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.OneIteration" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.Properties" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.Property_HashName_Null" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.Property_Salt" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.Property_Salt_Modify" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.Salt" executed="True" success="True" time="0.002" asserts="10" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.SHA1" executed="True" success="True" time="0.002" asserts="10" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.SHA1NoSaltLongRun" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.SHA1NoSaltShortRun" executed="True" success="True" time="0.001" asserts="20" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.SHA1SaltLongRun" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.SHA1SaltShortRun" executed="True" success="True" time="0.001" asserts="20" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.SHA256" executed="True" success="True" time="0.002" asserts="10" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.SHA384" executed="True" success="True" time="0.003" asserts="10" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.SHA512" executed="True" success="True" time="0.004" asserts="10" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.StrangeBehaviour" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.TooLong" executed="True" success="True" time="0.016" asserts="5" />
                          <test-case name="MonoTests.System.Security.Cryptography.PasswordDeriveBytesTest.TooShort" executed="True" success="True" time="0.001" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="PKCS1MaskGenerationMethodTest" success="True" time="0.015" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.PKCS1MaskGenerationMethodTest.Bug3777" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.PKCS1MaskGenerationMethodTest.EmptyMask" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.PKCS1MaskGenerationMethodTest.NegativeReturnRequest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.PKCS1MaskGenerationMethodTest.NullSeed" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.PKCS1MaskGenerationMethodTest.PKCS1v21TestVector" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.PKCS1MaskGenerationMethodTest.Properties" executed="True" success="True" time="0.001" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite name="RandomNumberGeneratorTest" success="True" time="0.008" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.RandomNumberGeneratorTest.LongRuns" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RandomNumberGeneratorTest.Monobit" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.RandomNumberGeneratorTest.Poker" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RandomNumberGeneratorTest.Runs" executed="True" success="True" time="0.003" asserts="12" />
                        </results>
                      </test-suite>
                      <test-suite name="Rc2CfbTests" success="True" time="0.004" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.Rc2CfbTests.Cfb_None" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rc2CfbTests.Roundtrip" executed="True" success="True" time="0.002" asserts="372" />
                        </results>
                      </test-suite>
                      <test-suite name="RC2CryptoServiceProviderTest" success="True" time="0.019" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.RC2CryptoServiceProviderTest.CreateDecryptor_IV_BlockSize" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2CryptoServiceProviderTest.CreateDecryptor_IV_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2CryptoServiceProviderTest.CreateDecryptor_IV_TooBig" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2CryptoServiceProviderTest.CreateDecryptor_IV_TooSmall" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2CryptoServiceProviderTest.CreateDecryptor_IV_Zero" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2CryptoServiceProviderTest.CreateDecryptor_IvNull" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2CryptoServiceProviderTest.CreateDecryptor_KeyIv" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2CryptoServiceProviderTest.CreateDecryptor_KeyNull" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2CryptoServiceProviderTest.CreateEncryptor_IV_BlockSize" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2CryptoServiceProviderTest.CreateEncryptor_IV_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2CryptoServiceProviderTest.CreateEncryptor_IV_TooBig" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2CryptoServiceProviderTest.CreateEncryptor_IV_TooSmall" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2CryptoServiceProviderTest.CreateEncryptor_IV_Zero" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2CryptoServiceProviderTest.CreateEncryptor_IvNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2CryptoServiceProviderTest.CreateEncryptor_KeyIv" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2CryptoServiceProviderTest.CreateEncryptor_KeyNull" executed="True" success="True" time="0.001" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="RC2Test" success="True" time="0.013" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.RC2Test.DefaultProperties" executed="True" success="True" time="0.001" asserts="15" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2Test.RFC2268Vector_1" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2Test.RFC2268Vector_2" executed="True" success="True" time="0.000" asserts="19" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2Test.RFC2268Vector_3" executed="True" success="True" time="0.000" asserts="19" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2Test.RFC2268Vector_4" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2Test.RFC2268Vector_5" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2Test.RFC2268Vector_6" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2Test.RFC2268Vector_7" executed="True" success="True" time="0.000" asserts="19" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2Test.RFC2268Vector_8" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="RC2TransformTest" success="True" time="0.103" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.CreateDecryptor_TransformBlock_One_ANSIX923_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.CreateDecryptor_TransformBlock_One_ANSIX923_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.CreateDecryptor_TransformBlock_One_ANSIX923_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.CreateDecryptor_TransformBlock_One_ISO10126_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.CreateDecryptor_TransformBlock_One_ISO10126_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.CreateDecryptor_TransformBlock_One_ISO10126_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.CreateDecryptor_TransformBlock_One_None_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.CreateDecryptor_TransformBlock_One_None_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.CreateDecryptor_TransformBlock_One_None_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.CreateDecryptor_TransformBlock_One_PKCS7_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.CreateDecryptor_TransformBlock_One_PKCS7_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.CreateDecryptor_TransformBlock_One_PKCS7_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.CreateDecryptor_TransformBlock_One_Zeros_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.CreateDecryptor_TransformBlock_One_Zeros_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.CreateDecryptor_TransformBlock_One_Zeros_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.CreateEncryptor_TransformBlock_One_ANSIX923_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.CreateEncryptor_TransformBlock_One_ANSIX923_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.CreateEncryptor_TransformBlock_One_ANSIX923_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.CreateEncryptor_TransformBlock_One_ISO10126_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.CreateEncryptor_TransformBlock_One_ISO10126_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.CreateEncryptor_TransformBlock_One_ISO10126_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.CreateEncryptor_TransformBlock_One_None_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.CreateEncryptor_TransformBlock_One_None_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.CreateEncryptor_TransformBlock_One_None_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.CreateEncryptor_TransformBlock_One_PKCS7_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.CreateEncryptor_TransformBlock_One_PKCS7_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.CreateEncryptor_TransformBlock_One_PKCS7_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.CreateEncryptor_TransformBlock_One_Zeros_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.CreateEncryptor_TransformBlock_One_Zeros_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.CreateEncryptor_TransformBlock_One_Zeros_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptLastBlock_CBC_ANSIX923" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptLastBlock_CBC_ISO10126" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptLastBlock_CBC_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptLastBlock_CBC_PKCS7" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptLastBlock_CBC_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptLastBlock_CFB_ANSIX923" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptLastBlock_CFB_ISO10126" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptLastBlock_CFB_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptLastBlock_CFB_PKCS7" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptLastBlock_CFB_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptLastBlock_ECB_ANSIX923" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptLastBlock_ECB_ISO10126" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptLastBlock_ECB_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptLastBlock_ECB_PKCS7" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptLastBlock_ECB_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptLastBlock_Final_CBC_ANSIX923" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptLastBlock_Final_CBC_ISO10126" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptLastBlock_Final_CBC_None" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptLastBlock_Final_CBC_PKCS7" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptLastBlock_Final_CBC_Zeros" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptLastBlock_Final_CFB_ANSIX923" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptLastBlock_Final_CFB_ISO10126" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptLastBlock_Final_CFB_None" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptLastBlock_Final_CFB_PKCS7" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptLastBlock_Final_CFB_Zeros" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptLastBlock_Final_ECB_ANSIX923" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptLastBlock_Final_ECB_ISO10126" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptLastBlock_Final_ECB_None" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptLastBlock_Final_ECB_PKCS7" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptLastBlock_Final_ECB_Zeros" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptMultipleBlock_CBC_ANSIX923" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptMultipleBlock_CBC_ISO10126" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptMultipleBlock_CBC_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptMultipleBlock_CBC_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptMultipleBlock_CBC_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptMultipleBlock_CFB_ANSIX923" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptMultipleBlock_CFB_ISO10126" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptMultipleBlock_CFB_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptMultipleBlock_CFB_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptMultipleBlock_CFB_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptMultipleBlock_ECB_ANSIX923" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptMultipleBlock_ECB_ISO10126" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptMultipleBlock_ECB_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptMultipleBlock_ECB_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptMultipleBlock_ECB_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptMultipleBlock_Final_CBC_ANSIX923" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptMultipleBlock_Final_CBC_ISO10126" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptMultipleBlock_Final_CBC_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptMultipleBlock_Final_CBC_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptMultipleBlock_Final_CBC_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptMultipleBlock_Final_CFB_ANSIX923" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptMultipleBlock_Final_CFB_ISO10126" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptMultipleBlock_Final_CFB_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptMultipleBlock_Final_CFB_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptMultipleBlock_Final_CFB_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptMultipleBlock_Final_ECB_ANSIX923" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptMultipleBlock_Final_ECB_ISO10126" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptMultipleBlock_Final_ECB_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptMultipleBlock_Final_ECB_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RC2TransformTest.DontDecryptMultipleBlock_Final_ECB_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="Rfc2898DeriveBytesTest" success="True" time="1.939" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.Rfc2898DeriveBytesTest.ConstructorPasswordNullSalt" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rfc2898DeriveBytesTest.ConstructorPasswordNullSaltIterations" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rfc2898DeriveBytesTest.ConstructorPasswordNullSaltLength" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rfc2898DeriveBytesTest.ConstructorPasswordNullSaltLengthIterations" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rfc2898DeriveBytesTest.ConstructorPasswordSalt" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rfc2898DeriveBytesTest.ConstructorPasswordSaltIterations" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rfc2898DeriveBytesTest.ConstructorPasswordSaltIterationsNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rfc2898DeriveBytesTest.ConstructorPasswordSaltIterationsZero" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rfc2898DeriveBytesTest.ConstructorPasswordSaltLength" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rfc2898DeriveBytesTest.ConstructorPasswordSaltLengthIterations" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rfc2898DeriveBytesTest.ConstructorPasswordSaltLengthIterationsNegative" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rfc2898DeriveBytesTest.ConstructorPasswordSaltLengthIterationsZero" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rfc2898DeriveBytesTest.ConstructorPasswordSaltLengthNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rfc2898DeriveBytesTest.ConstructorPasswordSaltLengthNegativeIterations" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rfc2898DeriveBytesTest.ConstructorPasswordSaltLengthZero" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rfc2898DeriveBytesTest.ConstructorPasswordSaltLengthZeroIterations" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rfc2898DeriveBytesTest.ConstructorPasswordSaltNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rfc2898DeriveBytesTest.ConstructorPasswordSaltNullIterations" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rfc2898DeriveBytesTest.GetBytes_Endian" executed="True" success="True" time="0.101" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rfc2898DeriveBytesTest.GetBytesNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rfc2898DeriveBytesTest.GetBytesZero" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rfc2898DeriveBytesTest.IterationCount" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rfc2898DeriveBytesTest.MultipleCalls_DoesntOverrunBuffer" executed="True" success="True" time="0.059" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rfc2898DeriveBytesTest.RFC3211_TC1" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rfc2898DeriveBytesTest.RFC3211_TC2" executed="True" success="True" time="0.006" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rfc2898DeriveBytesTest.RFC3211_TC2_Reset" executed="True" success="True" time="0.011" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rfc2898DeriveBytesTest.RFC3211_TC2_Splitted_OneBlock" executed="True" success="True" time="0.006" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rfc2898DeriveBytesTest.RFC3211_TC2_Splitted_TwoBlocks" executed="True" success="True" time="0.018" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rfc2898DeriveBytesTest.RFC3211_TC2_TwoBlocks" executed="True" success="True" time="0.011" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rfc2898DeriveBytesTest.SaltCantModifyInternal" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rfc2898DeriveBytesTest.SaltNew" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rfc2898DeriveBytesTest.SaltNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rfc2898DeriveBytesTest.SaltTooSmall" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rfc2898DeriveBytesTest.SplitCalls_Reset" executed="True" success="True" time="0.843" asserts="48" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rfc2898DeriveBytesTest.SplitCalls_TwoInstances" executed="True" success="True" time="0.849" asserts="48" />
                        </results>
                      </test-suite>
                      <test-suite name="Rijndael128TransformTest" success="True" time="0.102" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.CreateDecryptor_TransformBlock_One_ANSIX923_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.CreateDecryptor_TransformBlock_One_ANSIX923_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.CreateDecryptor_TransformBlock_One_ANSIX923_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.CreateDecryptor_TransformBlock_One_ISO10126_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.CreateDecryptor_TransformBlock_One_ISO10126_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.CreateDecryptor_TransformBlock_One_ISO10126_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.CreateDecryptor_TransformBlock_One_None_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.CreateDecryptor_TransformBlock_One_None_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.CreateDecryptor_TransformBlock_One_None_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.CreateDecryptor_TransformBlock_One_PKCS7_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.CreateDecryptor_TransformBlock_One_PKCS7_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.CreateDecryptor_TransformBlock_One_PKCS7_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.CreateDecryptor_TransformBlock_One_Zeros_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.CreateDecryptor_TransformBlock_One_Zeros_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.CreateDecryptor_TransformBlock_One_Zeros_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.CreateEncryptor_TransformBlock_One_ANSIX923_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.CreateEncryptor_TransformBlock_One_ANSIX923_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.CreateEncryptor_TransformBlock_One_ANSIX923_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.CreateEncryptor_TransformBlock_One_ISO10126_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.CreateEncryptor_TransformBlock_One_ISO10126_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.CreateEncryptor_TransformBlock_One_ISO10126_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.CreateEncryptor_TransformBlock_One_None_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.CreateEncryptor_TransformBlock_One_None_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.CreateEncryptor_TransformBlock_One_None_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.CreateEncryptor_TransformBlock_One_PKCS7_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.CreateEncryptor_TransformBlock_One_PKCS7_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.CreateEncryptor_TransformBlock_One_PKCS7_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.CreateEncryptor_TransformBlock_One_Zeros_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.CreateEncryptor_TransformBlock_One_Zeros_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.CreateEncryptor_TransformBlock_One_Zeros_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptLastBlock_CBC_ANSIX923" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptLastBlock_CBC_ISO10126" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptLastBlock_CBC_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptLastBlock_CBC_PKCS7" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptLastBlock_CBC_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptLastBlock_CFB_ANSIX923" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptLastBlock_CFB_ISO10126" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptLastBlock_CFB_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptLastBlock_CFB_PKCS7" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptLastBlock_CFB_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptLastBlock_ECB_ANSIX923" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptLastBlock_ECB_ISO10126" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptLastBlock_ECB_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptLastBlock_ECB_PKCS7" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptLastBlock_ECB_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptLastBlock_Final_CBC_ANSIX923" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptLastBlock_Final_CBC_ISO10126" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptLastBlock_Final_CBC_None" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptLastBlock_Final_CBC_PKCS7" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptLastBlock_Final_CBC_Zeros" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptLastBlock_Final_CFB_ANSIX923" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptLastBlock_Final_CFB_ISO10126" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptLastBlock_Final_CFB_None" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptLastBlock_Final_CFB_PKCS7" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptLastBlock_Final_CFB_Zeros" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptLastBlock_Final_ECB_ANSIX923" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptLastBlock_Final_ECB_ISO10126" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptLastBlock_Final_ECB_None" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptLastBlock_Final_ECB_PKCS7" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptLastBlock_Final_ECB_Zeros" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptMultipleBlock_CBC_ANSIX923" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptMultipleBlock_CBC_ISO10126" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptMultipleBlock_CBC_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptMultipleBlock_CBC_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptMultipleBlock_CBC_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptMultipleBlock_CFB_ANSIX923" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptMultipleBlock_CFB_ISO10126" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptMultipleBlock_CFB_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptMultipleBlock_CFB_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptMultipleBlock_CFB_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptMultipleBlock_ECB_ANSIX923" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptMultipleBlock_ECB_ISO10126" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptMultipleBlock_ECB_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptMultipleBlock_ECB_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptMultipleBlock_ECB_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptMultipleBlock_Final_CBC_ANSIX923" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptMultipleBlock_Final_CBC_ISO10126" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptMultipleBlock_Final_CBC_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptMultipleBlock_Final_CBC_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptMultipleBlock_Final_CBC_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptMultipleBlock_Final_CFB_ANSIX923" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptMultipleBlock_Final_CFB_ISO10126" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptMultipleBlock_Final_CFB_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptMultipleBlock_Final_CFB_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptMultipleBlock_Final_CFB_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptMultipleBlock_Final_ECB_ANSIX923" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptMultipleBlock_Final_ECB_ISO10126" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptMultipleBlock_Final_ECB_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptMultipleBlock_Final_ECB_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael128TransformTest.DontDecryptMultipleBlock_Final_ECB_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="Rijndael192TransformTest" success="True" time="0.120" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.CreateDecryptor_TransformBlock_One_ANSIX923_CBC" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.CreateDecryptor_TransformBlock_One_ANSIX923_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.CreateDecryptor_TransformBlock_One_ANSIX923_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.CreateDecryptor_TransformBlock_One_ISO10126_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.CreateDecryptor_TransformBlock_One_ISO10126_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.CreateDecryptor_TransformBlock_One_ISO10126_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.CreateDecryptor_TransformBlock_One_None_CBC" executed="True" success="True" time="0.005" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.CreateDecryptor_TransformBlock_One_None_CFB" executed="True" success="True" time="0.006" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.CreateDecryptor_TransformBlock_One_None_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.CreateDecryptor_TransformBlock_One_PKCS7_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.CreateDecryptor_TransformBlock_One_PKCS7_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.CreateDecryptor_TransformBlock_One_PKCS7_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.CreateDecryptor_TransformBlock_One_Zeros_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.CreateDecryptor_TransformBlock_One_Zeros_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.CreateDecryptor_TransformBlock_One_Zeros_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.CreateEncryptor_TransformBlock_One_ANSIX923_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.CreateEncryptor_TransformBlock_One_ANSIX923_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.CreateEncryptor_TransformBlock_One_ANSIX923_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.CreateEncryptor_TransformBlock_One_ISO10126_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.CreateEncryptor_TransformBlock_One_ISO10126_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.CreateEncryptor_TransformBlock_One_ISO10126_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.CreateEncryptor_TransformBlock_One_None_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.CreateEncryptor_TransformBlock_One_None_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.CreateEncryptor_TransformBlock_One_None_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.CreateEncryptor_TransformBlock_One_PKCS7_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.CreateEncryptor_TransformBlock_One_PKCS7_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.CreateEncryptor_TransformBlock_One_PKCS7_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.CreateEncryptor_TransformBlock_One_Zeros_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.CreateEncryptor_TransformBlock_One_Zeros_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.CreateEncryptor_TransformBlock_One_Zeros_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptLastBlock_CBC_ANSIX923" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptLastBlock_CBC_ISO10126" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptLastBlock_CBC_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptLastBlock_CBC_PKCS7" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptLastBlock_CBC_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptLastBlock_CFB_ANSIX923" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptLastBlock_CFB_ISO10126" executed="True" success="True" time="0.009" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptLastBlock_CFB_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptLastBlock_CFB_PKCS7" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptLastBlock_CFB_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptLastBlock_ECB_ANSIX923" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptLastBlock_ECB_ISO10126" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptLastBlock_ECB_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptLastBlock_ECB_PKCS7" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptLastBlock_ECB_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptLastBlock_Final_CBC_ANSIX923" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptLastBlock_Final_CBC_ISO10126" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptLastBlock_Final_CBC_None" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptLastBlock_Final_CBC_PKCS7" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptLastBlock_Final_CBC_Zeros" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptLastBlock_Final_CFB_ANSIX923" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptLastBlock_Final_CFB_ISO10126" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptLastBlock_Final_CFB_None" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptLastBlock_Final_CFB_PKCS7" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptLastBlock_Final_CFB_Zeros" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptLastBlock_Final_ECB_ANSIX923" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptLastBlock_Final_ECB_ISO10126" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptLastBlock_Final_ECB_None" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptLastBlock_Final_ECB_PKCS7" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptLastBlock_Final_ECB_Zeros" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptMultipleBlock_CBC_ANSIX923" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptMultipleBlock_CBC_ISO10126" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptMultipleBlock_CBC_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptMultipleBlock_CBC_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptMultipleBlock_CBC_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptMultipleBlock_CFB_ANSIX923" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptMultipleBlock_CFB_ISO10126" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptMultipleBlock_CFB_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptMultipleBlock_CFB_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptMultipleBlock_CFB_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptMultipleBlock_ECB_ANSIX923" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptMultipleBlock_ECB_ISO10126" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptMultipleBlock_ECB_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptMultipleBlock_ECB_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptMultipleBlock_ECB_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptMultipleBlock_Final_CBC_ANSIX923" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptMultipleBlock_Final_CBC_ISO10126" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptMultipleBlock_Final_CBC_None" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptMultipleBlock_Final_CBC_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptMultipleBlock_Final_CBC_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptMultipleBlock_Final_CFB_ANSIX923" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptMultipleBlock_Final_CFB_ISO10126" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptMultipleBlock_Final_CFB_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptMultipleBlock_Final_CFB_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptMultipleBlock_Final_CFB_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptMultipleBlock_Final_ECB_ANSIX923" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptMultipleBlock_Final_ECB_ISO10126" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptMultipleBlock_Final_ECB_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptMultipleBlock_Final_ECB_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael192TransformTest.DontDecryptMultipleBlock_Final_ECB_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="Rijndael256TransformTest" success="True" time="0.121" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.CreateDecryptor_TransformBlock_One_ANSIX923_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.CreateDecryptor_TransformBlock_One_ANSIX923_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.CreateDecryptor_TransformBlock_One_ANSIX923_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.CreateDecryptor_TransformBlock_One_ISO10126_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.CreateDecryptor_TransformBlock_One_ISO10126_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.CreateDecryptor_TransformBlock_One_ISO10126_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.CreateDecryptor_TransformBlock_One_None_CBC" executed="True" success="True" time="0.006" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.CreateDecryptor_TransformBlock_One_None_CFB" executed="True" success="True" time="0.007" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.CreateDecryptor_TransformBlock_One_None_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.CreateDecryptor_TransformBlock_One_PKCS7_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.CreateDecryptor_TransformBlock_One_PKCS7_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.CreateDecryptor_TransformBlock_One_PKCS7_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.CreateDecryptor_TransformBlock_One_Zeros_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.CreateDecryptor_TransformBlock_One_Zeros_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.CreateDecryptor_TransformBlock_One_Zeros_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.CreateEncryptor_TransformBlock_One_ANSIX923_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.CreateEncryptor_TransformBlock_One_ANSIX923_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.CreateEncryptor_TransformBlock_One_ANSIX923_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.CreateEncryptor_TransformBlock_One_ISO10126_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.CreateEncryptor_TransformBlock_One_ISO10126_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.CreateEncryptor_TransformBlock_One_ISO10126_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.CreateEncryptor_TransformBlock_One_None_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.CreateEncryptor_TransformBlock_One_None_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.CreateEncryptor_TransformBlock_One_None_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.CreateEncryptor_TransformBlock_One_PKCS7_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.CreateEncryptor_TransformBlock_One_PKCS7_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.CreateEncryptor_TransformBlock_One_PKCS7_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.CreateEncryptor_TransformBlock_One_Zeros_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.CreateEncryptor_TransformBlock_One_Zeros_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.CreateEncryptor_TransformBlock_One_Zeros_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptLastBlock_CBC_ANSIX923" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptLastBlock_CBC_ISO10126" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptLastBlock_CBC_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptLastBlock_CBC_PKCS7" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptLastBlock_CBC_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptLastBlock_CFB_ANSIX923" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptLastBlock_CFB_ISO10126" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptLastBlock_CFB_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptLastBlock_CFB_PKCS7" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptLastBlock_CFB_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptLastBlock_ECB_ANSIX923" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptLastBlock_ECB_ISO10126" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptLastBlock_ECB_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptLastBlock_ECB_PKCS7" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptLastBlock_ECB_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptLastBlock_Final_CBC_ANSIX923" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptLastBlock_Final_CBC_ISO10126" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptLastBlock_Final_CBC_None" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptLastBlock_Final_CBC_PKCS7" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptLastBlock_Final_CBC_Zeros" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptLastBlock_Final_CFB_ANSIX923" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptLastBlock_Final_CFB_ISO10126" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptLastBlock_Final_CFB_None" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptLastBlock_Final_CFB_PKCS7" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptLastBlock_Final_CFB_Zeros" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptLastBlock_Final_ECB_ANSIX923" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptLastBlock_Final_ECB_ISO10126" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptLastBlock_Final_ECB_None" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptLastBlock_Final_ECB_PKCS7" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptLastBlock_Final_ECB_Zeros" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptMultipleBlock_CBC_ANSIX923" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptMultipleBlock_CBC_ISO10126" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptMultipleBlock_CBC_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptMultipleBlock_CBC_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptMultipleBlock_CBC_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptMultipleBlock_CFB_ANSIX923" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptMultipleBlock_CFB_ISO10126" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptMultipleBlock_CFB_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptMultipleBlock_CFB_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptMultipleBlock_CFB_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptMultipleBlock_ECB_ANSIX923" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptMultipleBlock_ECB_ISO10126" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptMultipleBlock_ECB_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptMultipleBlock_ECB_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptMultipleBlock_ECB_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptMultipleBlock_Final_CBC_ANSIX923" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptMultipleBlock_Final_CBC_ISO10126" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptMultipleBlock_Final_CBC_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptMultipleBlock_Final_CBC_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptMultipleBlock_Final_CBC_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptMultipleBlock_Final_CFB_ANSIX923" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptMultipleBlock_Final_CFB_ISO10126" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptMultipleBlock_Final_CFB_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptMultipleBlock_Final_CFB_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptMultipleBlock_Final_CFB_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptMultipleBlock_Final_ECB_ANSIX923" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptMultipleBlock_Final_ECB_ISO10126" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptMultipleBlock_Final_ECB_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptMultipleBlock_Final_ECB_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.Rijndael256TransformTest.DontDecryptMultipleBlock_Final_ECB_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="RijndaelCfbTests" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.RijndaelCfbTests.Roundtrip" executed="True" success="True" time="0.003" asserts="163" />
                        </results>
                      </test-suite>
                      <test-suite name="RijndaelManagedTest" success="True" time="0.023" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.RijndaelManagedTest.CBC_0" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.RijndaelManagedTest.CBC_1" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.RijndaelManagedTest.CFB_7193" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.RijndaelManagedTest.CreateDecryptor_IV_BlockSize" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RijndaelManagedTest.CreateDecryptor_IV_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RijndaelManagedTest.CreateDecryptor_IV_TooBig" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RijndaelManagedTest.CreateDecryptor_IV_TooSmall" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RijndaelManagedTest.CreateDecryptor_IV_Zero" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RijndaelManagedTest.CreateDecryptor_IvNull" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RijndaelManagedTest.CreateDecryptor_KeyIv" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.RijndaelManagedTest.CreateDecryptor_KeyNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RijndaelManagedTest.CreateEncryptor_IV_BlockSize" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RijndaelManagedTest.CreateEncryptor_IV_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RijndaelManagedTest.CreateEncryptor_IV_TooBig" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RijndaelManagedTest.CreateEncryptor_IV_TooSmall" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RijndaelManagedTest.CreateEncryptor_IV_Zero" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RijndaelManagedTest.CreateEncryptor_IvNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RijndaelManagedTest.CreateEncryptor_KeyIv" executed="True" success="True" time="0.002" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.RijndaelManagedTest.CreateEncryptor_KeyNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RijndaelManagedTest.ECB" executed="True" success="True" time="0.001" asserts="6" />
                        </results>
                      </test-suite>
                      <test-suite name="RijndaelTest" success="True" time="0.002" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.RijndaelTest.ChangingBlockSize" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Security.Cryptography.RijndaelTest.ChangingKeySize" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Security.Cryptography.RijndaelTest.DefaultProperties" executed="True" success="True" time="0.001" asserts="13" />
                          <test-case name="MonoTests.System.Security.Cryptography.RijndaelTest.FeedbackSize_NotMultipleOf8" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="RIPEMD160ManagedTest" success="True" time="0.351" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.RIPEMD160ManagedTest.RIPEMD160_Test1" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Cryptography.RIPEMD160ManagedTest.RIPEMD160_Test2" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.RIPEMD160ManagedTest.RIPEMD160_Test3" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.RIPEMD160ManagedTest.RIPEMD160_Test4" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.RIPEMD160ManagedTest.RIPEMD160_Test5" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.RIPEMD160ManagedTest.RIPEMD160_Test6" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.RIPEMD160ManagedTest.RIPEMD160_Test7" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.RIPEMD160ManagedTest.RIPEMD160_Test8" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.RIPEMD160ManagedTest.RIPEMD160_Test9" executed="True" success="True" time="0.319" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.RIPEMD160ManagedTest.StaticInfo" executed="True" success="True" time="0.000" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="RNGCryptoServiceProviderTest" success="True" time="0.014" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.RNGCryptoServiceProviderTest.ConstructorByteArray" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RNGCryptoServiceProviderTest.ConstructorByteArray_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RNGCryptoServiceProviderTest.ConstructorCsp_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RNGCryptoServiceProviderTest.ConstructorString" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RNGCryptoServiceProviderTest.ConstructorString_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RNGCryptoServiceProviderTest.GetBytes" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RNGCryptoServiceProviderTest.GetBytesNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RNGCryptoServiceProviderTest.GetNonZeroBytes" executed="True" success="True" time="0.001" asserts="25" />
                          <test-case name="MonoTests.System.Security.Cryptography.RNGCryptoServiceProviderTest.GetNonZeroBytesNull" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="RSACryptoServiceProviderTest" success="True" time="2.536" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.Bug79269" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.Bug79320_OAEP" executed="True" success="True" time="0.010" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.Bug79320_PKCS1" executed="True" success="True" time="0.016" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.CapiSignature" executed="True" success="True" time="0.137" asserts="13" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.CapiVerify" executed="True" success="True" time="0.009" asserts="26" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.CapiXmlImportExport" executed="True" success="True" time="0.004" asserts="13" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.CapiXmlImportWithoutCRT" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.ConstructorCspParameters" executed="True" success="True" time="0.002" asserts="3">
                            <categories>
                              <category name="TargetJvmNotSupported" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.ConstructorEmpty" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.ConstructorKeySize" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.ConstructorKeySizeCspParameters" executed="True" success="True" time="0.000" asserts="3">
                            <categories>
                              <category name="TargetJvmNotSupported" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.DecryptDisposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.EncryptDisposed" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.ExportCspBlob_Full" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.ExportCspBlob_MissingPrivateKey" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.ExportCspBlob_MissingPrivateKey_PublicOnly" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.ExportCspBlob_PublicKey" executed="True" success="True" time="0.001" asserts="148" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.ExportCspBlob_PublicOnly" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.ExportDisposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.ExportWithoutCRT" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.ImportCspBlob_Bad" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.ImportCspBlob_Keypair" executed="True" success="True" time="0.001" asserts="596" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.ImportCspBlob_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.ImportCspBlob_Signature_Keypair" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.KeyGeneration" executed="False">
                            <reason>
                              <message><![CDATA[Much too long (with MS as Mono doesn't generates the keypair unless it need it)]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.LimitedKeyGeneration" executed="True" success="True" time="0.049" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.MonoSignature" executed="True" success="True" time="0.132" asserts="13" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.MonoVerify" executed="True" success="True" time="0.006" asserts="26" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.MonoXmlImportExport" executed="True" success="True" time="0.003" asserts="13" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.MonoXmlImportWithoutCRT" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.OAEP" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.Persistence_Delete" executed="True" success="True" time="0.066" asserts="1">
                            <categories>
                              <category name="TargetJvmNotSupported" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.Persistence_PersistKeyInCsp_False" executed="True" success="True" time="0.084" asserts="3">
                            <categories>
                              <category name="TargetJvmNotSupported" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.Persistence_PersistKeyInCsp_True" executed="True" success="True" time="0.001" asserts="2">
                            <categories>
                              <category name="TargetJvmNotSupported" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.PKCS1" executed="True" success="True" time="0.030" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.Properties" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.RSAImportMissingExponent" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.RSAImportMissingModulus" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.SignatureWithoutCRT" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.SignDataByteArrayNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.SignDataDisposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.SignDataStreamNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.SignDataWithInvalidOid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.SignDataWithOid" executed="True" success="True" time="0.038" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.SignHashDisposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.SignHashInvalidLength" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.SignHashMD5" executed="True" success="True" time="0.205" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.SignHashNullOID" executed="True" success="True" time="0.042" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.SignHashNullValue" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.SignHashRIPEMD160" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.SignHashSHA1" executed="True" success="True" time="0.377" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.SignHashSHA256" executed="True" success="True" time="0.261" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.SignHashSHA384" executed="True" success="True" time="0.300" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.SignHashSHA512" executed="True" success="True" time="0.615" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.TooBigKeyPair" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.TooSmallKeyPair" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.UseMachineKeyStore" executed="True" success="True" time="0.001" asserts="0">
                            <categories>
                              <category name="TargetJvmNotSupported" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.UseMachineKeyStore_Default" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.VerifyDataDisposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.VerifyDataNullData" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.VerifyDataNullSignature" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.VerifyHashDisposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.VerifyHashInvalidHashLength" executed="True" success="True" time="0.070" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.VerifyHashNullHash" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSACryptoServiceProviderTest.VerifyHashNullSignature" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="RSAOAEPKeyExchangeDeformatterTest" success="True" time="0.112" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.RSAOAEPKeyExchangeDeformatterTest.Bug79320" executed="True" success="True" time="0.008" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAOAEPKeyExchangeDeformatterTest.CapiExchange128" executed="True" success="True" time="0.008" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAOAEPKeyExchangeDeformatterTest.CapiExchange192" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAOAEPKeyExchangeDeformatterTest.CapiExchangeMax" executed="True" success="True" time="0.008" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAOAEPKeyExchangeDeformatterTest.CapiExchangeMin" executed="True" success="True" time="0.009" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAOAEPKeyExchangeDeformatterTest.ExchangeDSAKey" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAOAEPKeyExchangeDeformatterTest.ExchangeNoKey" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAOAEPKeyExchangeDeformatterTest.ExchangeTooBig" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAOAEPKeyExchangeDeformatterTest.MonoExchange128" executed="True" success="True" time="0.010" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAOAEPKeyExchangeDeformatterTest.MonoExchange192" executed="True" success="True" time="0.009" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAOAEPKeyExchangeDeformatterTest.MonoExchangeMax" executed="True" success="True" time="0.015" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAOAEPKeyExchangeDeformatterTest.MonoExchangeMin" executed="True" success="True" time="0.008" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAOAEPKeyExchangeDeformatterTest.Parameters" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAOAEPKeyExchangeDeformatterTest.Properties" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="RSAOAEPKeyExchangeFormatterTest" success="True" time="0.059" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.RSAOAEPKeyExchangeFormatterTest.Exchange128" executed="True" success="True" time="0.009" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAOAEPKeyExchangeFormatterTest.Exchange192" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAOAEPKeyExchangeFormatterTest.ExchangeDSAKey" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAOAEPKeyExchangeFormatterTest.ExchangeMax" executed="True" success="True" time="0.008" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAOAEPKeyExchangeFormatterTest.ExchangeMin" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAOAEPKeyExchangeFormatterTest.ExchangeNoKey" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAOAEPKeyExchangeFormatterTest.ExchangeTooBig" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAOAEPKeyExchangeFormatterTest.Parameter" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAOAEPKeyExchangeFormatterTest.Properties" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAOAEPKeyExchangeFormatterTest.Rng" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="RSAPKCS1KeyExchangeDeformatterTest" success="True" time="0.106" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatterTest.Bug79320" executed="True" success="True" time="0.008" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatterTest.CapiKeyExchange128" executed="True" success="True" time="0.008" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatterTest.CapiKeyExchange160" executed="True" success="True" time="0.008" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatterTest.CapiKeyExchangeMax" executed="True" success="True" time="0.008" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatterTest.CapiKeyExchangeMin" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatterTest.ExchangeDSAKey" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatterTest.ExchangeNoKey" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatterTest.KeyExchangeTooBig" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatterTest.MonoKeyExchange128" executed="True" success="True" time="0.008" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatterTest.MonoKeyExchange160" executed="True" success="True" time="0.008" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatterTest.MonoKeyExchangeMax" executed="True" success="True" time="0.015" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatterTest.MonoKeyExchangeMin" executed="True" success="True" time="0.008" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatterTest.Parameters" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatterTest.Properties" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatterTest.Rng" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="RSAPKCS1KeyExchangeFormatterTest" success="True" time="0.060" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1KeyExchangeFormatterTest.CreateAndSetNullKey" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1KeyExchangeFormatterTest.CreateWithNullKey" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1KeyExchangeFormatterTest.ExchangeDSAKey" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1KeyExchangeFormatterTest.ExchangeNoKey" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1KeyExchangeFormatterTest.KeyExchange128bits" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1KeyExchangeFormatterTest.KeyExchange160bits" executed="True" success="True" time="0.008" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1KeyExchangeFormatterTest.KeyExchangeMax" executed="True" success="True" time="0.009" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1KeyExchangeFormatterTest.KeyExchangeMin" executed="True" success="True" time="0.015" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1KeyExchangeFormatterTest.KeyExchangeNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1KeyExchangeFormatterTest.KeyExchangeTooBig" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1KeyExchangeFormatterTest.Properties" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1KeyExchangeFormatterTest.Rng" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="RSAPKCS1SignatureDeformatterTest" success="True" time="1.535" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureDeformatterTest.DSAConstructor" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureDeformatterTest.RSAConstructor_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureDeformatterTest.RSAConstructors" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureDeformatterTest.SetDSAKey" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureDeformatterTest.SetInvalidHashAlgorithm" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureDeformatterTest.SetMD5HashAlgorithm" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureDeformatterTest.SetNullHashAlgorithm" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureDeformatterTest.SetNullKey" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureDeformatterTest.SetRSAKey" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureDeformatterTest.SetSHA1HashAlgorithm" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureDeformatterTest.SetSHA256HashAlgorithm" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureDeformatterTest.SetSHA384HashAlgorithm" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureDeformatterTest.SetSHA512HashAlgorithm" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureDeformatterTest.VerifyBadSignatureMD5Hash" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureDeformatterTest.VerifyMD5SignatureWithRSAKey" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureDeformatterTest.VerifyMD5SignatureWithWrongHashLength" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureDeformatterTest.VerifyMD5SignatureWithWrongSignatureLength" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureDeformatterTest.VerifySHA1SignatureWithNullKey" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureDeformatterTest.VerifySHA1SignatureWithRSAKey" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureDeformatterTest.VerifySHA1SignatureWithWrongHashLength" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureDeformatterTest.VerifySHA1SignatureWithWrongSignatureLength" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureDeformatterTest.VerifySignatureHashNoKey" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureDeformatterTest.VerifySignatureMD5Hash" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureDeformatterTest.VerifySignatureMD5HashBadSignatureLength" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureDeformatterTest.VerifySignatureNullHash" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureDeformatterTest.VerifySignatureNullHashAlgorithm" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureDeformatterTest.VerifySignatureNullSignature" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureDeformatterTest.VerifySignatureSHA1Hash" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureDeformatterTest.VerifySignatureSHA1HashBadSignatureLength" executed="True" success="True" time="0.007" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureDeformatterTest.VerifySignatureWithBadHash" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureDeformatterTest.VerifySignatureWithoutCallingSetHashAlgorithm" executed="True" success="True" time="1.491" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="RSAPKCS1SignatureFormatterTest" success="True" time="0.142" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureFormatterTest.ConstructorDSA" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureFormatterTest.ConstructorEmpty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureFormatterTest.ConstructorNull" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureFormatterTest.ConstructorRSA" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureFormatterTest.CreateSignatureHashBadHash" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureFormatterTest.CreateSignatureHashMD5" executed="True" success="True" time="0.013" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureFormatterTest.CreateSignatureHashNoKey" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureFormatterTest.CreateSignatureHashSHA1" executed="True" success="True" time="0.015" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureFormatterTest.CreateSignatureHashSHA256" executed="True" success="True" time="0.009" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureFormatterTest.CreateSignatureHashSHA384" executed="True" success="True" time="0.015" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureFormatterTest.CreateSignatureHashSHA512" executed="True" success="True" time="0.009" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureFormatterTest.CreateSignatureNoHashAlgorithm" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureFormatterTest.CreateSignatureNoKey" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureFormatterTest.CreateSignatureNullHash" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureFormatterTest.CreateSignatureRSABadHash" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureFormatterTest.CreateSignatureRSAMD5" executed="True" success="True" time="0.009" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureFormatterTest.CreateSignatureRSASHA1" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureFormatterTest.CreateSignatureRSASHA1BadLength" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureFormatterTest.CreateSignatureRSASHA256" executed="True" success="True" time="0.008" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureFormatterTest.CreateSignatureRSASHA384" executed="True" success="True" time="0.015" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureFormatterTest.CreateSignatureRSASHA512" executed="True" success="True" time="0.010" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureFormatterTest.SetHashAlgorithmMD5" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureFormatterTest.SetHashAlgorithmNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureFormatterTest.SetHashAlgorithmSHA1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureFormatterTest.SetHashAlgorithmSHA256" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureFormatterTest.SetHashAlgorithmSHA384" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureFormatterTest.SetHashAlgorithmSHA512" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureFormatterTest.SetKeyDSA" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureFormatterTest.SetKeyNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSAPKCS1SignatureFormatterTest.SetKeyRSA" executed="True" success="True" time="0.001" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="RSATest" success="True" time="0.318" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.RSATest.FromXmlString_BadCase" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSATest.FromXmlString_BadItemCase" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSATest.FromXmlString_BadTop" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSATest.FromXmlString_Embedded" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSATest.FromXmlString_EmbeddedTwoLevelWithExtraElement" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSATest.FromXmlString_InvalidTop" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSATest.FromXmlString_InvalidXml" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSATest.FromXmlString_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSATest.FromXmlString_TwoKeys" executed="True" success="True" time="0.291" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSATest.RSAImportPrivateExportPrivate" executed="True" success="True" time="0.002" asserts="9" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSATest.RSAImportPrivateExportPublic" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSATest.RSAImportPublicExportPrivate" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.RSATest.RSAImportPublicExportPublic" executed="True" success="True" time="0.000" asserts="9" />
                        </results>
                      </test-suite>
                      <test-suite name="SHA1CryptoServiceProviderTest" success="True" time="0.038" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1CryptoServiceProviderTest.Clear" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1CryptoServiceProviderTest.Clear2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1CryptoServiceProviderTest.ComputeHash_ArrayNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1CryptoServiceProviderTest.ComputeHash_ArrayNullIntInt" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1CryptoServiceProviderTest.ComputeHash_CountNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1CryptoServiceProviderTest.ComputeHash_CountOverflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1CryptoServiceProviderTest.ComputeHash_OffsetNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1CryptoServiceProviderTest.ComputeHash_OffsetOverflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1CryptoServiceProviderTest.Create" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1CryptoServiceProviderTest.CreateIncorrect" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1CryptoServiceProviderTest.CreateNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1CryptoServiceProviderTest.CreateUnknown" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1CryptoServiceProviderTest.Disposable" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1CryptoServiceProviderTest.Hash_AfterInitialize_SecondTime" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1CryptoServiceProviderTest.Hash_AfterTransformBlock" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1CryptoServiceProviderTest.Hash_AfterTransformFinalBlock" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1CryptoServiceProviderTest.InitializeDisposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1CryptoServiceProviderTest.InputOutputIntersection" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1CryptoServiceProviderTest.NullStream" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1CryptoServiceProviderTest.StaticInfo" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1CryptoServiceProviderTest.TransformBlock_Disposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1CryptoServiceProviderTest.TransformBlock_InputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1CryptoServiceProviderTest.TransformBlock_InputCount_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1CryptoServiceProviderTest.TransformBlock_InputCount_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1CryptoServiceProviderTest.TransformBlock_InputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1CryptoServiceProviderTest.TransformBlock_InputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1CryptoServiceProviderTest.TransformBlock_OutputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1CryptoServiceProviderTest.TransformBlock_OutputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1CryptoServiceProviderTest.TransformBlock_OutputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1CryptoServiceProviderTest.TransformFinalBlock_Disposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1CryptoServiceProviderTest.TransformFinalBlock_InputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1CryptoServiceProviderTest.TransformFinalBlock_InputCount_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1CryptoServiceProviderTest.TransformFinalBlock_InputCount_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1CryptoServiceProviderTest.TransformFinalBlock_InputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1CryptoServiceProviderTest.TransformFinalBlock_InputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1CryptoServiceProviderTest.TransformFinalBlock_ReturnedBuffer" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1CryptoServiceProviderTest.TransformFinalBlock_Twice_Initialize" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="SHA1Test" success="True" time="0.045" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1Test.Clear" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1Test.Clear2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1Test.ComputeHash_ArrayNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1Test.ComputeHash_ArrayNullIntInt" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1Test.ComputeHash_CountNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1Test.ComputeHash_CountOverflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1Test.ComputeHash_OffsetNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1Test.ComputeHash_OffsetOverflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1Test.Create" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1Test.CreateIncorrect" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1Test.CreateNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1Test.CreateUnknown" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1Test.Disposable" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1Test.Hash_AfterInitialize_SecondTime" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1Test.Hash_AfterTransformBlock" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1Test.Hash_AfterTransformFinalBlock" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1Test.InitializeDisposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1Test.InputOutputIntersection" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1Test.NullStream" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1Test.StaticInfo" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1Test.TransformBlock_Disposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1Test.TransformBlock_InputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1Test.TransformBlock_InputCount_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1Test.TransformBlock_InputCount_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1Test.TransformBlock_InputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1Test.TransformBlock_InputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1Test.TransformBlock_OutputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1Test.TransformBlock_OutputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1Test.TransformBlock_OutputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1Test.TransformFinalBlock_Disposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1Test.TransformFinalBlock_InputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1Test.TransformFinalBlock_InputCount_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1Test.TransformFinalBlock_InputCount_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1Test.TransformFinalBlock_InputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1Test.TransformFinalBlock_InputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1Test.TransformFinalBlock_ReturnedBuffer" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA1Test.TransformFinalBlock_Twice_Initialize" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="SHA256ManagedTest" success="True" time="0.308" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.Clear" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.Clear2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.ComputeHash_ArrayNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.ComputeHash_ArrayNullIntInt" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.ComputeHash_CountNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.ComputeHash_CountOverflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.ComputeHash_OffsetNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.ComputeHash_OffsetOverflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.Create" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.CreateIncorrect" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.CreateInvalid" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.CreateNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.Disposable" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.FIPSCompliance_Test1" executed="True" success="True" time="0.002" asserts="10" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.FIPSCompliance_Test2" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.FIPSCompliance_Test3" executed="True" success="True" time="0.225" asserts="10" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.Hash_AfterInitialize_SecondTime" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.Hash_AfterTransformBlock" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.Hash_AfterTransformFinalBlock" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.InitializeDisposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.InputOutputIntersection" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.NullStream" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.StaticInfo" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.TransformBlock_Disposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.TransformBlock_InputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.TransformBlock_InputCount_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.TransformBlock_InputCount_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.TransformBlock_InputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.TransformBlock_InputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.TransformBlock_OutputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.TransformBlock_OutputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.TransformBlock_OutputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.TransformFinalBlock_Disposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.TransformFinalBlock_InputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.TransformFinalBlock_InputCount_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.TransformFinalBlock_InputCount_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.TransformFinalBlock_InputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.TransformFinalBlock_InputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.TransformFinalBlock_ReturnedBuffer" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256ManagedTest.TransformFinalBlock_Twice_Initialize" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="SHA256Test" success="True" time="0.035" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256Test.Clear" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256Test.Clear2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256Test.ComputeHash_ArrayNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256Test.ComputeHash_ArrayNullIntInt" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256Test.ComputeHash_CountNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256Test.ComputeHash_CountOverflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256Test.ComputeHash_OffsetNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256Test.ComputeHash_OffsetOverflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256Test.Create" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256Test.CreateIncorrect" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256Test.CreateInvalid" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256Test.CreateNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256Test.Disposable" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256Test.Hash_AfterInitialize_SecondTime" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256Test.Hash_AfterTransformBlock" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256Test.Hash_AfterTransformFinalBlock" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256Test.InitializeDisposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256Test.InputOutputIntersection" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256Test.NullStream" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256Test.StaticInfo" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256Test.TransformBlock_Disposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256Test.TransformBlock_InputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256Test.TransformBlock_InputCount_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256Test.TransformBlock_InputCount_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256Test.TransformBlock_InputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256Test.TransformBlock_InputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256Test.TransformBlock_OutputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256Test.TransformBlock_OutputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256Test.TransformBlock_OutputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256Test.TransformFinalBlock_Disposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256Test.TransformFinalBlock_InputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256Test.TransformFinalBlock_InputCount_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256Test.TransformFinalBlock_InputCount_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256Test.TransformFinalBlock_InputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256Test.TransformFinalBlock_InputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256Test.TransformFinalBlock_ReturnedBuffer" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA256Test.TransformFinalBlock_Twice_Initialize" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="SHA384ManagedTest" success="True" time="0.240" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.Clear" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.Clear2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.ComputeHash_ArrayNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.ComputeHash_ArrayNullIntInt" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.ComputeHash_CountNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.ComputeHash_CountOverflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.ComputeHash_OffsetNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.ComputeHash_OffsetOverflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.Create" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.CreateIncorrect" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.CreateInvalid" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.CreateNull" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.Disposable" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.FIPSCompliance_Test1" executed="True" success="True" time="0.002" asserts="10" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.FIPSCompliance_Test2" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.FIPSCompliance_Test3" executed="True" success="True" time="0.199" asserts="10" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.Hash_AfterInitialize_SecondTime" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.Hash_AfterTransformBlock" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.Hash_AfterTransformFinalBlock" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.InitializeDisposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.InputOutputIntersection" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.NullStream" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.StaticInfo" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.TransformBlock_Disposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.TransformBlock_InputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.TransformBlock_InputCount_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.TransformBlock_InputCount_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.TransformBlock_InputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.TransformBlock_InputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.TransformBlock_OutputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.TransformBlock_OutputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.TransformBlock_OutputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.TransformFinalBlock_Disposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.TransformFinalBlock_InputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.TransformFinalBlock_InputCount_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.TransformFinalBlock_InputCount_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.TransformFinalBlock_InputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.TransformFinalBlock_InputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.TransformFinalBlock_ReturnedBuffer" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384ManagedTest.TransformFinalBlock_Twice_Initialize" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="SHA384Test" success="True" time="0.044" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384Test.Clear" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384Test.Clear2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384Test.ComputeHash_ArrayNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384Test.ComputeHash_ArrayNullIntInt" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384Test.ComputeHash_CountNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384Test.ComputeHash_CountOverflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384Test.ComputeHash_OffsetNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384Test.ComputeHash_OffsetOverflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384Test.Create" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384Test.CreateIncorrect" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384Test.CreateInvalid" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384Test.CreateNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384Test.Disposable" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384Test.Hash_AfterInitialize_SecondTime" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384Test.Hash_AfterTransformBlock" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384Test.Hash_AfterTransformFinalBlock" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384Test.InitializeDisposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384Test.InputOutputIntersection" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384Test.NullStream" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384Test.StaticInfo" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384Test.TransformBlock_Disposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384Test.TransformBlock_InputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384Test.TransformBlock_InputCount_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384Test.TransformBlock_InputCount_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384Test.TransformBlock_InputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384Test.TransformBlock_InputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384Test.TransformBlock_OutputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384Test.TransformBlock_OutputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384Test.TransformBlock_OutputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384Test.TransformFinalBlock_Disposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384Test.TransformFinalBlock_InputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384Test.TransformFinalBlock_InputCount_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384Test.TransformFinalBlock_InputCount_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384Test.TransformFinalBlock_InputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384Test.TransformFinalBlock_InputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384Test.TransformFinalBlock_ReturnedBuffer" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA384Test.TransformFinalBlock_Twice_Initialize" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="SHA512ManagedTest" success="True" time="0.274" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.Clear" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.Clear2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.ComputeHash_ArrayNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.ComputeHash_ArrayNullIntInt" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.ComputeHash_CountNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.ComputeHash_CountOverflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.ComputeHash_OffsetNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.ComputeHash_OffsetOverflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.Create" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.CreateIncorrect" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.CreateInvalid" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.CreateNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.Disposable" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.FIPSCompliance_Test1" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.FIPSCompliance_Test2" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.FIPSCompliance_Test3" executed="True" success="True" time="0.220" asserts="10" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.Hash_AfterInitialize_SecondTime" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.Hash_AfterTransformBlock" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.Hash_AfterTransformFinalBlock" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.InitializeDisposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.InputOutputIntersection" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.NullStream" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.StaticInfo" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.TransformBlock_Disposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.TransformBlock_InputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.TransformBlock_InputCount_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.TransformBlock_InputCount_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.TransformBlock_InputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.TransformBlock_InputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.TransformBlock_OutputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.TransformBlock_OutputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.TransformBlock_OutputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.TransformFinalBlock_Disposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.TransformFinalBlock_InputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.TransformFinalBlock_InputCount_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.TransformFinalBlock_InputCount_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.TransformFinalBlock_InputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.TransformFinalBlock_InputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.TransformFinalBlock_ReturnedBuffer" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512ManagedTest.TransformFinalBlock_Twice_Initialize" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="SHA512Test" success="True" time="0.045" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512Test.Clear" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512Test.Clear2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512Test.ComputeHash_ArrayNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512Test.ComputeHash_ArrayNullIntInt" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512Test.ComputeHash_CountNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512Test.ComputeHash_CountOverflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512Test.ComputeHash_OffsetNegative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512Test.ComputeHash_OffsetOverflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512Test.Create" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512Test.CreateIncorrect" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512Test.CreateInvalid" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512Test.CreateNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512Test.Disposable" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512Test.Hash_AfterInitialize_SecondTime" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512Test.Hash_AfterTransformBlock" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512Test.Hash_AfterTransformFinalBlock" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512Test.InitializeDisposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512Test.InputOutputIntersection" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512Test.NullStream" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512Test.StaticInfo" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512Test.TransformBlock_Disposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512Test.TransformBlock_InputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512Test.TransformBlock_InputCount_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512Test.TransformBlock_InputCount_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512Test.TransformBlock_InputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512Test.TransformBlock_InputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512Test.TransformBlock_OutputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512Test.TransformBlock_OutputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512Test.TransformBlock_OutputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512Test.TransformFinalBlock_Disposed" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512Test.TransformFinalBlock_InputBuffer_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512Test.TransformFinalBlock_InputCount_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512Test.TransformFinalBlock_InputCount_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512Test.TransformFinalBlock_InputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512Test.TransformFinalBlock_InputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512Test.TransformFinalBlock_ReturnedBuffer" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SHA512Test.TransformFinalBlock_Twice_Initialize" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="SignatureDescriptionTest" success="True" time="0.017" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.SignatureDescriptionTest.Constructor_Default" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SignatureDescriptionTest.Constructor_Null" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SignatureDescriptionTest.Constructor_SecurityElement_DSA" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Cryptography.SignatureDescriptionTest.Constructor_SecurityElement_Empty" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SignatureDescriptionTest.Constructor_SecurityElement_RSA" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Cryptography.SignatureDescriptionTest.Deformatter" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SignatureDescriptionTest.Digest" executed="True" success="True" time="0.001" asserts="11" />
                          <test-case name="MonoTests.System.Security.Cryptography.SignatureDescriptionTest.DSASignatureDescription" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Cryptography.SignatureDescriptionTest.Formatter" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SignatureDescriptionTest.Properties" executed="True" success="True" time="0.001" asserts="16" />
                          <test-case name="MonoTests.System.Security.Cryptography.SignatureDescriptionTest.RSASignatureDescription" executed="True" success="True" time="0.001" asserts="8" />
                        </results>
                      </test-suite>
                      <test-suite name="SymmetricAlgorithm2Test" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithm2Test.BlockSize_SameSize" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithm2Test.FeedbackZero" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithm2Test.InvalidBlockSize" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithm2Test.InvalidCipherMode" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithm2Test.InvalidFeedbackSize" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithm2Test.InvalidPaddingMode" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithm2Test.IV_None" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithm2Test.IV_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithm2Test.IV_TooBig" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithm2Test.Key_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithm2Test.Key_WrongSize" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithm2Test.KeySize_SameSize" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithm2Test.KeySize_WrongSize" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="SymmetricAlgorithmTest" success="True" time="0.276" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestDES_k64b64_CBC_None" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestDES_k64b64_CBC_PKCS7" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestDES_k64b64_CBC_Zeros" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestDES_k64b64_CFB8_None" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestDES_k64b64_CFB8_PKCS7" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestDES_k64b64_CFB8_Zeros" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestDES_k64b64_ECB_None" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestDES_k64b64_ECB_PKCS7" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestDES_k64b64_ECB_Zeros" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k104b64_CBC_None" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k104b64_CBC_PKCS7" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k104b64_CBC_Zeros" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k104b64_CFB8_None" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k104b64_CFB8_PKCS7" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k104b64_CFB8_Zeros" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k104b64_ECB_None" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k104b64_ECB_PKCS7" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k104b64_ECB_Zeros" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k112b64_CBC_None" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k112b64_CBC_PKCS7" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k112b64_CBC_Zeros" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k112b64_CFB8_None" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k112b64_CFB8_PKCS7" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k112b64_CFB8_Zeros" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k112b64_ECB_None" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k112b64_ECB_PKCS7" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k112b64_ECB_Zeros" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k120b64_CBC_None" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k120b64_CBC_PKCS7" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k120b64_CBC_Zeros" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k120b64_CFB8_None" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k120b64_CFB8_PKCS7" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k120b64_CFB8_Zeros" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k120b64_ECB_None" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k120b64_ECB_PKCS7" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k120b64_ECB_Zeros" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k128b64_CBC_None" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k128b64_CBC_PKCS7" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k128b64_CBC_Zeros" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k128b64_CFB8_None" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k128b64_CFB8_PKCS7" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k128b64_CFB8_Zeros" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k128b64_ECB_None" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k128b64_ECB_PKCS7" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k128b64_ECB_Zeros" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k40b64_CBC_None" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k40b64_CBC_PKCS7" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k40b64_CBC_Zeros" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k40b64_CFB8_None" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k40b64_CFB8_PKCS7" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k40b64_CFB8_Zeros" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k40b64_ECB_None" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k40b64_ECB_PKCS7" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k40b64_ECB_Zeros" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k48b64_CBC_None" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k48b64_CBC_PKCS7" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k48b64_CBC_Zeros" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k48b64_CFB8_None" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k48b64_CFB8_PKCS7" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k48b64_CFB8_Zeros" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k48b64_ECB_None" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k48b64_ECB_PKCS7" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k48b64_ECB_Zeros" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k56b64_CBC_None" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k56b64_CBC_PKCS7" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k56b64_CBC_Zeros" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k56b64_CFB8_None" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k56b64_CFB8_PKCS7" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k56b64_CFB8_Zeros" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k56b64_ECB_None" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k56b64_ECB_PKCS7" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k56b64_ECB_Zeros" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k64b64_CBC_None" executed="True" success="True" time="0.008" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k64b64_CBC_PKCS7" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k64b64_CBC_Zeros" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k64b64_CFB8_None" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k64b64_CFB8_PKCS7" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k64b64_CFB8_Zeros" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k64b64_ECB_None" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k64b64_ECB_PKCS7" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k64b64_ECB_Zeros" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k72b64_CBC_None" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k72b64_CBC_PKCS7" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k72b64_CBC_Zeros" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k72b64_CFB8_None" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k72b64_CFB8_PKCS7" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k72b64_CFB8_Zeros" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k72b64_ECB_None" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k72b64_ECB_PKCS7" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k72b64_ECB_Zeros" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k80b64_CBC_None" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k80b64_CBC_PKCS7" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k80b64_CBC_Zeros" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k80b64_CFB8_None" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k80b64_CFB8_PKCS7" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k80b64_CFB8_Zeros" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k80b64_ECB_None" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k80b64_ECB_PKCS7" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k80b64_ECB_Zeros" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k88b64_CBC_None" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k88b64_CBC_PKCS7" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k88b64_CBC_Zeros" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k88b64_CFB8_None" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k88b64_CFB8_PKCS7" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k88b64_CFB8_Zeros" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k88b64_ECB_None" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k88b64_ECB_PKCS7" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k88b64_ECB_Zeros" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k96b64_CBC_None" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k96b64_CBC_PKCS7" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k96b64_CBC_Zeros" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k96b64_CFB8_None" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k96b64_CFB8_PKCS7" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k96b64_CFB8_Zeros" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k96b64_ECB_None" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k96b64_ECB_PKCS7" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRC2_k96b64_ECB_Zeros" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k128b128_CBC_None" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k128b128_CBC_PKCS7" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k128b128_CBC_Zeros" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k128b128_ECB_None" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k128b128_ECB_PKCS7" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k128b128_ECB_Zeros" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k128b192_CBC_None" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k128b192_CBC_PKCS7" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k128b192_CBC_Zeros" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k128b192_ECB_None" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k128b192_ECB_PKCS7" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k128b192_ECB_Zeros" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k128b256_CBC_None" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k128b256_CBC_PKCS7" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k128b256_CBC_Zeros" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k128b256_ECB_None" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k128b256_ECB_PKCS7" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k128b256_ECB_Zeros" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k192b128_CBC_None" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k192b128_CBC_PKCS7" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k192b128_CBC_Zeros" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k192b128_ECB_None" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k192b128_ECB_PKCS7" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k192b128_ECB_Zeros" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k192b192_CBC_None" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k192b192_CBC_PKCS7" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k192b192_CBC_Zeros" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k192b192_ECB_None" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k192b192_ECB_PKCS7" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k192b192_ECB_Zeros" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k192b256_CBC_None" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k192b256_CBC_PKCS7" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k192b256_CBC_Zeros" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k192b256_ECB_None" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k192b256_ECB_PKCS7" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k192b256_ECB_Zeros" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k256b128_CBC_None" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k256b128_CBC_PKCS7" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k256b128_CBC_Zeros" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k256b128_ECB_None" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k256b128_ECB_PKCS7" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k256b128_ECB_Zeros" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k256b192_CBC_None" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k256b192_CBC_PKCS7" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k256b192_CBC_Zeros" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k256b192_ECB_None" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k256b192_ECB_PKCS7" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k256b192_ECB_Zeros" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k256b256_CBC_None" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k256b256_CBC_PKCS7" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k256b256_CBC_Zeros" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k256b256_ECB_None" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k256b256_ECB_PKCS7" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestRijndael_k256b256_ECB_Zeros" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestTripleDES_k128b64_CBC_None" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestTripleDES_k128b64_CBC_PKCS7" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestTripleDES_k128b64_CBC_Zeros" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestTripleDES_k128b64_CFB8_None" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestTripleDES_k128b64_CFB8_PKCS7" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestTripleDES_k128b64_CFB8_Zeros" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestTripleDES_k128b64_ECB_None" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestTripleDES_k128b64_ECB_PKCS7" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestTripleDES_k128b64_ECB_Zeros" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestTripleDES_k192b64_CBC_None" executed="True" success="True" time="0.008" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestTripleDES_k192b64_CBC_PKCS7" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestTripleDES_k192b64_CBC_Zeros" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestTripleDES_k192b64_CFB8_None" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestTripleDES_k192b64_CFB8_PKCS7" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestTripleDES_k192b64_CFB8_Zeros" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestTripleDES_k192b64_ECB_None" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestTripleDES_k192b64_ECB_PKCS7" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.SymmetricAlgorithmTest.TestTripleDES_k192b64_ECB_Zeros" executed="True" success="True" time="0.001" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite name="ToBase64TransformTest" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.ToBase64TransformTest.Properties" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Cryptography.ToBase64TransformTest.TransformBlock_Dispose" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.ToBase64TransformTest.TransformBlock_InputCount_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.ToBase64TransformTest.TransformBlock_InputCount_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.ToBase64TransformTest.TransformBlock_InputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.ToBase64TransformTest.TransformBlock_InputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.ToBase64TransformTest.TransformBlock_NullInput" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.ToBase64TransformTest.TransformBlock_NullOutput" executed="True" success="True" time="0.004" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.ToBase64TransformTest.TransformBlock_OutputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.ToBase64TransformTest.TransformBlock_OutputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.ToBase64TransformTest.TransformBlock_WrongLength" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.ToBase64TransformTest.TransformFinalBlock_Dispose" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.ToBase64TransformTest.TransformFinalBlock_Input_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.ToBase64TransformTest.TransformFinalBlock_InputCount_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.ToBase64TransformTest.TransformFinalBlock_InputCount_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.ToBase64TransformTest.TransformFinalBlock_InputOffset_Negative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.ToBase64TransformTest.TransformFinalBlock_InputOffset_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.ToBase64TransformTest.TransformFinalBlock_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.ToBase64TransformTest.TransformFinalBlock_SmallLength" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.ToBase64TransformTest.TransformFinalBlock_WrongLength" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="TripleDesCbcTests" success="True" time="0.018" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDesCbcTests.Cfb_None" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDesCbcTests.Roundtrip" executed="True" success="True" time="0.012" asserts="62" />
                        </results>
                      </test-suite>
                      <test-suite name="TripleDESCryptoServiceProviderTest" success="True" time="0.029" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESCryptoServiceProviderTest.CreateDecryptor_IV_BlockSize" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESCryptoServiceProviderTest.CreateDecryptor_IV_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESCryptoServiceProviderTest.CreateDecryptor_IV_TooBig" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESCryptoServiceProviderTest.CreateDecryptor_IV_TooSmall" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESCryptoServiceProviderTest.CreateDecryptor_IV_Zero" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESCryptoServiceProviderTest.CreateDecryptor_IvNull" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESCryptoServiceProviderTest.CreateDecryptor_KeyIv" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESCryptoServiceProviderTest.CreateDecryptor_KeyNull" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESCryptoServiceProviderTest.CreateEncryptor_IV_BlockSize" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESCryptoServiceProviderTest.CreateEncryptor_IV_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESCryptoServiceProviderTest.CreateEncryptor_IV_TooBig" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESCryptoServiceProviderTest.CreateEncryptor_IV_TooSmall" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESCryptoServiceProviderTest.CreateEncryptor_IV_Zero" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESCryptoServiceProviderTest.CreateEncryptor_IvNull" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESCryptoServiceProviderTest.CreateEncryptor_KeyIv" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESCryptoServiceProviderTest.CreateEncryptor_KeyNull" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESCryptoServiceProviderTest.TwoKeysTripleDes" executed="True" success="True" time="0.001" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="TripleDESTest" success="True" time="0.013" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTest.DefaultProperties" executed="True" success="True" time="0.001" asserts="13" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTest.IsSemiWeakKey_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTest.Key" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTest.KeyNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTest.KeyWeak128bits" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTest.KeyWeak192bits_AB" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTest.KeyWeak192bits_BC" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTest.KeyWrongLength" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTest.UseOneDesWeakKeyIn128bitsKey" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTest.UseOneDesWeakKeyIn192bitsKey" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="TripleDESTransformTest" success="True" time="0.118" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.CreateDecryptor_TransformBlock_One_ANSIX923_CBC" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.CreateDecryptor_TransformBlock_One_ANSIX923_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.CreateDecryptor_TransformBlock_One_ANSIX923_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.CreateDecryptor_TransformBlock_One_ISO10126_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.CreateDecryptor_TransformBlock_One_ISO10126_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.CreateDecryptor_TransformBlock_One_ISO10126_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.CreateDecryptor_TransformBlock_One_None_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.CreateDecryptor_TransformBlock_One_None_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.CreateDecryptor_TransformBlock_One_None_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.CreateDecryptor_TransformBlock_One_PKCS7_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.CreateDecryptor_TransformBlock_One_PKCS7_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.CreateDecryptor_TransformBlock_One_PKCS7_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.CreateDecryptor_TransformBlock_One_Zeros_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.CreateDecryptor_TransformBlock_One_Zeros_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.CreateDecryptor_TransformBlock_One_Zeros_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.CreateEncryptor_TransformBlock_One_ANSIX923_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.CreateEncryptor_TransformBlock_One_ANSIX923_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.CreateEncryptor_TransformBlock_One_ANSIX923_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.CreateEncryptor_TransformBlock_One_ISO10126_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.CreateEncryptor_TransformBlock_One_ISO10126_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.CreateEncryptor_TransformBlock_One_ISO10126_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.CreateEncryptor_TransformBlock_One_None_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.CreateEncryptor_TransformBlock_One_None_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.CreateEncryptor_TransformBlock_One_None_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.CreateEncryptor_TransformBlock_One_PKCS7_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.CreateEncryptor_TransformBlock_One_PKCS7_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.CreateEncryptor_TransformBlock_One_PKCS7_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.CreateEncryptor_TransformBlock_One_Zeros_CBC" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.CreateEncryptor_TransformBlock_One_Zeros_CFB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.CreateEncryptor_TransformBlock_One_Zeros_ECB" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptLastBlock_CBC_ANSIX923" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptLastBlock_CBC_ISO10126" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptLastBlock_CBC_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptLastBlock_CBC_PKCS7" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptLastBlock_CBC_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptLastBlock_CFB_ANSIX923" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptLastBlock_CFB_ISO10126" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptLastBlock_CFB_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptLastBlock_CFB_PKCS7" executed="True" success="True" time="0.003" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptLastBlock_CFB_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptLastBlock_ECB_ANSIX923" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptLastBlock_ECB_ISO10126" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptLastBlock_ECB_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptLastBlock_ECB_PKCS7" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptLastBlock_ECB_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptLastBlock_Final_CBC_ANSIX923" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptLastBlock_Final_CBC_ISO10126" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptLastBlock_Final_CBC_None" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptLastBlock_Final_CBC_PKCS7" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptLastBlock_Final_CBC_Zeros" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptLastBlock_Final_CFB_ANSIX923" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptLastBlock_Final_CFB_ISO10126" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptLastBlock_Final_CFB_None" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptLastBlock_Final_CFB_PKCS7" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptLastBlock_Final_CFB_Zeros" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptLastBlock_Final_ECB_ANSIX923" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptLastBlock_Final_ECB_ISO10126" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptLastBlock_Final_ECB_None" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptLastBlock_Final_ECB_PKCS7" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptLastBlock_Final_ECB_Zeros" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptMultipleBlock_CBC_ANSIX923" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptMultipleBlock_CBC_ISO10126" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptMultipleBlock_CBC_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptMultipleBlock_CBC_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptMultipleBlock_CBC_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptMultipleBlock_CFB_ANSIX923" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptMultipleBlock_CFB_ISO10126" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptMultipleBlock_CFB_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptMultipleBlock_CFB_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptMultipleBlock_CFB_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptMultipleBlock_ECB_ANSIX923" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptMultipleBlock_ECB_ISO10126" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptMultipleBlock_ECB_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptMultipleBlock_ECB_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptMultipleBlock_ECB_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptMultipleBlock_Final_CBC_ANSIX923" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptMultipleBlock_Final_CBC_ISO10126" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptMultipleBlock_Final_CBC_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptMultipleBlock_Final_CBC_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptMultipleBlock_Final_CBC_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptMultipleBlock_Final_CFB_ANSIX923" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptMultipleBlock_Final_CFB_ISO10126" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptMultipleBlock_Final_CFB_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptMultipleBlock_Final_CFB_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptMultipleBlock_Final_CFB_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptMultipleBlock_Final_ECB_ANSIX923" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptMultipleBlock_Final_ECB_ISO10126" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptMultipleBlock_Final_ECB_None" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptMultipleBlock_Final_ECB_PKCS7" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Cryptography.TripleDESTransformTest.DontDecryptMultipleBlock_Final_ECB_Zeros" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="X509Certificates" success="True" time="0.263" asserts="0">
                        <results>
                          <test-suite name="SoftwarePublisherCertificateTest" success="True" time="0.054" asserts="0">
                            <results>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.SoftwarePublisherCertificateTest.InvalidSignature" executed="True" success="True" time="0.053" asserts="1" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.SoftwarePublisherCertificateTest.NonSignedAssembly" executed="True" success="True" time="0.001" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="X509CAPI" success="True" time="0.008" asserts="0">
                            <results>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CAPI.ConstructorIntPtr" executed="True" success="True" time="0.006" asserts="17" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CAPI.ConstructorIntPtrZero" executed="True" success="True" time="0.000" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="X509CertificateTest" success="True" time="0.197" asserts="0">
                            <results>
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CertificateTest.Certificate1" executed="True" success="True" time="0.013" asserts="23" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CertificateTest.Certificate10" executed="True" success="True" time="0.004" asserts="23" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CertificateTest.Certificate11" executed="True" success="True" time="0.004" asserts="23" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CertificateTest.Certificate12" executed="True" success="True" time="0.022" asserts="23" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CertificateTest.Certificate13" executed="True" success="True" time="0.003" asserts="9" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CertificateTest.Certificate2" executed="True" success="True" time="0.012" asserts="23" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CertificateTest.Certificate3" executed="True" success="True" time="0.006" asserts="23" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CertificateTest.Certificate4" executed="True" success="True" time="0.012" asserts="23" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CertificateTest.Certificate5" executed="True" success="True" time="0.024" asserts="23" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CertificateTest.Certificate6" executed="True" success="True" time="0.010" asserts="23" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CertificateTest.Certificate7" executed="True" success="True" time="0.003" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CertificateTest.Certificate8" executed="True" success="True" time="0.005" asserts="23" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CertificateTest.Certificate9" executed="True" success="True" time="0.067" asserts="23" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CertificateTest.ConstructorX509CertificateNull" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="MonoTests.System.Security.Cryptography.X509Certificates.X509CertificateTest.Equality" executed="True" success="True" time="0.000" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="HostSecurityManagerTest" success="True" time="0.018" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Security.HostSecurityManagerTest.Defaults" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Security.HostSecurityManagerTest.DetermineApplicationTrust_Evidence_Evidence_Null" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Security.HostSecurityManagerTest.DetermineApplicationTrust_Evidence_Null_TrustManagerContext" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Security.HostSecurityManagerTest.DetermineApplicationTrust_Null_Evidence_TrustManagerContext" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.HostSecurityManagerTest.ProvideAppDomainEvidence" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Security.HostSecurityManagerTest.ProvideAssemblyEvidence" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Security.HostSecurityManagerTest.ProvideAssemblyEvidence_NullAssembly" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Security.HostSecurityManagerTest.ResolvePolicy_CurrentAssemblyEvidence" executed="True" success="True" time="0.006" asserts="1" />
                      <test-case name="MonoTests.System.Security.HostSecurityManagerTest.ResolvePolicy_Empty" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Security.HostSecurityManagerTest.ResolvePolicy_Null" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="NamedPermissionSetTest" success="True" time="0.056" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Security.NamedPermissionSetTest.ConstructorName" executed="True" success="True" time="0.002" asserts="7" />
                      <test-case name="MonoTests.System.Security.NamedPermissionSetTest.ConstructorNamedPermissionSetNull" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Security.NamedPermissionSetTest.ConstructorNameEmpty" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.NamedPermissionSetTest.ConstructorNameEmptyPermissionSet" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.NamedPermissionSetTest.ConstructorNameEmptyPermissionState" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.NamedPermissionSetTest.ConstructorNameNull" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.NamedPermissionSetTest.ConstructorNameNullPermissionSet" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.NamedPermissionSetTest.ConstructorNameNullPermissionState" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.NamedPermissionSetTest.ConstructorNamePermissionSetNull" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Security.NamedPermissionSetTest.ConstructorNamePermissionStateNone" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Security.NamedPermissionSetTest.ConstructorNamePermissionStateUnrestricted" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Security.NamedPermissionSetTest.ConstructorNameReserved" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Security.NamedPermissionSetTest.Copy" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Security.NamedPermissionSetTest.Copy_Name" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Security.NamedPermissionSetTest.Copy_Name_Empty" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.NamedPermissionSetTest.Copy_Name_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.NamedPermissionSetTest.Description" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Security.NamedPermissionSetTest.Equals" executed="True" success="True" time="0.002" asserts="10" />
                      <test-case name="MonoTests.System.Security.NamedPermissionSetTest.FromXml" executed="True" success="True" time="0.002" asserts="10" />
                      <test-case name="MonoTests.System.Security.NamedPermissionSetTest.FromXml_InvalidPermission" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Security.NamedPermissionSetTest.FromXml_NoClass" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.NamedPermissionSetTest.FromXml_NoName" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Security.NamedPermissionSetTest.FromXml_NoVersion" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Security.NamedPermissionSetTest.FromXml_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.NamedPermissionSetTest.FromXml_WrongClass" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Security.NamedPermissionSetTest.FromXml_WrongTagCase" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Security.NamedPermissionSetTest.FromXml_WrongVersion" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Security.NamedPermissionSetTest.GetHashCode_" executed="True" success="True" time="0.011" asserts="3" />
                      <test-case name="MonoTests.System.Security.NamedPermissionSetTest.Name" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Security.NamedPermissionSetTest.NameEmpty" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.NamedPermissionSetTest.NameNull" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Security.NamedPermissionSetTest.ToXml_None" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Security.NamedPermissionSetTest.ToXml_Unrestricted" executed="True" success="True" time="0.001" asserts="6" />
                    </results>
                  </test-suite>
                  <test-suite name="Permissions" success="True" time="1.159" asserts="0">
                    <results>
                      <test-suite name="CodeAccessSecurityAttributeTest" success="True" time="0.005" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.CodeAccessSecurityAttributeTest.Action" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Permissions.CodeAccessSecurityAttributeTest.Action_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.CodeAccessSecurityAttributeTest.Attributes" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Security.Permissions.CodeAccessSecurityAttributeTest.Unrestricted" executed="True" success="True" time="0.001" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="EnvironmentPermissionAttributeTest" success="True" time="0.015" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.EnvironmentPermissionAttributeTest.Action" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Permissions.EnvironmentPermissionAttributeTest.Action_Invalid" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.EnvironmentPermissionAttributeTest.All" executed="True" success="True" time="0.002" asserts="4" />
                          <test-case name="MonoTests.System.Security.Permissions.EnvironmentPermissionAttributeTest.All_Get" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.EnvironmentPermissionAttributeTest.Attributes" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.EnvironmentPermissionAttributeTest.Default" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Permissions.EnvironmentPermissionAttributeTest.Read" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Permissions.EnvironmentPermissionAttributeTest.Unrestricted" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.EnvironmentPermissionAttributeTest.Write" executed="True" success="True" time="0.001" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite name="EnvironmentPermissionTest" success="True" time="0.034" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.EnvironmentPermissionTest.AddPathList" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.EnvironmentPermissionTest.AllAccess" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.EnvironmentPermissionTest.FromXmlInvalidPermission" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.EnvironmentPermissionTest.FromXmlNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.EnvironmentPermissionTest.FromXmlWrongVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.EnvironmentPermissionTest.GetPathList" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Permissions.EnvironmentPermissionTest.GetPathListAllAccess" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.EnvironmentPermissionTest.GetPathListNoAccess" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.EnvironmentPermissionTest.Intersect" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.EnvironmentPermissionTest.IntersectWithBadPermission" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.EnvironmentPermissionTest.IntersectWithNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.EnvironmentPermissionTest.IntersectWithUnrestricted" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Permissions.EnvironmentPermissionTest.IsSubsetOf" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Permissions.EnvironmentPermissionTest.IsSubsetOfBadPermission" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.EnvironmentPermissionTest.IsSubsetOfNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.EnvironmentPermissionTest.IsSubsetOfUnrestricted" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.EnvironmentPermissionTest.NoAccess" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.EnvironmentPermissionTest.NullPathList" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.EnvironmentPermissionTest.PermissionStateNone" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.EnvironmentPermissionTest.PermissionStateUnrestricted" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Permissions.EnvironmentPermissionTest.ReadAccess" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.EnvironmentPermissionTest.SetPathList" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.EnvironmentPermissionTest.UnionWithBadPermission" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.EnvironmentPermissionTest.UnionWithNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.EnvironmentPermissionTest.UnionWithUnrestricted" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.EnvironmentPermissionTest.WriteAccess" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="FileDialogPermissionAttributeTest" success="True" time="0.019" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.FileDialogPermissionAttributeTest.Action" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Permissions.FileDialogPermissionAttributeTest.Action_Invalid" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.FileDialogPermissionAttributeTest.Attributes" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.FileDialogPermissionAttributeTest.Default" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.FileDialogPermissionAttributeTest.None" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.FileDialogPermissionAttributeTest.Open" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.FileDialogPermissionAttributeTest.OpenSave" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Permissions.FileDialogPermissionAttributeTest.Save" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.FileDialogPermissionAttributeTest.Unrestricted" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="FileDialogPermissionTest" success="True" time="0.032" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.FileDialogPermissionTest.Access" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.FileDialogPermissionTest.Derestricted" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.FileDialogPermissionTest.FromXml" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.FileDialogPermissionTest.FromXmlInvalidPermission" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.FileDialogPermissionTest.FromXmlNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.FileDialogPermissionTest.FromXmlWrongVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.FileDialogPermissionTest.Intersect" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.FileDialogPermissionTest.IntersectWithBadPermission" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.FileDialogPermissionTest.IntersectWithNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.FileDialogPermissionTest.IntersectWithUnrestricted" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Permissions.FileDialogPermissionTest.IsSubsetOf" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Permissions.FileDialogPermissionTest.IsSubsetOfBadPermission" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.FileDialogPermissionTest.IsSubsetOfNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.FileDialogPermissionTest.IsSubsetOfUnrestricted" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.FileDialogPermissionTest.None" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.FileDialogPermissionTest.Open" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.FileDialogPermissionTest.OpenSave" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.FileDialogPermissionTest.PermissionStateNone" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.FileDialogPermissionTest.PermissionStateUnrestricted" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Permissions.FileDialogPermissionTest.Save" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.FileDialogPermissionTest.Union" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.FileDialogPermissionTest.UnionWithBadPermission" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.FileDialogPermissionTest.UnionWithNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.FileDialogPermissionTest.UnionWithUnrestricted" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="FileIOPermissionAttributeTest" success="True" time="0.025" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.FileIOPermissionAttributeTest.Action" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Permissions.FileIOPermissionAttributeTest.Action_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.FileIOPermissionAttributeTest.All" executed="True" success="True" time="0.003" asserts="12" />
                          <test-case name="MonoTests.System.Security.Permissions.FileIOPermissionAttributeTest.All_Get" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.FileIOPermissionAttributeTest.Append" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="MonoTests.System.Security.Permissions.FileIOPermissionAttributeTest.Attributes" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.FileIOPermissionAttributeTest.ChangeAccessControl" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="MonoTests.System.Security.Permissions.FileIOPermissionAttributeTest.Default" executed="True" success="True" time="0.001" asserts="13" />
                          <test-case name="MonoTests.System.Security.Permissions.FileIOPermissionAttributeTest.NonC14NPath" executed="True" success="True" time="0.001" asserts="8">
                            <categories>
                              <category name="NotDotNet" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Security.Permissions.FileIOPermissionAttributeTest.PathDiscovery" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="MonoTests.System.Security.Permissions.FileIOPermissionAttributeTest.Read" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="MonoTests.System.Security.Permissions.FileIOPermissionAttributeTest.Unrestricted" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.FileIOPermissionAttributeTest.ViewAccessControl" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="MonoTests.System.Security.Permissions.FileIOPermissionAttributeTest.ViewAndModify_Get" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.FileIOPermissionAttributeTest.ViewAndModify_Set" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="MonoTests.System.Security.Permissions.FileIOPermissionAttributeTest.Write" executed="True" success="True" time="0.001" asserts="8" />
                        </results>
                      </test-suite>
                      <test-suite name="FileIOPermissionTest" success="True" time="0.043" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.FileIOPermissionTest.AddPathListStringArray" executed="True" success="True" time="0.002" asserts="9" />
                          <test-case name="MonoTests.System.Security.Permissions.FileIOPermissionTest.ConstructorPermissionState" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.FileIOPermissionTest.ConstructorString" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.FileIOPermissionTest.ConstructorString_InvalidAccess" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.FileIOPermissionTest.ConstructorString_InvalidPath" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.FileIOPermissionTest.ConstructorString_NotRooted" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.FileIOPermissionTest.ConstructorString_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.FileIOPermissionTest.ConstructorString_Wildcard" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.FileIOPermissionTest.ConstructorStringArray" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.FileIOPermissionTest.ConstructorStringArray_InvalidAccess" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.FileIOPermissionTest.ConstructorStringArray_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.FileIOPermissionTest.ConstructorStringArray_Wildcard" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.FileIOPermissionTest.FileUrl" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.FileIOPermissionTest.FromXML" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.FileIOPermissionTest.Intersect" executed="True" success="True" time="0.003" asserts="13" />
                          <test-case name="MonoTests.System.Security.Permissions.FileIOPermissionTest.IsSubsetOf" executed="True" success="True" time="0.002" asserts="7" />
                          <test-case name="MonoTests.System.Security.Permissions.FileIOPermissionTest.ShortToLong" executed="False">
                            <reason>
                              <message><![CDATA[should compatibility go that far ?]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Security.Permissions.FileIOPermissionTest.ToXML" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.FileIOPermissionTest.Union" executed="True" success="True" time="0.002" asserts="8" />
                          <test-case name="MonoTests.System.Security.Permissions.FileIOPermissionTest.Union_Bug79118" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.FileIOPermissionTest.Union_Partial" executed="True" success="True" time="0.001" asserts="16" />
                        </results>
                      </test-suite>
                      <test-suite name="GacIdentityPermissionAttributeTest" success="True" time="0.008" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.GacIdentityPermissionAttributeTest.Action" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Permissions.GacIdentityPermissionAttributeTest.Action_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.GacIdentityPermissionAttributeTest.Attributes" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.GacIdentityPermissionAttributeTest.Default" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Permissions.GacIdentityPermissionAttributeTest.Unrestricted" executed="True" success="True" time="0.001" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="GacIdentityPermissionTest" success="True" time="0.020" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.GacIdentityPermissionTest.FromXml_NoClass" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.GacIdentityPermissionTest.FromXml_NoVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.GacIdentityPermissionTest.FromXml_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.GacIdentityPermissionTest.FromXml_WrongClass" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.GacIdentityPermissionTest.FromXml_WrongTag" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.GacIdentityPermissionTest.FromXml_WrongTagCase" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.GacIdentityPermissionTest.FromXml_WrongVersion" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.GacIdentityPermissionTest.GacIdentityPermission_Empty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.GacIdentityPermissionTest.Intersect" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.GacIdentityPermissionTest.Intersect_DifferentPermissions" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.GacIdentityPermissionTest.IsSubsetOf" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.GacIdentityPermissionTest.IsSubsetOf_DifferentPermissions" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.GacIdentityPermissionTest.PermissionStateInvalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.GacIdentityPermissionTest.PermissionStateNone" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.GacIdentityPermissionTest.Union" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.GacIdentityPermissionTest.Union_DifferentPermissions" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="HostProtectionAttributeTest" success="True" time="0.140" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.HostProtectionAttributeTest.Attributes" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.HostProtectionAttributeTest.ExternalProcessMgmt" executed="True" success="True" time="0.002" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.HostProtectionAttributeTest.ExternalThreading" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.HostProtectionAttributeTest.HostProtectionAttribute_Assert" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.HostProtectionAttributeTest.HostProtectionAttribute_Demand" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.HostProtectionAttributeTest.HostProtectionAttribute_Deny" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.HostProtectionAttributeTest.HostProtectionAttribute_Empty" executed="True" success="True" time="0.002" asserts="14" />
                          <test-case name="MonoTests.System.Security.Permissions.HostProtectionAttributeTest.HostProtectionAttribute_InheritanceDemand" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.HostProtectionAttributeTest.HostProtectionAttribute_LinkDemand" executed="True" success="True" time="0.001" asserts="14" />
                          <test-case name="MonoTests.System.Security.Permissions.HostProtectionAttributeTest.HostProtectionAttribute_PermitOnly" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.HostProtectionAttributeTest.HostProtectionAttribute_RequestMinimum" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.HostProtectionAttributeTest.HostProtectionAttribute_RequestOptional" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.HostProtectionAttributeTest.HostProtectionAttribute_RequestRefuse" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.HostProtectionAttributeTest.MayLeakOnAbort" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.HostProtectionAttributeTest.Properties" executed="True" success="True" time="0.003" asserts="38" />
                          <test-case name="MonoTests.System.Security.Permissions.HostProtectionAttributeTest.SecurityInfrastructure" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.HostProtectionAttributeTest.SelfAffectingProcessMgmt" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.HostProtectionAttributeTest.SelfAffectingThreading" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.HostProtectionAttributeTest.SharedState" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.HostProtectionAttributeTest.Synchronization" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.HostProtectionAttributeTest.UI" executed="True" success="True" time="0.000" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="IBuiltInPermissionTest" success="True" time="0.024" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.IBuiltInPermissionTest.Environment" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.IBuiltInPermissionTest.FileDialog" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.IBuiltInPermissionTest.FileIO" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.IBuiltInPermissionTest.GacIdentity" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.IBuiltInPermissionTest.HostProtection" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.IBuiltInPermissionTest.IsolatedStorageFile" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.IBuiltInPermissionTest.KeyContainer" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.IBuiltInPermissionTest.Principal" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.IBuiltInPermissionTest.PublisherIdentity" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.IBuiltInPermissionTest.Reflection" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.IBuiltInPermissionTest.Registry" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.IBuiltInPermissionTest.Security" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.IBuiltInPermissionTest.SiteIdentity" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.IBuiltInPermissionTest.StrongNameIdentity" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.IBuiltInPermissionTest.UI" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.IBuiltInPermissionTest.UrlIdentity" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.IBuiltInPermissionTest.ZoneIdentity" executed="True" success="True" time="0.001" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="IsolatedStorageFilePermissionAttributeTest" success="True" time="0.012" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.IsolatedStorageFilePermissionAttributeTest.Action" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Permissions.IsolatedStorageFilePermissionAttributeTest.Action_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.IsolatedStorageFilePermissionAttributeTest.Attributes" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.IsolatedStorageFilePermissionAttributeTest.Default" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Security.Permissions.IsolatedStorageFilePermissionAttributeTest.Unrestricted" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.IsolatedStorageFilePermissionAttributeTest.UsageAllowed" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Permissions.IsolatedStorageFilePermissionAttributeTest.UsageAllowed_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.IsolatedStorageFilePermissionAttributeTest.UserQuota" executed="True" success="True" time="0.001" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="IsolatedStorageFilePermissionTest" success="True" time="0.036" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.IsolatedStorageFilePermissionTest.FromXml_NoClass" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.IsolatedStorageFilePermissionTest.FromXml_NoVersion" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.IsolatedStorageFilePermissionTest.FromXml_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.IsolatedStorageFilePermissionTest.FromXml_WrongClass" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.IsolatedStorageFilePermissionTest.FromXml_WrongTag" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.IsolatedStorageFilePermissionTest.FromXml_WrongTagCase" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.IsolatedStorageFilePermissionTest.FromXml_WrongVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.IsolatedStorageFilePermissionTest.Intersect" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.IsolatedStorageFilePermissionTest.Intersect_DifferentPermissions" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.IsolatedStorageFilePermissionTest.IsSubsetOf" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Permissions.IsolatedStorageFilePermissionTest.IsSubsetOf_DifferentPermissions" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.IsolatedStorageFilePermissionTest.PermissionStateInvalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.IsolatedStorageFilePermissionTest.PermissionStateNone" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Permissions.IsolatedStorageFilePermissionTest.PermissionStateUnrestricted" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Permissions.IsolatedStorageFilePermissionTest.Union" executed="True" success="True" time="0.001" asserts="15" />
                          <test-case name="MonoTests.System.Security.Permissions.IsolatedStorageFilePermissionTest.Union_DifferentPermissions" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.IsolatedStorageFilePermissionTest.UsageAllowedQuota" executed="True" success="True" time="0.004" asserts="86" />
                        </results>
                      </test-suite>
                      <test-suite name="IsolatedStoragePermissionAttributeTest" success="True" time="0.005" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.IsolatedStoragePermissionAttributeTest.Action" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Permissions.IsolatedStoragePermissionAttributeTest.Action_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.IsolatedStoragePermissionAttributeTest.Attributes" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Security.Permissions.IsolatedStoragePermissionAttributeTest.Unrestricted" executed="True" success="True" time="0.000" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="KeyContainerPermissionAttributeTest" success="True" time="0.014" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.KeyContainerPermissionAttributeTest.Action" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Permissions.KeyContainerPermissionAttributeTest.Action_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.KeyContainerPermissionAttributeTest.Attributes" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.KeyContainerPermissionAttributeTest.Flags" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.KeyContainerPermissionAttributeTest.Flags_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.KeyContainerPermissionAttributeTest.KeyContainerName" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Permissions.KeyContainerPermissionAttributeTest.KeySpec" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Permissions.KeyContainerPermissionAttributeTest.KeyStore" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Permissions.KeyContainerPermissionAttributeTest.ProviderName" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Permissions.KeyContainerPermissionAttributeTest.ProviderType" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Permissions.KeyContainerPermissionAttributeTest.Unrestricted" executed="True" success="True" time="0.001" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="PermissionSetAttributeTest" success="True" time="0.020" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.PermissionSetAttributeTest.Action" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Permissions.PermissionSetAttributeTest.Action_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.PermissionSetAttributeTest.Attributes" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.PermissionSetAttributeTest.Default" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Permissions.PermissionSetAttributeTest.File" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Permissions.PermissionSetAttributeTest.Hex" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.PermissionSetAttributeTest.Hex_ASCII_Permission" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.PermissionSetAttributeTest.Hex_Bad" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.PermissionSetAttributeTest.Hex_BigEndianUnicode_Permission" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.PermissionSetAttributeTest.Hex_Unicode_Permission" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.PermissionSetAttributeTest.Name" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Permissions.PermissionSetAttributeTest.UnicodeEncoded" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.PermissionSetAttributeTest.Unrestricted" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.PermissionSetAttributeTest.XML" executed="True" success="True" time="0.001" asserts="8" />
                        </results>
                      </test-suite>
                      <test-suite name="PrincipalPermissionAttributeTest" success="True" time="0.018" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionAttributeTest.Action" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionAttributeTest.Action_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionAttributeTest.Attributes" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionAttributeTest.Default" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionAttributeTest.NameNullRoleAuthenticated" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionAttributeTest.NameNullRoleNonAuthenticated" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionAttributeTest.NameNullRoleNullAuthenticated" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionAttributeTest.NameNullRoleNullNonAuthenticated" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionAttributeTest.NameRoleAuthenticated" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionAttributeTest.NameRoleNonAuthenticated" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionAttributeTest.NameRoleNullAuthenticated" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionAttributeTest.NameRoleNullNonAuthenticated" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionAttributeTest.Unrestricted" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="PrincipalPermissionTest" success="True" time="0.038" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionTest.AuthenticatedNullNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionTest.FromXml" executed="True" success="True" time="0.003" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionTest.FromXmlInvalidPermission" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionTest.FromXmlNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionTest.FromXmlWrongVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionTest.Intersect" executed="True" success="True" time="0.002" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionTest.IntersectNullName" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionTest.IntersectNullRole" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionTest.IntersectWithBadPermission" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionTest.IntersectWithNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionTest.IntersectWithUnrestricted" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionTest.IsSubsetOf" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionTest.IsSubsetOfBadPermission" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionTest.IsSubsetOfNone" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionTest.IsSubsetOfNull" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionTest.IsSubsetOfUnrestricted" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionTest.Name" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionTest.NameRole" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionTest.PermissionStateNone" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionTest.PermissionStateUnrestricted" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionTest.Role" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionTest.UnauthenticatedName" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionTest.UnauthenticatedNameRole" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionTest.UnauthenticatedRole" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionTest.Union" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionTest.UnionWithBadPermission" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionTest.UnionWithNull" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.PrincipalPermissionTest.UnionWithUnrestricted" executed="True" success="True" time="0.001" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="PublisherIdentityPermissionAttributeTest" success="True" time="0.019" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.PublisherIdentityPermissionAttributeTest.Action" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Permissions.PublisherIdentityPermissionAttributeTest.Action_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.PublisherIdentityPermissionAttributeTest.Attributes" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.PublisherIdentityPermissionAttributeTest.CertFile" executed="True" success="True" time="0.003" asserts="4" />
                          <test-case name="MonoTests.System.Security.Permissions.PublisherIdentityPermissionAttributeTest.Default" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Security.Permissions.PublisherIdentityPermissionAttributeTest.None" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Permissions.PublisherIdentityPermissionAttributeTest.Priority" executed="True" success="True" time="0.003" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.PublisherIdentityPermissionAttributeTest.SignedFile" executed="False">
                            <reason>
                              <message><![CDATA[CreateFromSignedFile isn't finished yet]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Security.Permissions.PublisherIdentityPermissionAttributeTest.X509CertificateProperty" executed="True" success="True" time="0.001" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite name="PublisherIdentityPermissionTest" success="True" time="0.046" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.PublisherIdentityPermissionTest.Certificate" executed="True" success="True" time="0.010" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.PublisherIdentityPermissionTest.ConstructorCertificateNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.PublisherIdentityPermissionTest.FromXml" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.PublisherIdentityPermissionTest.FromXmlInvalidPermission" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.PublisherIdentityPermissionTest.FromXmlNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.PublisherIdentityPermissionTest.FromXmlWrongVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.PublisherIdentityPermissionTest.Intersect" executed="True" success="True" time="0.004" asserts="4" />
                          <test-case name="MonoTests.System.Security.Permissions.PublisherIdentityPermissionTest.IntersectWithBadPermission" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.PublisherIdentityPermissionTest.IntersectWithNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.PublisherIdentityPermissionTest.IsSubsetOf" executed="True" success="True" time="0.004" asserts="6" />
                          <test-case name="MonoTests.System.Security.Permissions.PublisherIdentityPermissionTest.IsSubsetOfBadPermission" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.PublisherIdentityPermissionTest.IsSubsetOfNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.PublisherIdentityPermissionTest.PermissionStateNone" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.PublisherIdentityPermissionTest.PropertyCertificateNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.PublisherIdentityPermissionTest.Union" executed="True" success="True" time="0.005" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.PublisherIdentityPermissionTest.UnionWithBadPermission" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.PublisherIdentityPermissionTest.UnionWithNull" executed="True" success="True" time="0.002" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="ReflectionPermissionAttributeTest" success="True" time="0.024" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.ReflectionPermissionAttributeTest.Action" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Permissions.ReflectionPermissionAttributeTest.Action_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ReflectionPermissionAttributeTest.AllFlags" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Permissions.ReflectionPermissionAttributeTest.Attributes" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.ReflectionPermissionAttributeTest.Default" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Permissions.ReflectionPermissionAttributeTest.Flags" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="MonoTests.System.Security.Permissions.ReflectionPermissionAttributeTest.Flags_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ReflectionPermissionAttributeTest.MemberAccess" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Security.Permissions.ReflectionPermissionAttributeTest.NoFlags" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Security.Permissions.ReflectionPermissionAttributeTest.ReflectionEmit" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Security.Permissions.ReflectionPermissionAttributeTest.TypeInformation" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Security.Permissions.ReflectionPermissionAttributeTest.Unrestricted" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="ReflectionPermissionTest" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.ReflectionPermissionTest.AllFlags" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.ReflectionPermissionTest.Derestricted" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.ReflectionPermissionTest.Flags" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Security.Permissions.ReflectionPermissionTest.FromXml" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Permissions.ReflectionPermissionTest.FromXmlInvalidPermission" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ReflectionPermissionTest.FromXmlNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ReflectionPermissionTest.FromXmlWrongVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ReflectionPermissionTest.Intersect" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.ReflectionPermissionTest.IntersectWithBadPermission" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ReflectionPermissionTest.IntersectWithNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.ReflectionPermissionTest.IntersectWithUnrestricted" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.ReflectionPermissionTest.IsSubsetOf" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="MonoTests.System.Security.Permissions.ReflectionPermissionTest.IsSubsetOfBadPermission" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ReflectionPermissionTest.IsSubsetOfNull" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.ReflectionPermissionTest.IsSubsetOfUnrestricted" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.ReflectionPermissionTest.MemberAccess" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.ReflectionPermissionTest.NoFlags" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.ReflectionPermissionTest.PermissionStateNone" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.ReflectionPermissionTest.PermissionStateUnrestricted" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Permissions.ReflectionPermissionTest.ReflectionEmit" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.ReflectionPermissionTest.TypeInformation" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.ReflectionPermissionTest.Union" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.ReflectionPermissionTest.UnionWithBadPermission" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ReflectionPermissionTest.UnionWithNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.ReflectionPermissionTest.UnionWithUnrestricted" executed="True" success="True" time="0.001" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="RegistryPermissionAttributeTest" success="True" time="0.020" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionAttributeTest.Action" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionAttributeTest.Action_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionAttributeTest.All_Get" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionAttributeTest.All_Set" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionAttributeTest.Attributes" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionAttributeTest.ChangeAccessControl" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionAttributeTest.Create" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionAttributeTest.Default" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionAttributeTest.Read" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionAttributeTest.Unrestricted" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionAttributeTest.ViewAccessControl" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionAttributeTest.ViewAndModify_Get" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionAttributeTest.ViewAndModify_Set" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionAttributeTest.Write" executed="True" success="True" time="0.001" asserts="10" />
                        </results>
                      </test-suite>
                      <test-suite name="RegistryPermissionTest" success="True" time="0.014" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionTest.AddPathList" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionTest.AddPathList_Subset" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionTest.AllAccess" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionTest.CreateAccess" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionTest.FromXmlInvalidPermission" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionTest.FromXmlNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionTest.FromXmlWrongVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionTest.GetPathList" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionTest.GetPathListAllAccess" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionTest.GetPathListNoAccess" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionTest.Intersect" executed="True" success="True" time="0.002" asserts="6" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionTest.IntersectWithBadPermission" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionTest.IntersectWithNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionTest.IntersectWithUnrestricted" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionTest.IsSubsetOf" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionTest.IsSubsetOfBadPermission" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionTest.IsSubsetOfNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionTest.IsSubsetOfUnrestricted" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionTest.NoAccess" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionTest.NullPathList" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionTest.PermissionStateNone" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionTest.PermissionStateUnrestricted" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionTest.ReadAccess" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionTest.SetPathList" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionTest.UnionWithBadPermission" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionTest.UnionWithNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionTest.UnionWithUnrestricted" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.RegistryPermissionTest.WriteAccess" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="SecurityPermissionAttributeTest" success="True" time="0.087" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionAttributeTest.Action" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionAttributeTest.Action_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionAttributeTest.Assertion" executed="True" success="True" time="0.038" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionAttributeTest.Attributes" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionAttributeTest.BindingRedirects" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionAttributeTest.ControlAppDomain" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionAttributeTest.ControlDomainPolicy" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionAttributeTest.ControlEvidence" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionAttributeTest.ControlPolicy" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionAttributeTest.ControlPrincipal" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionAttributeTest.ControlThread" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionAttributeTest.Default" executed="True" success="True" time="0.001" asserts="18" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionAttributeTest.Execution" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionAttributeTest.Flags" executed="True" success="True" time="0.002" asserts="28" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionAttributeTest.Infrastructure" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionAttributeTest.RemotingConfiguration" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionAttributeTest.SerializationFormatter" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionAttributeTest.SkipVerification" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionAttributeTest.UnmanagedCode" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionAttributeTest.Unrestricted" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="SecurityPermissionTest" success="True" time="0.038" asserts="0">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionTest.Copy" executed="True" success="True" time="0.001" asserts="16" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionTest.Flags_SecurityPermissionFlags_Bad" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionTest.FromXml_NoClass" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionTest.FromXml_NoVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionTest.FromXml_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionTest.FromXml_WrongClass" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionTest.FromXml_WrongTag" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionTest.FromXml_WrongTagCase" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionTest.FromXml_WrongVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionTest.Intersect_None" executed="True" success="True" time="0.001" asserts="30" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionTest.Intersect_Null" executed="True" success="True" time="0.000" asserts="16" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionTest.Intersect_Self" executed="True" success="True" time="0.000" asserts="15" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionTest.Intersect_Unrestricted" executed="True" success="True" time="0.001" asserts="32" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionTest.IsSubset_None" executed="True" success="True" time="0.001" asserts="32" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionTest.IsSubset_Null" executed="True" success="True" time="0.000" asserts="16" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionTest.IsSubset_Self" executed="True" success="True" time="0.000" asserts="16" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionTest.IsSubset_Unrestricted" executed="True" success="True" time="0.001" asserts="32" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionTest.PermissionState_Bad" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionTest.PermissionState_None" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionTest.PermissionState_Unrestricted" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionTest.SecurityPermissionFlags_Bad" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionTest.Union_None" executed="True" success="True" time="0.001" asserts="30" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionTest.Union_Null" executed="True" success="True" time="0.001" asserts="16" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionTest.Union_Self" executed="True" success="True" time="0.001" asserts="16" />
                          <test-case name="MonoTests.System.Security.Permissions.SecurityPermissionTest.Union_Unrestricted" executed="True" success="True" time="0.001" asserts="32" />
                        </results>
                      </test-suite>
                      <test-suite name="SiteIdentityPermissionAttributeTest" success="True" time="0.007" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.SiteIdentityPermissionAttributeTest.Action" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Permissions.SiteIdentityPermissionAttributeTest.Action_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.SiteIdentityPermissionAttributeTest.Attributes" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.SiteIdentityPermissionAttributeTest.Default" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.SiteIdentityPermissionAttributeTest.Site" executed="True" success="True" time="0.001" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="SiteIdentityPermissionTest" success="True" time="0.030" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.SiteIdentityPermissionTest.Copy" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.SiteIdentityPermissionTest.FromXml_NoClass" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.SiteIdentityPermissionTest.FromXml_NoVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.SiteIdentityPermissionTest.FromXml_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.SiteIdentityPermissionTest.FromXml_WrongClass" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.SiteIdentityPermissionTest.FromXml_WrongTag" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.SiteIdentityPermissionTest.FromXml_WrongTagCase" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.SiteIdentityPermissionTest.FromXml_WrongVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.SiteIdentityPermissionTest.Intersect_Different" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.SiteIdentityPermissionTest.Intersect_None" executed="True" success="True" time="0.001" asserts="11" />
                          <test-case name="MonoTests.System.Security.Permissions.SiteIdentityPermissionTest.Intersect_Null" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.SiteIdentityPermissionTest.Intersect_Self" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.SiteIdentityPermissionTest.IsSubset_Different" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.SiteIdentityPermissionTest.IsSubset_None" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Security.Permissions.SiteIdentityPermissionTest.IsSubset_Null" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Security.Permissions.SiteIdentityPermissionTest.IsSubset_Self" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Security.Permissions.SiteIdentityPermissionTest.IsSubset_Wildcard" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.SiteIdentityPermissionTest.PermissionState_Bad" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.SiteIdentityPermissionTest.Site" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.SiteIdentityPermissionTest.Site_Bad" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.SiteIdentityPermissionTest.Site_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.SiteIdentityPermissionTest.SiteIdentityPermission_EmptySite" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.SiteIdentityPermissionTest.SiteIdentityPermission_NullSite" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.SiteIdentityPermissionTest.Union_None" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Security.Permissions.SiteIdentityPermissionTest.Union_Null" executed="True" success="True" time="0.000" asserts="5" />
                        </results>
                      </test-suite>
                      <test-suite name="StrongNameIdentityPermissionAttributeTest" success="True" time="0.021" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionAttributeTest.Action" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionAttributeTest.Action_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionAttributeTest.Attributes" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionAttributeTest.CreatePermission" executed="True" success="True" time="0.002" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionAttributeTest.CreatePermission_NamePublicKey" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionAttributeTest.CreatePermission_NameVersion" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionAttributeTest.CreatePermission_OnlyName" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionAttributeTest.CreatePermission_OnlyPublicKey" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionAttributeTest.CreatePermission_OnlyVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionAttributeTest.CreatePermission_PublicKeyVersion" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionAttributeTest.Default" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionAttributeTest.Name" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionAttributeTest.PublicKey" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionAttributeTest.Version" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="StrongNameIdentityPermissionTest" success="True" time="0.059" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionTest.Copy_NameEmpty" executed="True" success="True" time="0.003" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionTest.FromXml_NameEmpty" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionTest.FromXml_NoClass" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionTest.FromXml_NoVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionTest.FromXml_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionTest.FromXml_WrongClass" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionTest.FromXml_WrongTag" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionTest.FromXml_WrongTagCase" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionTest.FromXml_WrongVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionTest.Intersect" executed="True" success="True" time="0.002" asserts="7" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionTest.Intersect_DifferentPermissions" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionTest.IsSubsetOf" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionTest.IsSubsetOf_Corlib" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionTest.IsSubsetOf_DifferentPermissions" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionTest.Name" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionTest.Name_Empty" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionTest.Name_Multiple_Get" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionTest.Name_Multiple_Set" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionTest.PermissionStateInvalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionTest.PermissionStateNone" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionTest.PermissionStateUnrestricted" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionTest.PublicKey_Multiple_Get" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionTest.PublicKey_Multiple_Set" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionTest.PublicKey_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionTest.StrongNameIdentityPermission_All" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionTest.StrongNameIdentityPermission_BlobNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionTest.StrongNameIdentityPermission_NameEmpty" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionTest.StrongNameIdentityPermission_NameNull" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionTest.StrongNameIdentityPermission_VersionNull" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionTest.Union" executed="True" success="True" time="0.001" asserts="14" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionTest.Union_DifferentPermissions" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionTest.Union_DifferentPk" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionTest.Union_SamePublicKey_DifferentName" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionTest.Union_SamePublicKey_DifferentVersion" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionTest.Version" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionTest.Version_Multiple_Get" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNameIdentityPermissionTest.Version_Multiple_Set" executed="True" success="True" time="0.001" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="StrongNamePublicKeyBlobTest" success="True" time="0.003" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.StrongNamePublicKeyBlobTest.InvalidPublicKey" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNamePublicKeyBlobTest.PublicKey" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Security.Permissions.StrongNamePublicKeyBlobTest.TestNull" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="UIPermissionAttributeTest" success="True" time="0.012" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.UIPermissionAttributeTest.Action" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Permissions.UIPermissionAttributeTest.Action_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.UIPermissionAttributeTest.Attributes" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.UIPermissionAttributeTest.Clipboard" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.UIPermissionAttributeTest.Clipboard_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.UIPermissionAttributeTest.Default" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Security.Permissions.UIPermissionAttributeTest.Unrestricted" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.UIPermissionAttributeTest.Window" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Permissions.UIPermissionAttributeTest.Window_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="UIPermissionTest" success="True" time="0.037" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.UIPermissionTest.Clipboard_Bad" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.UIPermissionTest.FromXml_NoClass" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.UIPermissionTest.FromXml_NoVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.UIPermissionTest.FromXml_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.UIPermissionTest.FromXml_WrongClass" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.UIPermissionTest.FromXml_WrongTag" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.UIPermissionTest.FromXml_WrongTagCase" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.UIPermissionTest.FromXml_WrongVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.UIPermissionTest.Intersect" executed="True" success="True" time="0.002" asserts="22" />
                          <test-case name="MonoTests.System.Security.Permissions.UIPermissionTest.Intersect_DifferentPermissions" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.UIPermissionTest.IsSubsetOf" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Permissions.UIPermissionTest.IsSubsetOf_DifferentPermissions" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.UIPermissionTest.PermissionStateInvalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.UIPermissionTest.PermissionStateNone" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Permissions.UIPermissionTest.PermissionStateUnrestricted" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Permissions.UIPermissionTest.UIPermission_Clipboard_All" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.UIPermissionTest.UIPermission_Clipboard_Bad" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.UIPermissionTest.UIPermission_Clipboard_No" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.UIPermissionTest.UIPermission_Clipboard_Own" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.UIPermissionTest.UIPermission_Windows_All" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.UIPermissionTest.UIPermission_Windows_Bad" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.UIPermissionTest.UIPermission_Windows_No" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.UIPermissionTest.UIPermission_Windows_SafeSubWindows" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.UIPermissionTest.UIPermission_Windows_SafeTopLevelWindows" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.UIPermissionTest.Union" executed="True" success="True" time="0.001" asserts="26" />
                          <test-case name="MonoTests.System.Security.Permissions.UIPermissionTest.Union_DifferentPermissions" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.UIPermissionTest.Unrestricted" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.UIPermissionTest.Window_Bad" executed="True" success="True" time="0.001" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="UrlIdentityPermissionAttributeTest" success="True" time="0.007" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.UrlIdentityPermissionAttributeTest.Action_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.UrlIdentityPermissionAttributeTest.Attributes" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.UrlIdentityPermissionAttributeTest.Default" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.UrlIdentityPermissionAttributeTest.DefaultPermission" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Permissions.UrlIdentityPermissionAttributeTest.Url" executed="True" success="True" time="0.001" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="UrlIdentityPermissionTest" success="True" time="0.029" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.UrlIdentityPermissionTest.Copy" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Security.Permissions.UrlIdentityPermissionTest.Copy_None" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.UrlIdentityPermissionTest.FromXml_NoClass" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.UrlIdentityPermissionTest.FromXml_NoVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.UrlIdentityPermissionTest.FromXml_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.UrlIdentityPermissionTest.FromXml_WrongClass" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.UrlIdentityPermissionTest.FromXml_WrongTag" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.UrlIdentityPermissionTest.FromXml_WrongTagCase" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.UrlIdentityPermissionTest.FromXml_WrongVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.UrlIdentityPermissionTest.Intersect_Different" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.UrlIdentityPermissionTest.Intersect_Null" executed="True" success="True" time="0.000" asserts="10" />
                          <test-case name="MonoTests.System.Security.Permissions.UrlIdentityPermissionTest.Intersect_Self" executed="True" success="True" time="0.000" asserts="10" />
                          <test-case name="MonoTests.System.Security.Permissions.UrlIdentityPermissionTest.IsSubset_Different" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Permissions.UrlIdentityPermissionTest.IsSubset_Null" executed="True" success="True" time="0.001" asserts="11" />
                          <test-case name="MonoTests.System.Security.Permissions.UrlIdentityPermissionTest.IsSubset_Self" executed="True" success="True" time="0.000" asserts="11" />
                          <test-case name="MonoTests.System.Security.Permissions.UrlIdentityPermissionTest.PermissionState_Bad" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.UrlIdentityPermissionTest.PermissionState_None" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Permissions.UrlIdentityPermissionTest.Union_None" executed="True" success="True" time="0.001" asserts="20" />
                          <test-case name="MonoTests.System.Security.Permissions.UrlIdentityPermissionTest.Union_Null" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Security.Permissions.UrlIdentityPermissionTest.Union_Self" executed="True" success="True" time="0.001" asserts="11" />
                          <test-case name="MonoTests.System.Security.Permissions.UrlIdentityPermissionTest.Url" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Security.Permissions.UrlIdentityPermissionTest.Url_Null" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.UrlIdentityPermissionTest.UrlIdentityPermission_NullUrl" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="ZoneIdentityPermissionAttributeTest" success="True" time="0.009" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.ZoneIdentityPermissionAttributeTest.Action" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Permissions.ZoneIdentityPermissionAttributeTest.Action_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ZoneIdentityPermissionAttributeTest.Attributes" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Permissions.ZoneIdentityPermissionAttributeTest.Default" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Permissions.ZoneIdentityPermissionAttributeTest.TypeId" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.ZoneIdentityPermissionAttributeTest.Zone" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Permissions.ZoneIdentityPermissionAttributeTest.Zone_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="ZoneIdentityPermissionTest" success="True" time="0.026" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Permissions.ZoneIdentityPermissionTest.FromXml_NoClass" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ZoneIdentityPermissionTest.FromXml_NoVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ZoneIdentityPermissionTest.FromXml_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ZoneIdentityPermissionTest.FromXml_WrongClass" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ZoneIdentityPermissionTest.FromXml_WrongTag" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ZoneIdentityPermissionTest.FromXml_WrongTagCase" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ZoneIdentityPermissionTest.FromXml_WrongVersion" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ZoneIdentityPermissionTest.Intersect_DifferentPermissions" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ZoneIdentityPermissionTest.IsSubsetOf_DifferentPermissions" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ZoneIdentityPermissionTest.PermissionStateInvalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ZoneIdentityPermissionTest.PermissionStateNone" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Permissions.ZoneIdentityPermissionTest.SecurityZone_Internet" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="MonoTests.System.Security.Permissions.ZoneIdentityPermissionTest.SecurityZone_Intranet" executed="True" success="True" time="0.000" asserts="12" />
                          <test-case name="MonoTests.System.Security.Permissions.ZoneIdentityPermissionTest.SecurityZone_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Permissions.ZoneIdentityPermissionTest.SecurityZone_MyComputer" executed="True" success="True" time="0.000" asserts="12" />
                          <test-case name="MonoTests.System.Security.Permissions.ZoneIdentityPermissionTest.SecurityZone_NoZone" executed="True" success="True" time="0.001" asserts="16" />
                          <test-case name="MonoTests.System.Security.Permissions.ZoneIdentityPermissionTest.SecurityZone_Trusted" executed="True" success="True" time="0.000" asserts="12" />
                          <test-case name="MonoTests.System.Security.Permissions.ZoneIdentityPermissionTest.SecurityZone_Untrusted" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="MonoTests.System.Security.Permissions.ZoneIdentityPermissionTest.Union" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Permissions.ZoneIdentityPermissionTest.Union_DifferentPermissions" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="PermissionSetTest" success="True" time="0.138" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Security.PermissionSetTest.AddPermission" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.AddPermission_NoCopy" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.AddPermission_NonCasPermission" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.AddPermission_NonCasPermission_Unrestricted" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.AddPermission_NonCasPermissionNone" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.AddPermission_NonCasPermissionNone_Unrestricted" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.AddPermission_NonCasPermissionUnrestricted" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.AddPermission_NonCasPermissionUnrestricted_Unrestricted" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.AddPermission_Null" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.AddPermission_PermissionUnrestricted" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.AddPermission_SetUnrestricted" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.Assert_NonCasPermission" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.ContainsNonCodeAccessPermissions" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.ConvertPermissionSet_BinaryToBinary" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.ConvertPermissionSet_NullData" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.ConvertPermissionSet_NullIn" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.ConvertPermissionSet_NullOut" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.ConvertPermissionSet_UnknownIn" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.ConvertPermissionSet_UnknownOut" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.ConvertPermissionSet_XmlAsciiToXmlUnicode" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.ConvertPermissionSet_XmlToBinary" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.ConvertPermissionSet_XmlToXml" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.Copy_None" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.Copy_Unrestricted" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.CopyTo" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.CopyTo_IndexOverLength" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.CopyTo_IndexOverLength_Empty" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.CopyTo_NegativeIndex" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.CopyTo_NegativeIndex_Empty" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.CopyTo_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.CopyTo_Rank" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.CopyTo_Rank_Empty" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.Deny_NonCasPermission" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.FromXml_PermissionOutsideCorlib" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.FromXml_PermissionWithoutNamespace" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.FromXml_WithPermissionWithoutClass" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.FromXmlEmpty" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.FromXmlInvalidPermission" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.FromXmlNull" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.FromXmlOne" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.FromXmlWrongVersion" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.GetEnumerator" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.GetHashCode_" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.GetPermission_None" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.GetPermission_Null" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.GetPermission_Subclass" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.GetPermission_Unrestricted" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.Intersect_Empty" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.Intersect_OneNonIUnrestrictedPermission" executed="True" success="True" time="0.005" asserts="27" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.Intersect_OnePermission" executed="True" success="True" time="0.001" asserts="15" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.IsEmpty_None" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.IsEmpty_Unrestricted" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.IsSubset_Empty" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.IsSubset_NonCasPermission" executed="True" success="True" time="0.000" asserts="7" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.IsSubset_NonCasPermission_None" executed="True" success="True" time="0.000" asserts="7" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.IsSubset_NonCasPermission_Unrestricted" executed="True" success="True" time="0.000" asserts="7" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.IsSubset_OneNonIUnrestrictedPermission" executed="True" success="True" time="0.001" asserts="11" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.IsSubset_OnePermission" executed="True" success="True" time="0.000" asserts="7" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.PermissionSetNamedPermissionSet" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.PermissionSetNull" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.PermissionSetPermissionSet" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.PermissionStateNone" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.PermissionStateUnrestricted" executed="True" success="True" time="0.005" asserts="5" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.PermitOnly_NonCasPermission" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.RemovePermission_None" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.RemovePermission_Null" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.RemovePermission_Unrestricted" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.SetPermission_None" executed="True" success="True" time="0.002" asserts="11" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.SetPermission_Null" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.SetPermission_Unrestricted" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.ToXmlNone" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.ToXmlUnrestricted" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.Unification_FromFx10" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.Unification_FromFx11" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.Unification_FromFx20" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.Unification_FromFx99" executed="True" success="True" time="0.006" asserts="1" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.Union_Empty" executed="True" success="True" time="0.000" asserts="24" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.Union_OneNonIUnrestrictedPermission" executed="True" success="True" time="0.001" asserts="33" />
                      <test-case name="MonoTests.System.Security.PermissionSetTest.Union_OnePermission" executed="True" success="True" time="0.000" asserts="21" />
                    </results>
                  </test-suite>
                  <test-suite name="Policy" success="True" time="1.244" asserts="0">
                    <results>
                      <test-suite name="AllMembershipConditionTest" success="True" time="0.023" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Policy.AllMembershipConditionTest.Check" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Policy.AllMembershipConditionTest.Constructor" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.AllMembershipConditionTest.Copy" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Policy.AllMembershipConditionTest.Equals" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.AllMembershipConditionTest.FromXml" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.AllMembershipConditionTest.FromXml_InvalidClass" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.AllMembershipConditionTest.FromXml_InvalidTag" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.AllMembershipConditionTest.FromXml_InvalidVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.AllMembershipConditionTest.FromXml_NoClass" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.AllMembershipConditionTest.FromXml_NoVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.AllMembershipConditionTest.FromXml_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.AllMembershipConditionTest.FromXml_PolicyLevelNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.AllMembershipConditionTest.FromXml_SecurityElementNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.AllMembershipConditionTest.FromXml_WrongTagCase" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.AllMembershipConditionTest.GetHashCode_" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.AllMembershipConditionTest.ToString_" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.AllMembershipConditionTest.ToXml" executed="True" success="True" time="0.001" asserts="5" />
                        </results>
                      </test-suite>
                      <test-suite name="ApplicationDirectoryMembershipConditionTest" success="True" time="0.030" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Policy.ApplicationDirectoryMembershipConditionTest.Check" executed="True" success="True" time="0.003" asserts="8" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationDirectoryMembershipConditionTest.Constructor" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationDirectoryMembershipConditionTest.Copy" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationDirectoryMembershipConditionTest.Equals" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationDirectoryMembershipConditionTest.FromXml" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationDirectoryMembershipConditionTest.FromXml_InvalidClass" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationDirectoryMembershipConditionTest.FromXml_InvalidTag" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationDirectoryMembershipConditionTest.FromXml_InvalidVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationDirectoryMembershipConditionTest.FromXml_NoClass" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationDirectoryMembershipConditionTest.FromXml_NoVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationDirectoryMembershipConditionTest.FromXml_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationDirectoryMembershipConditionTest.FromXml_PolicyLevelNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationDirectoryMembershipConditionTest.FromXml_SecurityElementNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationDirectoryMembershipConditionTest.FromXml_WrongTagCase" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationDirectoryMembershipConditionTest.GetHashCode_" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationDirectoryMembershipConditionTest.ToString_" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationDirectoryMembershipConditionTest.ToXml" executed="True" success="True" time="0.001" asserts="5" />
                        </results>
                      </test-suite>
                      <test-suite name="ApplicationDirectoryTest" success="True" time="0.014" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Policy.ApplicationDirectoryTest.ApplicationDirectory_Empty" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationDirectoryTest.ApplicationDirectory_FileUrl" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationDirectoryTest.ApplicationDirectory_HttpUrl" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationDirectoryTest.ApplicationDirectory_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationDirectoryTest.ApplicationDirectory_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationDirectoryTest.ApplicationDirectory_String" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationDirectoryTest.Copy" executed="True" success="True" time="0.002" asserts="6" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationDirectoryTest.Equals" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationDirectoryTest.Equals_Invalid" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationDirectoryTest.GetHashCode_" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationDirectoryTest.ToString_" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationDirectoryTest.ToString_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="ApplicationSecurityManagerTest" success="True" time="0.015" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Policy.ApplicationSecurityManagerTest.ApplicationTrustManager" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationSecurityManagerTest.DefaultTrustManager_DetermineApplicationTrust_Null_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationSecurityManagerTest.DefaultTrustManager_DetermineApplicationTrust_Null_TrustManagerContext" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationSecurityManagerTest.DefaultTrustManager_FromXml" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationSecurityManagerTest.DefaultTrustManager_FromXml_BadClass" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationSecurityManagerTest.DefaultTrustManager_FromXml_BadTag" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationSecurityManagerTest.DefaultTrustManager_FromXml_BadVersion" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationSecurityManagerTest.DefaultTrustManager_FromXml_NoAttributes" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationSecurityManagerTest.DefaultTrustManager_FromXml_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationSecurityManagerTest.DefaultTrustManager_ToXml" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationSecurityManagerTest.DetermineApplicationTrust_Null_Null" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationSecurityManagerTest.DetermineApplicationTrust_Null_TrustManagerContext" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationSecurityManagerTest.UserApplicationTrusts" executed="True" success="True" time="0.001" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="ApplicationTrustTest" success="True" time="0.034" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Policy.ApplicationTrustTest.ApplicationIdentity" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationTrustTest.ApplicationIdentity_Change" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationTrustTest.ApplicationIdentity_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationTrustTest.Constructor_Empty" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationTrustTest.Constructor_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationTrustTest.DefaultGrantSet" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationTrustTest.ExtraInfo" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationTrustTest.ExtraInfo_NotSerializable" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationTrustTest.FromXml_InvalidTag" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationTrustTest.FromXml_InvalidVersion" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationTrustTest.FromXml_NoChild" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationTrustTest.FromXml_NoVersion" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationTrustTest.FromXml_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationTrustTest.IsApplicationTrustedToRun" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationTrustTest.Persist" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Policy.ApplicationTrustTest.ToFromXmlRoundtrip" executed="True" success="True" time="0.009" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="CodeGroupTest" success="True" time="0.032" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Policy.CodeGroupTest.AddChild" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Policy.CodeGroupTest.AddChild_Null" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.CodeGroupTest.AttributeString" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.CodeGroupTest.Children_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.CodeGroupTest.Constructor" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Policy.CodeGroupTest.Constructor_MembershipConditionNullPolicyStatement" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.CodeGroupTest.Constructor_MembershipConditionPolicyStatementNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.CodeGroupTest.Description" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.CodeGroupTest.Equals" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.CodeGroupTest.EqualsWithChildren" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Policy.CodeGroupTest.FromXml_Bad" executed="True" success="True" time="0.003" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.CodeGroupTest.Name" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.CodeGroupTest.PermissionSetName" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.CodeGroupTest.RemoveChild" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Policy.CodeGroupTest.RemoveChild_NonExistant" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.CodeGroupTest.RemoveChild_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.CodeGroupTest.ToFromXmlRoundtrip" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Policy.CodeGroupTest.ToFromXmlRoundtrip_WithChildren" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.CodeGroupTest.ToFromXmlRoundtrip_WithChildren_Second" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Policy.CodeGroupTest.ToXml" executed="True" success="True" time="0.001" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="EvidenceTest" success="True" time="0.033" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Policy.EvidenceTest.AddAssembly" executed="True" success="True" time="0.001" asserts="100" />
                          <test-case name="MonoTests.System.Security.Policy.EvidenceTest.AddHost" executed="True" success="True" time="0.001" asserts="100" />
                          <test-case name="MonoTests.System.Security.Policy.EvidenceTest.AppDomain_NoPermissionRequestEvidence" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.EvidenceTest.ArgOutOfRangeCopyToException" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.EvidenceTest.ArgOutOfRangeCopyToNoException" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.EvidenceTest.Assembly_NoPermissionRequestEvidence" executed="True" success="True" time="0.000" asserts="0">
                            <categories>
                              <category name="MobileNotWorking" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Security.Policy.EvidenceTest.BadMerge" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.EvidenceTest.Clear" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.EvidenceTest.Constructor_Null" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.EvidenceTest.Constructor_NullNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.EvidenceTest.CopyConstructor" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.EvidenceTest.CopyToNoException" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.EvidenceTest.Count" executed="True" success="True" time="0.001" asserts="101" />
                          <test-case name="MonoTests.System.Security.Policy.EvidenceTest.DefaultConstructor" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.EvidenceTest.DefaultProperties" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Policy.EvidenceTest.EnumeratorReset" executed="True" success="True" time="0.001" asserts="16" />
                          <test-case name="MonoTests.System.Security.Policy.EvidenceTest.GetHostAssemblyEnumerator" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.EvidenceTest.GetHostEnumerator" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.EvidenceTest.Merge" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.EvidenceTest.Merge_Null" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.EvidenceTest.MultiArgConstructorForEach" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Policy.EvidenceTest.MultipleConstructor" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.EvidenceTest.NullCopyToException" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="FileCodeGroupTest" success="True" time="0.047" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Policy.FileCodeGroupTest.Constructor_AllAccess" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.FileCodeGroupTest.Constructor_Append" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.FileCodeGroupTest.Constructor_MembershipConditionNullFileIOPermissionAccess" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.FileCodeGroupTest.Constructor_NoAccess" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.FileCodeGroupTest.Constructor_PathDiscovery" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.FileCodeGroupTest.Constructor_Read" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.FileCodeGroupTest.Constructor_Write" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.FileCodeGroupTest.Copy" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Policy.FileCodeGroupTest.CopyWithChildren" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Policy.FileCodeGroupTest.MergeLogic" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.FileCodeGroupTest.Resolve_AllMembershipCondition_AllAccess" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.FileCodeGroupTest.Resolve_AllMembershipCondition_NoAccess" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.FileCodeGroupTest.Resolve_NoMatch" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.FileCodeGroupTest.Resolve_Null" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.FileCodeGroupTest.Resolve_ZoneMembershipCondition_Internet" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Policy.FileCodeGroupTest.Resolve_ZoneMembershipCondition_Intranet" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Policy.FileCodeGroupTest.Resolve_ZoneMembershipCondition_MyComputer" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Policy.FileCodeGroupTest.Resolve_ZoneMembershipCondition_NoZone" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.FileCodeGroupTest.Resolve_ZoneMembershipCondition_Trusted" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Policy.FileCodeGroupTest.Resolve_ZoneMembershipCondition_Untrusted" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Policy.FileCodeGroupTest.ResolveMatchingCodeGroups_NoMatch" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.FileCodeGroupTest.ResolveMatchingCodeGroups_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.FileCodeGroupTest.ResolveMatchingCodeGroups_OneLevel" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Policy.FileCodeGroupTest.ResolveMatchingCodeGroups_ThreeLevel" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Policy.FileCodeGroupTest.ResolveMatchingCodeGroups_TwoLevel" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Security.Policy.FileCodeGroupTest.ToFromXmlRoundtrip" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Policy.FileCodeGroupTest.ToXml" executed="True" success="True" time="0.001" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="FirstMatchCodeGroupTest" success="True" time="0.013" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Policy.FirstMatchCodeGroupTest.Constructor" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Policy.FirstMatchCodeGroupTest.Constructor_MembershipConditionNullPolicyStatement" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.FirstMatchCodeGroupTest.Constructor_MembershipConditionPolicyStatementNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.FirstMatchCodeGroupTest.Copy" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Policy.FirstMatchCodeGroupTest.CopyWithChildren" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Policy.FirstMatchCodeGroupTest.MergeLogic" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.FirstMatchCodeGroupTest.Resolve_Null" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.FirstMatchCodeGroupTest.ResolveMatchingCodeGroups_Null" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.FirstMatchCodeGroupTest.ToFromXmlRoundtrip" executed="True" success="True" time="0.001" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="GacInstalledTest" success="True" time="0.008" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Policy.GacInstalledTest.Constructor" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.GacInstalledTest.Copy" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Policy.GacInstalledTest.CreateIdentityPermission" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Policy.GacInstalledTest.Equals" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Policy.GacInstalledTest.GetHashCode_" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.GacInstalledTest.ToString_" executed="True" success="True" time="0.001" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="GacMembershipConditionTest" success="True" time="0.028" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Policy.GacMembershipConditionTest.Check" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Policy.GacMembershipConditionTest.Constructor" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.GacMembershipConditionTest.Copy" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Policy.GacMembershipConditionTest.Equals" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Policy.GacMembershipConditionTest.FromXml" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.GacMembershipConditionTest.FromXml_InvalidClass" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.GacMembershipConditionTest.FromXml_InvalidTag" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.GacMembershipConditionTest.FromXml_InvalidVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.GacMembershipConditionTest.FromXml_NoClass" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.GacMembershipConditionTest.FromXml_NoVersion" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.GacMembershipConditionTest.FromXml_Null" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.GacMembershipConditionTest.FromXml_PolicyLevelNull" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.GacMembershipConditionTest.FromXml_SecurityElementNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.GacMembershipConditionTest.GetHashCode_" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.GacMembershipConditionTest.ToString_" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.GacMembershipConditionTest.ToXml" executed="True" success="True" time="0.001" asserts="5" />
                        </results>
                      </test-suite>
                      <test-suite name="HashMembershipConditionTest" success="True" time="0.273" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Policy.HashMembershipConditionTest.Check" executed="True" success="True" time="0.122" asserts="6" />
                          <test-case name="MonoTests.System.Security.Policy.HashMembershipConditionTest.Constructor_MD5" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Policy.HashMembershipConditionTest.Constructor_SHA1" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Policy.HashMembershipConditionTest.Copy" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Policy.HashMembershipConditionTest.Equals" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Security.Policy.HashMembershipConditionTest.FromXml" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.HashMembershipConditionTest.FromXml_Empty_HashAlgorithm" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.HashMembershipConditionTest.FromXml_Empty_HashValue" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.HashMembershipConditionTest.FromXml_Empty_ToString" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.HashMembershipConditionTest.FromXml_InvalidClass" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.HashMembershipConditionTest.FromXml_InvalidTag" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.HashMembershipConditionTest.FromXml_InvalidVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.HashMembershipConditionTest.FromXml_NoClass" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.HashMembershipConditionTest.FromXml_NoVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.HashMembershipConditionTest.FromXml_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.HashMembershipConditionTest.FromXml_PolicyLevelNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.HashMembershipConditionTest.FromXml_SecurityElementNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.HashMembershipConditionTest.FromXml_WrongTagCase" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.HashMembershipConditionTest.GetHashCode_" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.HashMembershipConditionTest.HashValue" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.HashMembershipConditionTest.ToString_" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Policy.HashMembershipConditionTest.ToXml" executed="True" success="True" time="0.000" asserts="5" />
                        </results>
                      </test-suite>
                      <test-suite name="HashTest" success="True" time="0.022" asserts="0">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                        <results>
                          <test-case name="MonoTests.System.Security.Policy.HashTest.CreateMD5_Empty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.HashTest.CreateMD5_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.HashTest.CreateMD5_SHA1" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.HashTest.CreateMD5_ToString" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.HashTest.CreateSHA1_Empty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.HashTest.CreateSHA1_MD5" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.HashTest.CreateSHA1_Null" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.HashTest.CreateSHA1_ToString" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.HashTest.GenerateHash_MD5" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.HashTest.GenerateHash_RIPEMD160" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.HashTest.GenerateHash_SHA1" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.HashTest.GenerateHash_SHA256" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.HashTest.GenerateHash_SHA384" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.HashTest.GenerateHash_SHA512" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.HashTest.Hash_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.HashTest.MD5_Property" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.HashTest.SHA1_Property" executed="True" success="True" time="0.001" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="IBuiltInEvidenceTest" success="True" time="0.015" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Policy.IBuiltInEvidenceTest.ApplicationDirectory_GetRequiredSize" executed="False">
                            <reason>
                              <message><![CDATA[not sure if we gonna need this and, if we do, if we must be compatible with it]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Security.Policy.IBuiltInEvidenceTest.GacInstalled_GetRequiredSize" executed="False">
                            <reason>
                              <message><![CDATA[not sure if we gonna need this and, if we do, if we must be compatible with it]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Security.Policy.IBuiltInEvidenceTest.GacInstalled_InitFromBuffer" executed="False">
                            <reason>
                              <message><![CDATA[not sure if we gonna need this and, if we do, if we must be compatible with it]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Security.Policy.IBuiltInEvidenceTest.GacInstalled_InitFromBuffer_BadData" executed="False">
                            <reason>
                              <message><![CDATA[not sure if we gonna need this and, if we do, if we must be compatible with it]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Security.Policy.IBuiltInEvidenceTest.GacInstalled_InitFromBuffer_Null" executed="False">
                            <reason>
                              <message><![CDATA[not sure if we gonna need this and, if we do, if we must be compatible with it]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Security.Policy.IBuiltInEvidenceTest.GacInstalled_InitFromBuffer_OutOfRange" executed="False">
                            <reason>
                              <message><![CDATA[not sure if we gonna need this and, if we do, if we must be compatible with it]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Security.Policy.IBuiltInEvidenceTest.GacInstalled_OutputToBuffer" executed="False">
                            <reason>
                              <message><![CDATA[not sure if we gonna need this and, if we do, if we must be compatible with it]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Security.Policy.IBuiltInEvidenceTest.GacInstalled_OutputToBuffer_Null" executed="False">
                            <reason>
                              <message><![CDATA[not sure if we gonna need this and, if we do, if we must be compatible with it]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Security.Policy.IBuiltInEvidenceTest.GacInstalled_OutputToBuffer_OutOfRange" executed="False">
                            <reason>
                              <message><![CDATA[not sure if we gonna need this and, if we do, if we must be compatible with it]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Security.Policy.IBuiltInEvidenceTest.Hash_GetRequiredSize" executed="False">
                            <reason>
                              <message><![CDATA[not sure if we gonna need this and, if we do, if we must be compatible with it]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Security.Policy.IBuiltInEvidenceTest.PermissionRequestEvidence_GetRequiredSize" executed="False">
                            <reason>
                              <message><![CDATA[not sure if we gonna need this and, if we do, if we must be compatible with it]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Security.Policy.IBuiltInEvidenceTest.Publisher_GetRequiredSize" executed="False">
                            <reason>
                              <message><![CDATA[not sure if we gonna need this and, if we do, if we must be compatible with it]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Security.Policy.IBuiltInEvidenceTest.Site_GetRequiredSize" executed="False">
                            <reason>
                              <message><![CDATA[not sure if we gonna need this and, if we do, if we must be compatible with it]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Security.Policy.IBuiltInEvidenceTest.StrongName_GetRequiredSize" executed="False">
                            <reason>
                              <message><![CDATA[not sure if we gonna need this and, if we do, if we must be compatible with it]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Security.Policy.IBuiltInEvidenceTest.Url_GetRequiredSize" executed="False">
                            <reason>
                              <message><![CDATA[not sure if we gonna need this and, if we do, if we must be compatible with it]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Security.Policy.IBuiltInEvidenceTest.Zone_GetRequiredSize" executed="False">
                            <reason>
                              <message><![CDATA[not sure if we gonna need this and, if we do, if we must be compatible with it]]></message>
                            </reason>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite name="NetCodeGroupTest" success="True" time="0.012" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Policy.NetCodeGroupTest.Constructor" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.NetCodeGroupTest.Constructor_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.NetCodeGroupTest.Copy" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Policy.NetCodeGroupTest.CopyWithChildren" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Policy.NetCodeGroupTest.MergeLogic" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.NetCodeGroupTest.Resolve_Null" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.NetCodeGroupTest.ResolveMatchingCodeGroups_Null" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.NetCodeGroupTest.ToFromXmlRoundtrip" executed="True" success="True" time="0.002" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="PermissionRequestEvidenceTest" success="True" time="0.020" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Policy.PermissionRequestEvidenceTest.Constructor1" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Policy.PermissionRequestEvidenceTest.Constructor2" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Policy.PermissionRequestEvidenceTest.Constructor3" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Policy.PermissionRequestEvidenceTest.Constructor4" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Policy.PermissionRequestEvidenceTest.CopiesButNotReadOnly" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Policy.PermissionRequestEvidenceTest.Copy" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="MonoTests.System.Security.Policy.PermissionRequestEvidenceTest.NullConstructor" executed="True" success="True" time="0.000" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite name="PolicyLevelTest" success="True" time="0.142" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.AddFullTrustAssembly" executed="True" success="True" time="0.006" asserts="2" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.AddFullTrustAssembly_DuplicateStrongName" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.AddFullTrustAssembly_DuplicateStrongNameMembershipCondition" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.AddFullTrustAssembly_NullStrongName" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.AddFullTrustAssembly_NullStrongNameMembershipCondition" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.AddNamedPermissionSet" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.AddNamedPermissionSet_Duplicate" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.AddNamedPermissionSet_Null" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.ChangeNamedPermissionSet" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.ChangeNamedPermissionSet_NotFound" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.ChangeNamedPermissionSet_NullName" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.ChangeNamedPermissionSet_NullPermissionSet" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.ChangeNamedPermissionSet_Reserved_" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.ChangeNamedPermissionSet_Reserved_Everything" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.ChangeNamedPermissionSet_Reserved_FullTrust" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.ChangeNamedPermissionSet_Reserved_Internet" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.ChangeNamedPermissionSet_Reserved_LocalIntranet" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.ChangeNamedPermissionSet_Reserved_Nothing" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.ChangeNamedPermissionSet_Reserved_SkipVerification" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.CreateAppDomainLevel" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.FromXml_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.GetNamedPermissionSet" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.GetNamedPermissionSet_Null" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.Label" executed="True" success="True" time="0.005" asserts="5" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.Recover_AppDomainLevel" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.Recover_LoadPolicyLevelFromFile" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.Recover_LoadPolicyLevelFromString" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.RemoveFullTrustAssembly" executed="True" success="True" time="0.002" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.RemoveFullTrustAssembly_NullStrongName" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.RemoveFullTrustAssembly_NullStrongNameMembershipCondition" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.RemoveFullTrustAssembly_UnknownStrongName" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.RemoveFullTrustAssembly_UnknownStrongNameMembershipCondition" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.RemoveNamedPermissionSet" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.RemoveNamedPermissionSet_Everything_ReservedName" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.RemoveNamedPermissionSet_Execution_ReservedName" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.RemoveNamedPermissionSet_FullTrust_ReservedName" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.RemoveNamedPermissionSet_Internet_ReservedName" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.RemoveNamedPermissionSet_LocalIntranet_ReservedName" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.RemoveNamedPermissionSet_NotFound" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.RemoveNamedPermissionSet_Nothing_ReservedName" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.RemoveNamedPermissionSet_Null" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.RemoveNamedPermissionSet_SkipVerification_ReservedName" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.RemoveNamedPermissionSet_String" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.RemoveNamedPermissionSet_StringNotFound" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.RemoveNamedPermissionSet_StringNull" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.Reset" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.Resolve_Empty" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.Resolve_InternetUnrestricted" executed="True" success="True" time="0.002" asserts="96" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.Resolve_MyComputerUnrestricted" executed="True" success="True" time="0.001" asserts="96" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.Resolve_Null" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.ResolveMatchingCodeGroups_Empty" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.ResolveMatchingCodeGroups_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.RootCodeGroup_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.StoreLocation" executed="True" success="True" time="0.004" asserts="2" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyLevelTest.ToXml" executed="True" success="True" time="0.005" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite name="PolicyStatementTest" success="True" time="0.026" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Policy.PolicyStatementTest.AddToPermissionSet" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyStatementTest.Attribute_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyStatementTest.AttributeString" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyStatementTest.Constructor_Copy" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyStatementTest.Constructor_PermissionSet_None" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyStatementTest.Constructor_PermissionSet_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyStatementTest.Constructor_PermissionSet_Unrestricted" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyStatementTest.Constructor_PermissionSetPolicyStatementAttribute_Null" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyStatementTest.FromXml_BadSecurityElement" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyStatementTest.FromXml_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyStatementTest.FromXml_SecurityElementNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyStatementTest.SetPermissionSet" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyStatementTest.ToFromXml_PolicyLevelNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PolicyStatementTest.ToFromXml_RoundTrip" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="PublisherMembershipConditionTest" success="True" time="0.073" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Policy.PublisherMembershipConditionTest.Check" executed="True" success="True" time="0.003" asserts="5" />
                          <test-case name="MonoTests.System.Security.Policy.PublisherMembershipConditionTest.Constructor" executed="True" success="True" time="0.008" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.PublisherMembershipConditionTest.Copy" executed="True" success="True" time="0.002" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.PublisherMembershipConditionTest.Equals" executed="True" success="True" time="0.009" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.PublisherMembershipConditionTest.FromXml_Invalid" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PublisherMembershipConditionTest.FromXml_InvalidClass" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PublisherMembershipConditionTest.FromXml_InvalidTag" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PublisherMembershipConditionTest.FromXml_InvalidVersion" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PublisherMembershipConditionTest.FromXml_NoClass" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PublisherMembershipConditionTest.FromXml_NoVersion" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PublisherMembershipConditionTest.FromXml_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PublisherMembershipConditionTest.FromXml_PolicyLevel" executed="True" success="True" time="0.013" asserts="3" />
                          <test-case name="MonoTests.System.Security.Policy.PublisherMembershipConditionTest.FromXml_SecurityElementNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PublisherMembershipConditionTest.FromXml_WrongTagCase" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PublisherMembershipConditionTest.GetHashCode_" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Policy.PublisherMembershipConditionTest.InvalidConstructor" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PublisherMembershipConditionTest.NullCertificate" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PublisherMembershipConditionTest.NullConstructor" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PublisherMembershipConditionTest.ToFromXmlRoundTrip" executed="True" success="True" time="0.002" asserts="3" />
                          <test-case name="MonoTests.System.Security.Policy.PublisherMembershipConditionTest.ToString_" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.PublisherMembershipConditionTest.ToXml_Null" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.PublisherMembershipConditionTest.ToXmlPolicyLevel" executed="True" success="True" time="0.002" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="PublisherTest" success="True" time="0.011" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Policy.PublisherTest.Constructor" executed="True" success="True" time="0.002" asserts="3" />
                          <test-case name="MonoTests.System.Security.Policy.PublisherTest.Copy" executed="True" success="True" time="0.002" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.PublisherTest.EmptyCertificateConstructor" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PublisherTest.EmptyCertificateConstructor2" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.PublisherTest.NullConstructor" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="SiteMembershipConditionTest" success="True" time="0.032" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Policy.SiteMembershipConditionTest.Check" executed="True" success="True" time="0.002" asserts="7" />
                          <test-case name="MonoTests.System.Security.Policy.SiteMembershipConditionTest.Equals" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Policy.SiteMembershipConditionTest.FromXml_InvalidClass" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.SiteMembershipConditionTest.FromXml_InvalidTag" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.SiteMembershipConditionTest.FromXml_InvalidVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.SiteMembershipConditionTest.FromXml_NoClass" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.SiteMembershipConditionTest.FromXml_NoVersion" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.SiteMembershipConditionTest.FromXml_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.SiteMembershipConditionTest.FromXml_PolicyLevel" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Policy.SiteMembershipConditionTest.Site_AllGoMonoSite" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Policy.SiteMembershipConditionTest.SiteMembershipCondition_Empty" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.SiteMembershipConditionTest.SiteMembershipCondition_FileUrl" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.SiteMembershipConditionTest.SiteMembershipCondition_FullUrlWithPort" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.SiteMembershipConditionTest.SiteMembershipCondition_GoMonoWebSite" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Policy.SiteMembershipConditionTest.SiteMembershipCondition_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.SiteMembershipConditionTest.ToFromXmlRoundTrip" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.SiteMembershipConditionTest.ToXml_Null" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.SiteMembershipConditionTest.ToXml_PolicyLevel" executed="True" success="True" time="0.001" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="SiteTest" success="True" time="0.026" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Policy.SiteTest.AllChars" executed="True" success="True" time="0.002" asserts="255" />
                          <test-case name="MonoTests.System.Security.Policy.SiteTest.CreateFromUrl_Empty" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.SiteTest.CreateFromUrl_Invalid" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.SiteTest.CreateFromUrl_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.SiteTest.CreateFromUrl_Valid" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Policy.SiteTest.EqualsCaseSensitive" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.SiteTest.EqualsNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.SiteTest.EqualsPartial" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Policy.SiteTest.Site_AllGoMono" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.SiteTest.Site_AllGoMonoSite" executed="True" success="True" time="0.002" asserts="7" />
                          <test-case name="MonoTests.System.Security.Policy.SiteTest.Site_Empty" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.SiteTest.Site_FileUrl" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.SiteTest.Site_FullUrlWithPort" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.SiteTest.Site_GoMonoAllTLD" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.SiteTest.Site_GoMonoWebSite" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Policy.SiteTest.Site_LoneStar" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Policy.SiteTest.Site_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.SiteTest.Site_TwoStars" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="StrongNameMembershipConditionTest" success="True" time="0.025" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Policy.StrongNameMembershipConditionTest.FromXml_InvalidClass" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.StrongNameMembershipConditionTest.FromXml_InvalidTag" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.StrongNameMembershipConditionTest.FromXml_InvalidVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.StrongNameMembershipConditionTest.FromXml_NoClass" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.StrongNameMembershipConditionTest.FromXml_NoVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.StrongNameMembershipConditionTest.FromXml_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.StrongNameMembershipConditionTest.FromXml_PolicyLevel" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Policy.StrongNameMembershipConditionTest.Name_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.StrongNameMembershipConditionTest.PublicKey_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.StrongNameMembershipConditionTest.StrongNameMembershipCondition_Mscorlib" executed="True" success="True" time="0.003" asserts="27" />
                          <test-case name="MonoTests.System.Security.Policy.StrongNameMembershipConditionTest.StrongNameMembershipCondition_MsKey" executed="True" success="True" time="0.001" asserts="26" />
                          <test-case name="MonoTests.System.Security.Policy.StrongNameMembershipConditionTest.StrongNameMembershipCondition_NullBlob" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.StrongNameMembershipConditionTest.StrongNameMembershipCondition_NullName" executed="True" success="True" time="0.001" asserts="27" />
                          <test-case name="MonoTests.System.Security.Policy.StrongNameMembershipConditionTest.StrongNameMembershipCondition_NullNameVersion" executed="True" success="True" time="0.001" asserts="27" />
                          <test-case name="MonoTests.System.Security.Policy.StrongNameMembershipConditionTest.StrongNameMembershipCondition_NullVersion" executed="True" success="True" time="0.001" asserts="27" />
                          <test-case name="MonoTests.System.Security.Policy.StrongNameMembershipConditionTest.ToXml_Null" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.StrongNameMembershipConditionTest.ToXml_PolicyLevel" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Policy.StrongNameMembershipConditionTest.Version_Null" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="StrongNameTest" success="True" time="0.007" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Policy.StrongNameTest.CompleteConstructor" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Security.Policy.StrongNameTest.Copy" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.StrongNameTest.EmptyNameConstructor" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.StrongNameTest.NullNameConstructor" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.StrongNameTest.NullPublicKeyConstructor" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.StrongNameTest.NullVersionConstructor" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="UnionCodeGroupTest" success="True" time="0.034" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Policy.UnionCodeGroupTest.Constructor" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Security.Policy.UnionCodeGroupTest.Constructor_MembershipConditionNullPolicyStatement" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.UnionCodeGroupTest.Constructor_MembershipConditionPolicyStatementNull" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="MonoTests.System.Security.Policy.UnionCodeGroupTest.Copy" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Policy.UnionCodeGroupTest.CopyWithChildren" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Policy.UnionCodeGroupTest.MergeLogic" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.UnionCodeGroupTest.Resolve_AllMembershipCondition_None" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.UnionCodeGroupTest.Resolve_AllMembershipCondition_Unrestricted" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.UnionCodeGroupTest.Resolve_NoMatch" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.UnionCodeGroupTest.Resolve_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.UnionCodeGroupTest.Resolve_ZoneMembershipCondition_Internet" executed="True" success="True" time="0.002" asserts="9" />
                          <test-case name="MonoTests.System.Security.Policy.UnionCodeGroupTest.Resolve_ZoneMembershipCondition_Intranet" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Policy.UnionCodeGroupTest.Resolve_ZoneMembershipCondition_MyComputer" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Policy.UnionCodeGroupTest.Resolve_ZoneMembershipCondition_NoZone" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.UnionCodeGroupTest.Resolve_ZoneMembershipCondition_Trusted" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Policy.UnionCodeGroupTest.Resolve_ZoneMembershipCondition_Untrusted" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Policy.UnionCodeGroupTest.ResolveMatchingCodeGroups_NoMatch" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.UnionCodeGroupTest.ResolveMatchingCodeGroups_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.UnionCodeGroupTest.ResolveMatchingCodeGroups_OneLevel" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Policy.UnionCodeGroupTest.ResolveMatchingCodeGroups_ThreeLevel" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Policy.UnionCodeGroupTest.ResolveMatchingCodeGroups_TwoLevel" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Security.Policy.UnionCodeGroupTest.ResolveWithChildren" executed="True" success="True" time="0.002" asserts="5" />
                          <test-case name="MonoTests.System.Security.Policy.UnionCodeGroupTest.ToFromXmlRoundtrip" executed="True" success="True" time="0.001" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="UrlMembershipConditionTest" success="True" time="0.046" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Policy.UrlMembershipConditionTest.Check" executed="True" success="True" time="0.002" asserts="5" />
                          <test-case name="MonoTests.System.Security.Policy.UrlMembershipConditionTest.CheckMultipleEvidences" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.UrlMembershipConditionTest.CheckNegative" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.UrlMembershipConditionTest.CheckPositive_Partial" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.UrlMembershipConditionTest.EqualsCaseSensitive_File" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.UrlMembershipConditionTest.EqualsCaseSensitive_Http" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.UrlMembershipConditionTest.EqualsNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.UrlMembershipConditionTest.FromXml_InvalidClass" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.UrlMembershipConditionTest.FromXml_InvalidTag" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.UrlMembershipConditionTest.FromXml_InvalidVersion" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.UrlMembershipConditionTest.FromXml_NoClass" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.UrlMembershipConditionTest.FromXml_NoVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.UrlMembershipConditionTest.FromXml_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.UrlMembershipConditionTest.FromXml_PolicyLevel" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Policy.UrlMembershipConditionTest.ToFromXmlRoundTrip" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.UrlMembershipConditionTest.ToXml_Null" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.UrlMembershipConditionTest.ToXml_PolicyLevel" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Policy.UrlMembershipConditionTest.Url_AllGoMonoUrl" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Policy.UrlMembershipConditionTest.Url_Empty" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.UrlMembershipConditionTest.Url_InvalidSite" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.UrlMembershipConditionTest.Url_NoProtocol" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Policy.UrlMembershipConditionTest.Url_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.UrlMembershipConditionTest.Url_RelativePath" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Policy.UrlMembershipConditionTest.Url_UnknownProtocol" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Policy.UrlMembershipConditionTest.Url_WellKnownProtocol" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Security.Policy.UrlMembershipConditionTest.UrlMembershipCondition_Empty" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.UrlMembershipConditionTest.UrlMembershipCondition_FileUrl" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.UrlMembershipConditionTest.UrlMembershipCondition_FullUrlWithPort" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.UrlMembershipConditionTest.UrlMembershipCondition_GoMonoWebUrl" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Policy.UrlMembershipConditionTest.UrlMembershipCondition_Null" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="UrlTest" success="True" time="0.024" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Policy.UrlTest.EqualsCaseSensitive" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.UrlTest.EqualsNull" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.UrlTest.EqualsPartial" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Policy.UrlTest.Url_Empty" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.UrlTest.Url_GoMonoWebUrl" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Policy.UrlTest.Url_InvalidSite" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.UrlTest.Url_LoneStar" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Security.Policy.UrlTest.Url_NoProtocol" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.UrlTest.Url_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.UrlTest.Url_RelativePath" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.UrlTest.Url_UnknownProtocol" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.UrlTest.Url_WellKnownProtocol" executed="True" success="True" time="0.001" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite name="ZoneMembershipConditionTest" success="True" time="0.025" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Policy.ZoneMembershipConditionTest.FromXml_InvalidClass" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.ZoneMembershipConditionTest.FromXml_InvalidTag" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.ZoneMembershipConditionTest.FromXml_InvalidVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.ZoneMembershipConditionTest.FromXml_NoClass" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.ZoneMembershipConditionTest.FromXml_NoVersion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.ZoneMembershipConditionTest.FromXml_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.ZoneMembershipConditionTest.FromXml_PolicyLevel" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Policy.ZoneMembershipConditionTest.SecurityZone_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.ZoneMembershipConditionTest.SecurityZone_NoZone" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.ZoneMembershipConditionTest.ToXml_Null" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.ZoneMembershipConditionTest.ToXml_PolicyLevel" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Policy.ZoneMembershipConditionTest.ZoneMembershipCondition_Internet" executed="True" success="True" time="0.002" asserts="27" />
                          <test-case name="MonoTests.System.Security.Policy.ZoneMembershipConditionTest.ZoneMembershipCondition_Intranet" executed="True" success="True" time="0.001" asserts="27" />
                          <test-case name="MonoTests.System.Security.Policy.ZoneMembershipConditionTest.ZoneMembershipCondition_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.ZoneMembershipConditionTest.ZoneMembershipCondition_MyComputer" executed="True" success="True" time="0.001" asserts="27" />
                          <test-case name="MonoTests.System.Security.Policy.ZoneMembershipConditionTest.ZoneMembershipCondition_NoZone" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.ZoneMembershipConditionTest.ZoneMembershipCondition_Trusted" executed="True" success="True" time="0.001" asserts="27" />
                          <test-case name="MonoTests.System.Security.Policy.ZoneMembershipConditionTest.ZoneMembershipCondition_Untrusted" executed="True" success="True" time="0.001" asserts="27" />
                        </results>
                      </test-suite>
                      <test-suite name="ZoneTest" success="True" time="0.027" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Policy.ZoneTest.CreateFromUrl_Internet" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Security.Policy.ZoneTest.CreateFromUrl_Intranet" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Policy.ZoneTest.CreateFromUrl_MyComputer" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Security.Policy.ZoneTest.CreateFromUrl_NoZone" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Policy.ZoneTest.CreateFromUrl_Null" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Policy.ZoneTest.Internet" executed="True" success="True" time="0.001" asserts="11" />
                          <test-case name="MonoTests.System.Security.Policy.ZoneTest.Intranet" executed="True" success="True" time="0.001" asserts="11" />
                          <test-case name="MonoTests.System.Security.Policy.ZoneTest.MyComputer" executed="True" success="True" time="0.001" asserts="11" />
                          <test-case name="MonoTests.System.Security.Policy.ZoneTest.NoZone" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="MonoTests.System.Security.Policy.ZoneTest.ToString_" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="MonoTests.System.Security.Policy.ZoneTest.Trusted" executed="True" success="True" time="0.001" asserts="11" />
                          <test-case name="MonoTests.System.Security.Policy.ZoneTest.Untrusted" executed="True" success="True" time="0.001" asserts="11" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Principal" success="True" time="0.146" asserts="0">
                    <results>
                      <test-suite name="GenericIdentityTest" success="True" time="0.022" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Principal.GenericIdentityTest.Deserialize" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Principal.GenericIdentityTest.EmptyName" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Principal.GenericIdentityTest.Name" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Security.Principal.GenericIdentityTest.NameAuthenticationType" executed="True" success="True" time="0.013" asserts="3" />
                          <test-case name="MonoTests.System.Security.Principal.GenericIdentityTest.NullAuthenticationType" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Principal.GenericIdentityTest.NullName" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Principal.GenericIdentityTest.SerializationRoundtrip" executed="True" success="True" time="0.001" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="GenericPrincipalTest" success="True" time="0.007" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Principal.GenericPrincipalTest.Deserialize" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Security.Principal.GenericPrincipalTest.IsInRole" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Principal.GenericPrincipalTest.IsInRole_CaseInsensitive" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Principal.GenericPrincipalTest.NullIdentity" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Principal.GenericPrincipalTest.NullRoles" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Principal.GenericPrincipalTest.SerializationRoundtrip" executed="True" success="True" time="0.001" asserts="6" />
                        </results>
                      </test-suite>
                      <test-suite name="NTAccountTest" success="True" time="0.004" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Principal.NTAccountTest.ConstructorOneString" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Principal.NTAccountTest.ConstructorTwoString" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Principal.NTAccountTest.Translate" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Principal.NTAccountTest.TranslateUnknown" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="SecurityIdentifierTest" success="True" time="0.036" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Principal.SecurityIdentifierTest.AccountDomainSid" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Security.Principal.SecurityIdentifierTest.BinaryLength" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Principal.SecurityIdentifierTest.CompareOrdering" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Security.Principal.SecurityIdentifierTest.CompareToNull" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Principal.SecurityIdentifierTest.ConstructorBinary" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Security.Principal.SecurityIdentifierTest.ConstructorInvalidString" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Principal.SecurityIdentifierTest.ConstructorNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Principal.SecurityIdentifierTest.ConstructorString" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Security.Principal.SecurityIdentifierTest.ConstructorStringBadRevision" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Principal.SecurityIdentifierTest.ConstructorStringSddl" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Principal.SecurityIdentifierTest.ConstructorWellKnownSidLogonIds" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Principal.SecurityIdentifierTest.ConstructorWellKnownSids" executed="True" success="True" time="0.003" asserts="61" />
                          <test-case name="MonoTests.System.Security.Principal.SecurityIdentifierTest.Equals" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Principal.SecurityIdentifierTest.EqualsNull" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Principal.SecurityIdentifierTest.IntPtrRoundtrip" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Security.Principal.SecurityIdentifierTest.IsAccountSid" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Principal.SecurityIdentifierTest.IsEqualDomainSid" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Principal.SecurityIdentifierTest.IsValidTargetType" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Security.Principal.SecurityIdentifierTest.IsWellKnown" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="MonoTests.System.Security.Principal.SecurityIdentifierTest.LengthLimits" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Security.Principal.SecurityIdentifierTest.Translate" executed="True" success="True" time="0.001" asserts="33" />
                          <test-case name="MonoTests.System.Security.Principal.SecurityIdentifierTest.TranslateUnknown" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Principal.SecurityIdentifierTest.Value" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="WindowsIdentityTest" success="True" time="0.029" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Principal.WindowsIdentityTest.Anonymous" executed="True" success="True" time="0.003" asserts="7" />
                          <test-case name="MonoTests.System.Security.Principal.WindowsIdentityTest.ConstructorIntPtrZero" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Principal.WindowsIdentityTest.ConstructorW2KS1" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Principal.WindowsIdentityTest.ConstructorW2KS1_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Principal.WindowsIdentityTest.ConstructorW2KS2" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Security.Principal.WindowsIdentityTest.ConstructorW2KS2_TypeNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Principal.WindowsIdentityTest.ConstructorW2KS2_UserNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Principal.WindowsIdentityTest.Current" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Security.Principal.WindowsIdentityTest.GetRolesViaReflection" executed="False">
                            <reason>
                              <message><![CDATA[Running on Unix.]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Security.Principal.WindowsIdentityTest.Interfaces" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Security.Principal.WindowsIdentityTest.SerializeRoundTrip" executed="True" success="True" time="0.004" asserts="6" />
                        </results>
                      </test-suite>
                      <test-suite name="WindowsPrincipalTest" success="True" time="0.035" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Security.Principal.WindowsPrincipalTest.Anonymous" executed="True" success="True" time="0.031" asserts="6" />
                          <test-case name="MonoTests.System.Security.Principal.WindowsPrincipalTest.ConstructorNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Principal.WindowsPrincipalTest.Current" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Security.Principal.WindowsPrincipalTest.Interface" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Security.Principal.WindowsPrincipalTest.IsInRole_Null" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="SecureStringTest" success="True" time="0.035" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Security.SecureStringTest.AppendChar_BiggerThanMax" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Security.SecureStringTest.Copy" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Security.SecureStringTest.Copy_Empty" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Security.SecureStringTest.DefaultConstructor" executed="True" success="True" time="0.002" asserts="8" />
                      <test-case name="MonoTests.System.Security.SecureStringTest.Disposed" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.SecureStringTest.Disposed_AppendChar" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.SecureStringTest.Disposed_Clear" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.SecureStringTest.Disposed_InsertAt" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.SecureStringTest.Disposed_IsReadOnly" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.SecureStringTest.Disposed_Length" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.SecureStringTest.Disposed_RemoveAt" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.SecureStringTest.Disposed_SetAt" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.SecureStringTest.InsertAt_BiggerThanLength" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.SecureStringTest.InsertAt_BiggerThanMax" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.SecureStringTest.InsertAt_Negative" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.SecureStringTest.InsertAt_UsedLikeAppendChar" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Security.SecureStringTest.ReadOnly" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Security.SecureStringTest.ReadOnly_AppendChar" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.SecureStringTest.ReadOnly_Clear" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.SecureStringTest.ReadOnly_InsertAt" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.SecureStringTest.ReadOnly_RemoveAt" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.SecureStringTest.ReadOnly_SetAt" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.SecureStringTest.RemoveAt" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Security.SecureStringTest.RemoveAt_BiggerThanLength" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.SecureStringTest.RemoveAt_Negative" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.SecureStringTest.SetAt_BiggerThanLength" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.SecureStringTest.SetAt_Negative" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.SecureStringTest.UnsafeConstructor" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Security.SecureStringTest.UnsafeConstructor_BiggerThanMax" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Security.SecureStringTest.UnsafeConstructor_Negative" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Security.SecureStringTest.UnsafeConstructor_Null" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="SecurityContextTest" success="True" time="0.035" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Security.SecurityContextTest.Capture" executed="True" success="True" time="0.003" asserts="5" />
                      <test-case name="MonoTests.System.Security.SecurityContextTest.Copy" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Security.SecurityContextTest.ExecutionContext_SuppressFlow" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Security.SecurityContextTest.IsFlowSuppressed" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Security.SecurityContextTest.IsWindowsIdentityFlowSuppressed" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Security.SecurityContextTest.RestoreFlow_None" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Security.SecurityContextTest.RestoreFlow_SuppressFlow" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Security.SecurityContextTest.RestoreFlow_SuppressFlowWindowsIdentity" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Security.SecurityContextTest.Run" executed="True" success="True" time="0.002" asserts="2" />
                      <test-case name="MonoTests.System.Security.SecurityContextTest.Run_SuppressFlow" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Security.SecurityContextTest.SuppressFlow" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Security.SecurityContextTest.SuppressFlow_Both" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Security.SecurityContextTest.SuppressFlow_Both_Undo" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Security.SecurityContextTest.SuppressFlowWindowsIdentity" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Security.SecurityContextTest.WindowsIdentity_" executed="True" success="True" time="0.003" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="SecurityCriticalAttributeTest" success="True" time="0.007" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Security.SecurityCriticalAttributeTest.Attributes" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Security.SecurityCriticalAttributeTest.Constructor_Default" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Security.SecurityCriticalAttributeTest.Constructor_Scope_Bad" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Security.SecurityCriticalAttributeTest.Constructor_Scope_Everything" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Security.SecurityCriticalAttributeTest.Constructor_Scope_Explicit" executed="True" success="True" time="0.001" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="SecurityElementTest" success="True" time="0.069" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Security.SecurityElementTest.AddAttribute" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.AddAttribute_Duplicate" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.AddAttribute_InvalidValue2" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.AddAttribute_InvalidValue3" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.AddAttribute_Name_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.AddAttribute_Name_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.AddAttribute_Value_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.AddAttribute_Value_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.AddChild" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.AddChild_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.Attributes" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.Attributes_Name_Invalid" executed="True" success="True" time="0.001" asserts="5">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Security.SecurityElementTest.Attributes_Value_Invalid" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.Constructor1" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.Constructor1_Tag_Invalid" executed="True" success="True" time="0.001" asserts="10" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.Constructor1_Tag_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.Constructor2" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.Constructor2_Tag_Invalid" executed="True" success="True" time="0.001" asserts="10" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.Constructor2_Tag_Null" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.Constructor2_Text_Null" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.Copy" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.Equal" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.Escape" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.FromString" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.FromString_Empty" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.FromString_EntityReferences" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.FromString_NonXml" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.FromString_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.FromString_Quote_Delimiter" executed="True" success="True" time="0.001" asserts="2">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Security.SecurityElementTest.IsValidAttributeName" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.IsValidAttributeValue" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.IsValidTag" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.IsValidText" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.MultipleAttributes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.SearchForChildByTag" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.SearchForChildByTag_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.SearchForTextOfTag" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.SearchForTextOfTag_Tag_Null" executed="True" success="True" time="0.008" asserts="5" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.Tag" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.Tag_Invalid" executed="True" success="True" time="0.001" asserts="10" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.Tag_Null" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.TestToString" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.Text" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Security.SecurityElementTest.Text_Invalid" executed="True" success="True" time="0.001" asserts="10" />
                    </results>
                  </test-suite>
                  <test-suite name="SecurityExceptionTest" success="True" time="0.008" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Security.SecurityExceptionTest.Constructor_Empty" executed="True" success="True" time="0.002" asserts="5" />
                      <test-case name="MonoTests.System.Security.SecurityExceptionTest.Constructor_Message" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Security.SecurityExceptionTest.Constructor_MessageInner" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Security.SecurityExceptionTest.Constructor_MessageType" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Security.SecurityExceptionTest.Constructor_MessageTypeState" executed="True" success="True" time="0.001" asserts="5" />
                    </results>
                  </test-suite>
                  <test-suite name="SecurityManagerTest" success="True" time="0.024" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Security.SecurityManagerTest.GetZoneAndOrigin" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Security.SecurityManagerTest.IsGranted_Null" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Security.SecurityManagerTest.LoadPolicyLevelFromFile_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.SecurityManagerTest.LoadPolicyLevelFromString_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.SecurityManagerTest.PolicyHierarchy" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Security.SecurityManagerTest.ResolvePolicy_Evidence_AllNull_NoExecution" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Security.SecurityManagerTest.ResolvePolicy_Evidence_Array" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Security.SecurityManagerTest.ResolvePolicy_Evidence_ArrayEmpty" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Security.SecurityManagerTest.ResolvePolicy_Evidence_ArrayNull" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Security.SecurityManagerTest.ResolvePolicy_Evidence_Assembly_Zone" executed="True" success="True" time="0.001" asserts="18" />
                      <test-case name="MonoTests.System.Security.SecurityManagerTest.ResolvePolicy_Evidence_CurrentAssembly" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Security.SecurityManagerTest.ResolvePolicy_Evidence_DenyUnrestricted_NoExecution" executed="True" success="True" time="0.000" asserts="0">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Security.SecurityManagerTest.ResolvePolicy_Evidence_Null" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Security.SecurityManagerTest.ResolvePolicy_Evidence_NullRequests_CurrentAssembly" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Security.SecurityManagerTest.ResolvePolicy_Evidences_Null" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Security.SecurityManagerTest.ResolvePolicyGroups_Null" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Security.SecurityManagerTest.SavePolicyLevel_AppDomain" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Security.SecurityManagerTest.SavePolicyLevel_Null" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="SecurityStateTest" success="True" time="0.001" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Security.SecurityStateTest.Defaults" executed="True" success="True" time="0.001" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="SecurityTransparentAttributeTest" success="True" time="0.002" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Security.SecurityTransparentAttributeTest.Attributes" executed="True" success="True" time="0.001" asserts="5" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="SingleFormatterTest" success="True" time="0.008" asserts="0">
                <results>
                  <test-case name="MonoTests.System.SingleFormatterTest.TestFormatStrings" executed="True" success="True" time="0.005" asserts="288" />
                  <test-case name="MonoTests.System.SingleFormatterTest.TestToDecimal" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.SingleFormatterTest.TestToHex" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.SingleFormatterTest.TestToUnknown" executed="True" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
              <test-suite name="SingleTest" success="True" time="0.015" asserts="0">
                <results>
                  <test-case name="MonoTests.System.SingleTest.Equals" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.SingleTest.HexNumber_NoHexToParse" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.SingleTest.HexNumber_WithHexToParse" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.SingleTest.IsInfinity" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.SingleTest.IsNan" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.SingleTest.IsNegativeInfinity" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.SingleTest.IsPositiveInfinity" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.SingleTest.Parse_Roundtrip" executed="True" success="True" time="0.003" asserts="41" />
                  <test-case name="MonoTests.System.SingleTest.ToString_Defaults" executed="True" success="True" time="0.001" asserts="7" />
                  <test-case name="MonoTests.System.SingleTest.ToString_Roundtrip" executed="True" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite name="StringComparerTest" success="True" time="0.020" asserts="0">
                <results>
                  <test-case name="MonoTests.System.StringComparerTest.Deserialize_CurrentCulture" executed="True" success="True" time="0.002" asserts="1" />
                  <test-case name="MonoTests.System.StringComparerTest.Deserialize_CurrentCultureIgnoreCase" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.StringComparerTest.Deserialize_InvariantCulture" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.StringComparerTest.Deserialize_InvariantCultureIgnoreCase" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.StringComparerTest.Deserialize_Ordinal" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.StringComparerTest.Deserialize_OrdinalIgnoreCase" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.StringComparerTest.GetNullOrdinalHashCode" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.StringComparerTest.Serialize_CurrentCulture" executed="True" success="True" time="0.002" asserts="0" />
                  <test-case name="MonoTests.System.StringComparerTest.Serialize_CurrentCultureIgnoreCase" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.StringComparerTest.Serialize_InvariantCulture" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.StringComparerTest.Serialize_InvariantCultureIgnoreCase" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.StringComparerTest.Serialize_Ordinal" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.StringComparerTest.Serialize_OrdinalIgnoreCase" executed="True" success="True" time="0.001" asserts="1" />
                </results>
              </test-suite>
              <test-suite name="StringTest" success="True" time="0.357" asserts="0">
                <results>
                  <test-case name="MonoTests.System.StringTest.CharPtrConstructor" executed="True" success="True" time="0.002" asserts="2" />
                  <test-case name="MonoTests.System.StringTest.Clone" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.Compare" executed="True" success="True" time="0.002" asserts="46" />
                  <test-case name="MonoTests.System.StringTest.CompareNotWorking" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.StringTest.CompareNotWorking2" executed="True" success="True" time="0.000" asserts="7" />
                  <test-case name="MonoTests.System.StringTest.CompareOrdinal" executed="True" success="True" time="0.001" asserts="22" />
                  <test-case name="MonoTests.System.StringTest.CompareOrdinalSubstringWithNull" executed="True" success="True" time="0.001" asserts="9" />
                  <test-case name="MonoTests.System.StringTest.CompareOrdinalWithOffset" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.StringTest.CompareTo" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.StringTest.Concat" executed="True" success="True" time="0.001" asserts="9" />
                  <test-case name="MonoTests.System.StringTest.Constructor2" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.StringTest.Constructor3_Value_Invalid" executed="False">
                    <reason>
                      <message><![CDATA[invalid test]]></message>
                    </reason>
                  </test-case>
                  <test-case name="MonoTests.System.StringTest.Constructor3_Value_Null" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.StringTest.Constructor4" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.StringTest.Constructor4_Count_Negative" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.Constructor6" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.StringTest.Constructor6_Length_Negative" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.Constructor6_Length_Overflow" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.Constructor6_StartIndex_Negative" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.Constructor6_Value_Null" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.Constructor7_Length_Negative" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.Constructor7_StartIndex_Negative" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.Constructor7_StartIndex_Overflow" executed="True" success="True" time="0.001" asserts="8" />
                  <test-case name="MonoTests.System.StringTest.Constructor7_Value_Invalid" executed="False">
                    <reason>
                      <message><![CDATA[invalid test]]></message>
                    </reason>
                  </test-case>
                  <test-case name="MonoTests.System.StringTest.Constructor7_Value_Null" executed="True" success="True" time="0.001" asserts="12" />
                  <test-case name="MonoTests.System.StringTest.Constructor8_Length_Negative" executed="True" success="True" time="0.001" asserts="8" />
                  <test-case name="MonoTests.System.StringTest.Constructor8_StartIndex_Negative" executed="True" success="True" time="0.001" asserts="8" />
                  <test-case name="MonoTests.System.StringTest.Constructor8_StartIndex_Overflow" executed="True" success="True" time="0.001" asserts="16" />
                  <test-case name="MonoTests.System.StringTest.Constructor8_Value_Invalid" executed="False">
                    <reason>
                      <message><![CDATA[invalid test]]></message>
                    </reason>
                  </test-case>
                  <test-case name="MonoTests.System.StringTest.Constructor8_Value_Invalid2" executed="False">
                    <reason>
                      <message><![CDATA[Runtime throws NullReferenceException instead of AccessViolationException]]></message>
                    </reason>
                  </test-case>
                  <test-case name="MonoTests.System.StringTest.Constructor8_Value_Null" executed="True" success="True" time="0.001" asserts="17" />
                  <test-case name="MonoTests.System.StringTest.Contains" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.StringTest.Contains_Value_Null" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.Copy" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.StringTest.Copy_Str_Null" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.CopyTo" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.StringTest.CopyTo_Count_Negative" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.CopyTo_Count_Overflow" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.CopyTo_Destination_Null" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.CopyTo_DestinationIndex_Negative" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.CopyTo_DestinationIndex_Overflow" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.CopyTo_SourceIndex_Negative" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.CopyTo_SourceIndex_Overflow" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.Emptiness" executed="True" success="True" time="0.003" asserts="30" />
                  <test-case name="MonoTests.System.StringTest.EndsWith1" executed="True" success="True" time="0.001" asserts="22" />
                  <test-case name="MonoTests.System.StringTest.EndsWith1_Value_Null" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.EndsWith2_ComparisonType_Invalid" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.EndsWith2_Value_Null" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.EndsWith3" executed="True" success="True" time="0.003" asserts="56" />
                  <test-case name="MonoTests.System.StringTest.EndsWith3_Value_Null" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.Format" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.StringTest.Format_Arg_ToNullStringer" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.StringTest.Format1_Format_Null" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.Format2_Args_Null" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.Format2_Format_Null" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.Format3_Args_Null" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.Format3_Format_Null" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.Format4_Format_Null" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.Format5_Format_Null" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.IndexOf" executed="True" success="True" time="0.002" asserts="40" />
                  <test-case name="MonoTests.System.StringTest.IndexOf2_Value_Null" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.IndexOf3" executed="True" success="True" time="0.001" asserts="16" />
                  <test-case name="MonoTests.System.StringTest.IndexOf4" executed="True" success="True" time="0.000" asserts="9" />
                  <test-case name="MonoTests.System.StringTest.IndexOf4_Value_Null" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.IndexOf5" executed="True" success="True" time="0.005" asserts="109" />
                  <test-case name="MonoTests.System.StringTest.IndexOf5_ComparisonType_Invalid" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.IndexOf5_Value_Null" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.IndexOf6_Count_Negative" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.IndexOf6_Count_Overflow" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.IndexOf6_StartIndex_Negative" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.IndexOf6_StartIndex_Overflow" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.IndexOf7" executed="True" success="True" time="0.002" asserts="68" />
                  <test-case name="MonoTests.System.StringTest.IndexOf7_Count_Negative" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.IndexOf7_Count_Overflow" executed="True" success="True" time="0.001" asserts="12" />
                  <test-case name="MonoTests.System.StringTest.IndexOf7_Empty" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.StringTest.IndexOf7_StartIndex_Negative" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.IndexOf7_StartIndex_Overflow" executed="True" success="True" time="0.001" asserts="8" />
                  <test-case name="MonoTests.System.StringTest.IndexOf7_Value_Null" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.IndexOf8_ComparisonType_Invalid" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.IndexOf8_StartIndex_Negative" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.IndexOf9_ComparisonType_Invalid" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.IndexOf9_Count_Negative" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.IndexOf9_StartIndex_Negative" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.IndexOfAny1" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.IndexOfAny1_AnyOf_Null" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.IndexOfAny2" executed="True" success="True" time="0.001" asserts="18" />
                  <test-case name="MonoTests.System.StringTest.IndexOfAny2_AnyOf_Null" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.IndexOfAny2_StartIndex_Negative" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.IndexOfAny2_StartIndex_Overflow" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.IndexOfAny3" executed="True" success="True" time="0.001" asserts="20" />
                  <test-case name="MonoTests.System.StringTest.IndexOfAny3_AnyOf_Null" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.IndexOfAny3_Count_Negative" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.IndexOfAny3_Length_Overflow" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.IndexOfAny3_StartIndex_Negative" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.IndexOfAny3_StartIndex_Overflow" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.IndexOfIsCultureAwareWhileContainsIsNot" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.StringTest.IndexOfOrdinalCountSmallerThanValueString" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.IndexOfStringComparison" executed="True" success="True" time="0.001" asserts="22" />
                  <test-case name="MonoTests.System.StringTest.IndexOfStringComparisonCurrentCulture_Empty" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.StringTest.IndexOfStringComparisonOrdinal" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.StringTest.IndexOfStringComparisonOrdinalIgnoreCase" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.StringTest.IndexOfStringComparisonOrdinalIgnoreCaseRangeException1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.StringTest.IndexOfStringComparisonOrdinalIgnoreCaseRangeException2" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.StringTest.IndexOfStringComparisonOrdinalRangeException1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.StringTest.IndexOfStringComparisonOrdinalRangeException2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.StringTest.Intern" executed="True" success="True" time="0.001" asserts="9" />
                  <test-case name="MonoTests.System.StringTest.Intern_Str_Null" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.IsInterned" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.StringTest.IsInterned_Str_Null" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.IsNullOrEmpty" executed="True" success="True" time="0.001" asserts="7" />
                  <test-case name="MonoTests.System.StringTest.Join_AllNull" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.StringTest.Join_LengthNegative" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.Join_LengthOverflow" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.Join_SeparatorNull" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.StringTest.Join_StartIndexNegative" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.Join_StartIndexOverflow" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.Join_ValuesNull" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.StringTest.LastIndexOf" executed="True" success="True" time="0.003" asserts="57" />
                  <test-case name="MonoTests.System.StringTest.LastIndexOf_Char_LengthOverflow" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.LastIndexOf_Char_StartIndexOverflow" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.LastIndexOf_Char_StartIndexStringLength" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.LastIndexOf_String_LengthOverflow" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.LastIndexOf_String_StartIndexOverflow" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.LastIndexOf_String_StartIndexStringLength" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.StringTest.LastIndexOf_String_StartIndexStringLength_Plus1" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.LastIndexOf_StringComparison" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.StringTest.LastIndexOfAndEmptiness" executed="True" success="True" time="0.010" asserts="38" />
                  <test-case name="MonoTests.System.StringTest.LastIndexOfAny" executed="True" success="True" time="0.002" asserts="25" />
                  <test-case name="MonoTests.System.StringTest.LastIndexOfAny_Length_Overflow" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.LastIndexOfAny_StartIndex_Overflow" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.LastIndexOfAnyAndEmptiness" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.StringTest.LastIndexOfAnyBounds1" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.LastIndexOfStringComparison" executed="True" success="True" time="0.001" asserts="24" />
                  <test-case name="MonoTests.System.StringTest.LastIndexOfStringComparisonOrdinal" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.StringTest.LastIndexOfStringComparisonOrdinalIgnoreCase" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.StringTest.LastIndexOfStringComparisonOrdinalIgnoreCaseRangeException1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.StringTest.LastIndexOfStringComparisonOrdinalIgnoreCaseRangeException2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.StringTest.LastIndexOfStringComparisonOrdinalRangeException1" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.StringTest.LastIndexOfStringComparisonOrdinalRangeException2" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.StringTest.Length" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.StringTest.MoreNormalizeFormC" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.StringTest.MoreSplit" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.StringTest.Normalize1" executed="True" success="True" time="0.001" asserts="4">
                    <categories>
                      <category name="NotDotNet" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.StringTest.Normalize2" executed="True" success="True" time="0.000" asserts="2">
                    <categories>
                      <category name="NotDotNet" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.StringTest.Normalize3" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.NormalizeFormC" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.StringTest.NormalizeFormCCrashers" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.StringTest.NormalizeFormCHangul" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.StringTest.NormalizeFormD" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.PadLeft_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.StringTest.PadLeft1" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.StringTest.PadLeft1_TotalWidth_Negative" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.PadRight_Overflow" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.StringTest.PadRight1" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.StringTest.PadRight1_TotalWidth_Negative" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.PadRight2" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.StringTest.Remove1" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.StringTest.Remove1_StartIndex_Negative" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.Remove1_StartIndex_Overflow" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.Remove2" executed="True" success="True" time="0.001" asserts="17" />
                  <test-case name="MonoTests.System.StringTest.Remove2_Length_Overflow" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.Remove2_StartIndex_Overflow" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.Replace" executed="True" success="True" time="0.001" asserts="16" />
                  <test-case name="MonoTests.System.StringTest.ReplaceStringBeginEndTest" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.StringTest.ReplaceStringBeginEndTestFallback" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.StringTest.ReplaceStringCultureTests" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.StringTest.ReplaceStringOffByOne" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.StringTest.Split3_Options_Invalid" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.StringTest.Split4_Options_Invalid" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.StringTest.Split5_Options_Invalid" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.StringTest.Split6_Count_Negative" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.Split6_Options_Invalid" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.StringTest.SplitString" executed="True" success="True" time="0.002" asserts="38" />
                  <test-case name="MonoTests.System.StringTest.SplitStringChars" executed="True" success="True" time="0.003" asserts="56" />
                  <test-case name="MonoTests.System.StringTest.SplitStringStrings" executed="True" success="True" time="0.003" asserts="50" />
                  <test-case name="MonoTests.System.StringTest.StartsWith1" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.StringTest.StartsWith1_Value_Null" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.StartsWith2_ComparisonType_Invalid" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.StartsWith2_Value_Null" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.StartsWith3_Culture_Null" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.StringTest.Substring1" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.StringTest.SubString1_StartIndex_Negative" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.SubString1_StartIndex_Overflow" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.Substring2" executed="True" success="True" time="0.009" asserts="5" />
                  <test-case name="MonoTests.System.StringTest.SubString2_Length_Negative" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.Substring2_Length_Overflow" executed="True" success="True" time="0.001" asserts="12" />
                  <test-case name="MonoTests.System.StringTest.SubString2_StartIndex_Negative" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.Substring2_StartIndex_Overflow" executed="True" success="True" time="0.001" asserts="8" />
                  <test-case name="MonoTests.System.StringTest.TestChars" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.StringTest.TestComparePeriod" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.StringTest.TestEquals" executed="True" success="True" time="0.001" asserts="8" />
                  <test-case name="MonoTests.System.StringTest.TestFormat" executed="True" success="True" time="0.001" asserts="13" />
                  <test-case name="MonoTests.System.StringTest.TestGetEnumerator" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.StringTest.TestGetHashCode" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.StringTest.TestGetType" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.StringTest.TestGetTypeCode" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.StringTest.TestInsert" executed="True" success="True" time="0.001" asserts="11" />
                  <test-case name="MonoTests.System.StringTest.TestJoin" executed="True" success="True" time="0.001" asserts="13" />
                  <test-case name="MonoTests.System.StringTest.TestSbytePtrConstructorASCII" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.StringTest.TestSbytePtrConstructorDefault" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.TestSplit" executed="True" success="True" time="0.002" asserts="36" />
                  <test-case name="MonoTests.System.StringTest.TestToString" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.StringTest.TestTrim" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.StringTest.TestTrimEnd" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.TestTrimStart" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.ToCharArray" executed="True" success="True" time="0.001" asserts="14" />
                  <test-case name="MonoTests.System.StringTest.ToCharArray_Length_Negative" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.ToCharArray_Length_Overflow" executed="True" success="True" time="0.001" asserts="8" />
                  <test-case name="MonoTests.System.StringTest.ToCharArray_StartIndex_Negative" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.StringTest.ToCharArray_StartIndex_Overflow" executed="True" success="True" time="0.001" asserts="8" />
                  <test-case name="MonoTests.System.StringTest.ToLower1" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.StringTest.ToLower2" executed="True" success="True" time="0.001" asserts="8" />
                  <test-case name="MonoTests.System.StringTest.ToLower2_Culture_Null" executed="True" success="True" time="0.001" asserts="8" />
                  <test-case name="MonoTests.System.StringTest.ToUpper1" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.StringTest.ToUpper2" executed="True" success="True" time="0.001" asserts="8" />
                  <test-case name="MonoTests.System.StringTest.ToUpper2_Culture_Null" executed="True" success="True" time="0.001" asserts="8" />
                </results>
              </test-suite>
              <test-suite name="Text" success="True" time="3.607" asserts="0">
                <results>
                  <test-suite name="ASCIIEncodingTest" success="True" time="0.042" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Text.ASCIIEncodingTest.DecoderFallback" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="MonoTests.System.Text.ASCIIEncodingTest.DecoderFallback2" executed="True" success="True" time="0.003" asserts="0" />
                      <test-case name="MonoTests.System.Text.ASCIIEncodingTest.DecoderFallback3" executed="True" success="True" time="0.011" asserts="6" />
                      <test-case name="MonoTests.System.Text.ASCIIEncodingTest.IsBrowserDisplay" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Text.ASCIIEncodingTest.IsBrowserSave" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Text.ASCIIEncodingTest.IsMailNewsDisplay" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Text.ASCIIEncodingTest.IsMailNewsSave" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Text.ASCIIEncodingTest.TestDecoder" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Text.ASCIIEncodingTest.TestEncoder" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Text.ASCIIEncodingTest.TestGetBytes1" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Text.ASCIIEncodingTest.TestGetBytes2" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Text.ASCIIEncodingTest.TestGetBytes3" executed="True" success="True" time="0.002" asserts="4" />
                      <test-case name="MonoTests.System.Text.ASCIIEncodingTest.TestGetBytes4" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Text.ASCIIEncodingTest.TestGetBytes5" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Text.ASCIIEncodingTest.TestGetBytes6" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Text.ASCIIEncodingTest.TestGetChars1" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Text.ASCIIEncodingTest.TestGetChars2" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Text.ASCIIEncodingTest.TestGetChars3" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Text.ASCIIEncodingTest.TestGetChars4" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Text.ASCIIEncodingTest.TestGetString1" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Text.ASCIIEncodingTest.TestGetString2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Text.ASCIIEncodingTest.TestGetString3" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Text.ASCIIEncodingTest.TestZero" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="DecoderReplacementFallbackBufferTest" success="True" time="0.006" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Text.DecoderReplacementFallbackBufferTest.FallbackDefaultEncodingUTF8" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Text.DecoderReplacementFallbackBufferTest.FallbackEmptyDefault" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Text.DecoderReplacementFallbackBufferTest.FallbackEmptyForEncodingUTF8" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Text.DecoderReplacementFallbackBufferTest.FallbackRecursiveError" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.DecoderReplacementFallbackBufferTest.FallbackSequential" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.DecoderReplacementFallbackBufferTest.Reset" executed="True" success="True" time="0.000" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite name="DecoderReplacementFallbackTest" success="True" time="0.008" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Text.DecoderReplacementFallbackTest.CustomEncodingSetEncoderFallback" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.DecoderReplacementFallbackTest.DecoderSetNullFallback" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.DecoderReplacementFallbackTest.Defaults" executed="True" success="True" time="0.001" asserts="9" />
                      <test-case name="MonoTests.System.Text.DecoderReplacementFallbackTest.DontChangeReadOnlyCodePageDecoderFallback" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Text.DecoderReplacementFallbackTest.DontChangeReadOnlyUTF8DecoderFallback" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Text.DecoderReplacementFallbackTest.EncodingSetNullDecoderFallback" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.DecoderReplacementFallbackTest.SetDecoderFallback" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="DecoderTest" success="True" time="0.006" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Text.DecoderTest.Bug10789" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Text.DecoderTest.ConvertLimitedDestination" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Text.DecoderTest.ConvertNullBytes" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.DecoderTest.ConvertNullChars" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.DecoderTest.CustomEncodingGetDecoder" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="EncoderReplacementFallbackBufferTest" success="True" time="0.005" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Text.EncoderReplacementFallbackBufferTest.FallbackEmptyDefault" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Text.EncoderReplacementFallbackBufferTest.FallbackEmptyForEncodingUTF8" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Text.EncoderReplacementFallbackBufferTest.FallbackRecursiveError" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.EncoderReplacementFallbackBufferTest.FallbackSequential" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.EncoderReplacementFallbackBufferTest.Reset" executed="True" success="True" time="0.001" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="EncoderReplacementFallbackTest" success="True" time="0.021" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Text.EncoderReplacementFallbackTest.CustomEncodingSetEncoderFallback" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Text.EncoderReplacementFallbackTest.Defaults" executed="True" success="True" time="0.001" asserts="9" />
                      <test-case name="MonoTests.System.Text.EncoderReplacementFallbackTest.DontChangeReadOnlyCodePageEncoderFallback" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Text.EncoderReplacementFallbackTest.DontChangeReadOnlyUTF8EncoderFallback" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.EncoderReplacementFallbackTest.EncoderSetNullFallback" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Text.EncoderReplacementFallbackTest.EncodingSetNullEncoderFallback" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Text.EncoderReplacementFallbackTest.Latin1Replacement" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="MonoTests.System.Text.EncoderReplacementFallbackTest.SetEncoderFallback" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="EncoderTest" success="True" time="0.007" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Text.EncoderTest.ConvertLimitedDestination" executed="True" success="True" time="0.002" asserts="3" />
                      <test-case name="MonoTests.System.Text.EncoderTest.ConvertNullBytes" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.EncoderTest.ConvertNullChars" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.EncoderTest.ConvertZeroCharacters" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Text.EncoderTest.CustomEncodingGetEncoder" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="EncodingInfoTest" success="True" time="3.167" asserts="0">
                    <categories>
                      <category name="MobileNotWorking" />
                    </categories>
                    <results>
                      <test-case name="MonoTests.System.Text.EncodingInfoTest.EncodingGetEncodingsReturnsAll" executed="True" success="True" time="3.164" asserts="6" />
                      <test-case name="MonoTests.System.Text.EncodingInfoTest.GetEncodingForAllInfo" executed="True" success="True" time="0.002" asserts="95" />
                    </results>
                  </test-suite>
                  <test-suite name="EncodingTest" success="True" time="0.007" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Text.EncodingTest.GetEncoding_CodePage_Default" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Text.EncodingTest.GetEncoding_CodePage_Invalid" executed="True" success="True" time="0.001" asserts="10" />
                      <test-case name="MonoTests.System.Text.EncodingTest.GetEncoding_Name_NotSupported" executed="True" success="True" time="0.003" asserts="6" />
                      <test-case name="MonoTests.System.Text.EncodingTest.GetEncoding_Name_Null" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="StringBuilderTest" success="True" time="0.060" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Text.StringBuilderTest.AppendCharArray_CharCountOverflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.AppendCharArray_StartIndexOverflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.AppendString_CountOverflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.AppendString_StartIndexOverflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.AppendToEmpty" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.CapacityFromString" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.ClearMethod" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.Constructor_LengthOverflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.Constructor_StartIndexOverflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.Insert0" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.Insert1" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.InsertCharArray_CharCountOverflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.InsertCharArray_StartIndexOverflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.MaxCapacity_Overflow1" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.MaxCapacity_Overflow2" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.MaxCapacity_Overflow3" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.MaxCapacity_Overflow4" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.MoreReplace" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.NullInCtor" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.Remove_LengthOverflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.Remove_StartIndexOverflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.ReplaceChar_CountOverflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.ReplaceChar_StartIndexOverflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.ReplaceString_CountOverflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.ReplaceString_StartIndexOverflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.ReplaceWithLargerString" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.SetLength" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.TestAppend" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.TestAppendFormat" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.TestConstructor1" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.TestConstructor10" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.TestConstructor11" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.TestConstructor2" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.TestConstructor3" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.TestConstructor4" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.TestConstructor5" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.TestConstructor6" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.TestConstructor7" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.TestConstructor8" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.TestConstructor9" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.TestInsert" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.TestRemove" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.TestReplace" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.ToString_LengthOverflow" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.StringBuilderTest.ToString_StartIndexOverflow" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="UnicodeEncodingTest" success="True" time="0.019" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Text.UnicodeEncodingTest.ByteOrderMark" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Text.UnicodeEncodingTest.IsBrowserDisplay" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Text.UnicodeEncodingTest.IsBrowserSave" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Text.UnicodeEncodingTest.IsMailNewsDisplay" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Text.UnicodeEncodingTest.IsMailNewsSave" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Text.UnicodeEncodingTest.TestEncodingDecodingGetBytes1" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Text.UnicodeEncodingTest.TestEncodingDecodingGetBytes2" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Text.UnicodeEncodingTest.TestEncodingGetBytes1" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Text.UnicodeEncodingTest.TestEncodingGetBytes2" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Text.UnicodeEncodingTest.TestEncodingGetBytes3" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Text.UnicodeEncodingTest.TestEncodingGetCharCount" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Text.UnicodeEncodingTest.TestPreamble1" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Text.UnicodeEncodingTest.TestPreamble2" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Text.UnicodeEncodingTest.TestPreamble3" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Text.UnicodeEncodingTest.ZeroLengthArrays" executed="True" success="True" time="0.001" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="UTF32EncodingTest" success="True" time="0.021" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Text.UTF32EncodingTest.GetByteCount1" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Text.UTF32EncodingTest.GetByteCount1_Chars_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Text.UTF32EncodingTest.GetByteCount2" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Text.UTF32EncodingTest.GetByteCount2_S_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Text.UTF32EncodingTest.GetByteCount3" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Text.UTF32EncodingTest.GetByteCount3_Chars_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Text.UTF32EncodingTest.GetByteCount4" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.Text.UTF32EncodingTest.GetByteCount4_Chars_Null" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Text.UTF32EncodingTest.GetByteCount4_Count_Negative" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Text.UTF32EncodingTest.GetByteCount4_Count_Overflow" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Text.UTF32EncodingTest.GetByteCount4_Index_Negative" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Text.UTF32EncodingTest.GetByteCount4_Index_Overflow" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Text.UTF32EncodingTest.GetPreamble" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Text.UTF32EncodingTest.IsBrowserDisplay" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Text.UTF32EncodingTest.IsBrowserSave" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Text.UTF32EncodingTest.IsMailNewsDisplay" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Text.UTF32EncodingTest.IsMailNewsSave" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="UTF7EncodingTest" success="True" time="0.021" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Text.UTF7EncodingTest.Bug77315" executed="True" success="True" time="0.000" asserts="0">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Text.UTF7EncodingTest.GetCharCount" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Text.UTF7EncodingTest.IsBrowserDisplay" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Text.UTF7EncodingTest.IsBrowserSave" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Text.UTF7EncodingTest.IsMailNewsDisplay" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Text.UTF7EncodingTest.IsMailNewsSave" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Text.UTF7EncodingTest.RFC1642_Example1" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Text.UTF7EncodingTest.RFC1642_Example2" executed="True" success="True" time="0.001" asserts="10" />
                      <test-case name="MonoTests.System.Text.UTF7EncodingTest.RFC1642_Example3" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Text.UTF7EncodingTest.RFC1642_Example4" executed="True" success="True" time="0.001" asserts="14" />
                      <test-case name="MonoTests.System.Text.UTF7EncodingTest.TestDirectlyEncoded1" executed="True" success="True" time="0.000" asserts="8" />
                      <test-case name="MonoTests.System.Text.UTF7EncodingTest.TestDirectlyEncoded2" executed="True" success="True" time="0.000" asserts="8" />
                      <test-case name="MonoTests.System.Text.UTF7EncodingTest.TestEncodeOptionalEncoded" executed="True" success="True" time="0.000" asserts="9" />
                      <test-case name="MonoTests.System.Text.UTF7EncodingTest.TestEncodeUnicodeShifted1" executed="True" success="True" time="0.000" asserts="10" />
                      <test-case name="MonoTests.System.Text.UTF7EncodingTest.TestEncodeUnicodeShifted2" executed="True" success="True" time="0.000" asserts="10" />
                      <test-case name="MonoTests.System.Text.UTF7EncodingTest.TestMaxCharCount" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="UTF8EncodingTest" success="True" time="0.176" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.Bug10788" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.Bug10789" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.Bug415628" executed="True" success="True" time="0.034" asserts="0">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.Bug77315" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.CloneNotReadOnly" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.DecoderFallbackSimple" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.FallbackDefaultEncodingUTF8" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.GetCharsFEFF" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.IsBrowserDisplay" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.IsBrowserSave" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.IsMailNewsDisplay" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.IsMailNewsSave" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.SufficientByteArray" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.SufficientByteArray2" executed="True" success="True" time="0.027" asserts="9" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T1_Correct_GreekWord_kosme" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T2_Boundary_1_FirstPossibleSequence_Fail_5" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T2_Boundary_1_FirstPossibleSequence_Fail_6" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T2_Boundary_1_FirstPossibleSequence_Pass" executed="True" success="True" time="0.001" asserts="9" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T2_Boundary_2_LastPossibleSequence_Fail_4" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T2_Boundary_2_LastPossibleSequence_Fail_5" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T2_Boundary_2_LastPossibleSequence_Fail_6" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T2_Boundary_2_LastPossibleSequence_Pass" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T2_Boundary_3_Other_Fail_5" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T2_Boundary_3_Other_Pass" executed="True" success="True" time="0.001" asserts="9" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T3_Malformed_1_UnexpectedContinuation_311" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T3_Malformed_1_UnexpectedContinuation_312" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T3_Malformed_1_UnexpectedContinuation_313" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T3_Malformed_1_UnexpectedContinuation_314" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T3_Malformed_1_UnexpectedContinuation_315" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T3_Malformed_1_UnexpectedContinuation_316" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T3_Malformed_1_UnexpectedContinuation_317" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T3_Malformed_1_UnexpectedContinuation_318" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T3_Malformed_1_UnexpectedContinuation_319" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T3_Malformed_2_LonelyStart_321" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T3_Malformed_2_LonelyStart_322" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T3_Malformed_2_LonelyStart_323" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T3_Malformed_2_LonelyStart_324" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T3_Malformed_2_LonelyStart_325" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T3_Malformed_3_LastContinuationMissing_331" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T3_Malformed_3_LastContinuationMissing_3310" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T3_Malformed_3_LastContinuationMissing_332" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T3_Malformed_3_LastContinuationMissing_333" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T3_Malformed_3_LastContinuationMissing_334" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T3_Malformed_3_LastContinuationMissing_335" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T3_Malformed_3_LastContinuationMissing_336" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T3_Malformed_3_LastContinuationMissing_337" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T3_Malformed_3_LastContinuationMissing_338" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T3_Malformed_3_LastContinuationMissing_339" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T3_Malformed_4_ConcatenationImcomplete" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T3_Malformed_5_ImpossibleBytes_351" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T3_Malformed_5_ImpossibleBytes_352" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T3_Malformed_5_ImpossibleBytes_353" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T4_Overlong_1_ASCII_Slash_411" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T4_Overlong_1_ASCII_Slash_412" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T4_Overlong_1_ASCII_Slash_413" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T4_Overlong_1_ASCII_Slash_414" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T4_Overlong_1_ASCII_Slash_415" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T4_Overlong_2_MaximumBoundary_421" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T4_Overlong_2_MaximumBoundary_422" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T4_Overlong_2_MaximumBoundary_423" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T4_Overlong_2_MaximumBoundary_424" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T4_Overlong_2_MaximumBoundary_425" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T4_Overlong_3_NUL_431" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T4_Overlong_3_NUL_432" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T4_Overlong_3_NUL_433" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T4_Overlong_3_NUL_434" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T4_Overlong_3_NUL_435" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T5_IllegalCodePosition_1_UTF16Surrogates_511" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T5_IllegalCodePosition_1_UTF16Surrogates_512" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T5_IllegalCodePosition_1_UTF16Surrogates_513" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T5_IllegalCodePosition_1_UTF16Surrogates_514" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T5_IllegalCodePosition_1_UTF16Surrogates_515" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T5_IllegalCodePosition_1_UTF16Surrogates_516" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T5_IllegalCodePosition_1_UTF16Surrogates_517" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T5_IllegalCodePosition_2_PairedUTF16Surrogates_521" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T5_IllegalCodePosition_2_PairedUTF16Surrogates_522" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T5_IllegalCodePosition_2_PairedUTF16Surrogates_523" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T5_IllegalCodePosition_2_PairedUTF16Surrogates_524" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T5_IllegalCodePosition_2_PairedUTF16Surrogates_525" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T5_IllegalCodePosition_2_PairedUTF16Surrogates_526" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T5_IllegalCodePosition_2_PairedUTF16Surrogates_527" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T5_IllegalCodePosition_2_PairedUTF16Surrogates_528" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T5_IllegalCodePosition_3_Other_531" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.T5_IllegalCodePosition_3_Other_532" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.TestCompat" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.TestDecodingGetChars1" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.TestEncodingGetBytes1" executed="True" success="True" time="0.000" asserts="7" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.TestEncodingGetBytes2" executed="True" success="True" time="0.001" asserts="12" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.TestMaxByteCount" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.TestMaxByteCountWithCustomFallback" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.TestMaxCharCount" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.TestMaxCharCountWithCustomFallback" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Text.UTF8EncodingTest.TestThrowOnInvalid" executed="True" success="True" time="0.001" asserts="9" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="Threading" success="True" time="38.051" asserts="0">
                <results>
                  <test-suite name="AutoResetEventTest" success="True" time="1.007" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Threading.AutoResetEventTest.Handle_Invalid" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Threading.AutoResetEventTest.Handle_ZeroPtr" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Threading.AutoResetEventTest.MultipleSet" executed="True" success="True" time="1.000" asserts="3" />
                      <test-case name="MonoTests.System.Threading.AutoResetEventTest.SafeWaitHandle" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Threading.AutoResetEventTest.SafeWaitHandle_Null" executed="True" success="True" time="0.000" asserts="6" />
                    </results>
                  </test-suite>
                  <test-suite name="CancellationTokenSourceTest" success="True" time="1.567" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Threading.CancellationTokenSourceTest.Cancel" executed="True" success="True" time="0.006" asserts="3" />
                      <test-case name="MonoTests.System.Threading.CancellationTokenSourceTest.Cancel_ExceptionOrder" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Threading.CancellationTokenSourceTest.Cancel_MultipleException_Recursive" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Threading.CancellationTokenSourceTest.Cancel_MultipleExceptions" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="MonoTests.System.Threading.CancellationTokenSourceTest.Cancel_MultipleExceptionsFirstThrows" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Threading.CancellationTokenSourceTest.Cancel_NoRegistration" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.CancellationTokenSourceTest.Cancel_Order" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Threading.CancellationTokenSourceTest.Cancel_SingleException" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Threading.CancellationTokenSourceTest.CancelAfter" executed="True" success="True" time="0.053" asserts="1" />
                      <test-case name="MonoTests.System.Threading.CancellationTokenSourceTest.CancelAfter_Disposed" executed="True" success="True" time="0.051" asserts="1" />
                      <test-case name="MonoTests.System.Threading.CancellationTokenSourceTest.CancelAfter_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.CancellationTokenSourceTest.CancelLinkedTokenSource" executed="True" success="True" time="0.002" asserts="3" />
                      <test-case name="MonoTests.System.Threading.CancellationTokenSourceTest.CancelWithDispose" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Threading.CancellationTokenSourceTest.ConcurrentCancelLinkedTokenSourceWhileDisposing" executed="True" success="True" time="0.263" asserts="0" />
                      <test-case name="MonoTests.System.Threading.CancellationTokenSourceTest.CreateLinkedTokenSource" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Threading.CancellationTokenSourceTest.CreateLinkedTokenSource_InvalidArguments" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.CancellationTokenSourceTest.Ctor_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.CancellationTokenSourceTest.Ctor_Timeout" executed="True" success="True" time="0.051" asserts="1" />
                      <test-case name="MonoTests.System.Threading.CancellationTokenSourceTest.Dispose" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Threading.CancellationTokenSourceTest.DisposeAfterRegistrationTest" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Threading.CancellationTokenSourceTest.DisposeRace" executed="True" success="True" time="1.107" asserts="0" />
                      <test-case name="MonoTests.System.Threading.CancellationTokenSourceTest.ReEntrantRegistrationTest" executed="True" success="True" time="0.002" asserts="2" />
                      <test-case name="MonoTests.System.Threading.CancellationTokenSourceTest.RegisterThenDispose" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Threading.CancellationTokenSourceTest.RegisterWhileCancelling" executed="True" success="True" time="0.001" asserts="7" />
                      <test-case name="MonoTests.System.Threading.CancellationTokenSourceTest.Token" executed="True" success="True" time="0.001" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite name="CancellationTokenTests" success="True" time="0.009" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Threading.CancellationTokenTests.CancellationSourceCanceled" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Threading.CancellationTokenTests.CancellationSourceNotCanceled" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Threading.CancellationTokenTests.DefaultCancellationTokenRegistration" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.CancellationTokenTests.InitedWithFalseToken" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Threading.CancellationTokenTests.InitedWithTrueToken" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Threading.CancellationTokenTests.NoneProperty" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Threading.CancellationTokenTests.UninitializedToken" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="CompressedStackTest" success="True" time="0.009" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Threading.CompressedStackTest.Capture" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Threading.CompressedStackTest.CreateCopy" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Threading.CompressedStackTest.GetCompressedStack" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Threading.CompressedStackTest.GetObjectData_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.CompressedStackTest.Run_Capture" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Threading.CompressedStackTest.Run_GetCompressedStack" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Threading.CompressedStackTest.Run_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.CompressedStackTest.Run_Thread" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="CountdownEventTests" success="True" time="0.305" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Threading.CountdownEventTests.AddCount_HasBeenSet" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Threading.CountdownEventTests.AddCount_Invalid" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Threading.CountdownEventTests.AddCountSignalStressTestCase" executed="True" success="True" time="0.002" asserts="2" />
                      <test-case name="MonoTests.System.Threading.CountdownEventTests.Constructor_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.CountdownEventTests.Constructor_Max" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.CountdownEventTests.Constructor_Zero" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Threading.CountdownEventTests.CurrentCountTestCase" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Threading.CountdownEventTests.Dispose" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Threading.CountdownEventTests.Dispose_Double" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.CountdownEventTests.InitialTestCase" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Threading.CountdownEventTests.IsSetTestCase" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Threading.CountdownEventTests.Reset_FullInitialized" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Threading.CountdownEventTests.Reset_Invalid" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Threading.CountdownEventTests.Reset_Zero" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Threading.CountdownEventTests.ResetTest" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Threading.CountdownEventTests.Signal_Concurrent" executed="True" success="True" time="0.176" asserts="100" />
                      <test-case name="MonoTests.System.Threading.CountdownEventTests.Signal_Invalid" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Threading.CountdownEventTests.Signal_Negative" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Threading.CountdownEventTests.TryAddCount_HasBeenSet" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Threading.CountdownEventTests.TryAddCount_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.CountdownEventTests.TryAddCountTestCase" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Threading.CountdownEventTests.WaitTestCase" executed="True" success="True" time="0.102" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="EventWaitHandleTest" success="True" time="0.001" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Threading.EventWaitHandleTest.EventWaitHandle_InvalidEventResetMode" executed="True" success="True" time="0.001" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="ExecutionContextTest" success="True" time="0.017" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Threading.ExecutionContextTest.Capture" executed="True" success="True" time="0.001" asserts="3">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Threading.ExecutionContextTest.CaptureCallContext" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Threading.ExecutionContextTest.CaptureLogicalCallContext" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Threading.ExecutionContextTest.Copy" executed="True" success="True" time="0.001" asserts="6">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Threading.ExecutionContextTest.GetData_SetLogicalData" executed="True" success="True" time="0.000" asserts="1">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Threading.ExecutionContextTest.IsFlowSuppressed" executed="True" success="True" time="0.000" asserts="3">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Threading.ExecutionContextTest.LogicalGetData_SetData" executed="True" success="True" time="0.000" asserts="1">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Threading.ExecutionContextTest.LogicalGetData_SetDataLogicalThreadAffinative" executed="True" success="True" time="0.000" asserts="1">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Threading.ExecutionContextTest.RestoreFlow_None" executed="True" success="True" time="0.000" asserts="0">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Threading.ExecutionContextTest.RestoreFlow_SuppressFlow" executed="True" success="True" time="0.000" asserts="3">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Threading.ExecutionContextTest.Run_SuppressFlow" executed="True" success="True" time="0.001" asserts="2">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Threading.ExecutionContextTest.SuppressFlow" executed="True" success="True" time="0.000" asserts="3">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Threading.ExecutionContextTest.SuppressFlow_Two_Undo" executed="True" success="True" time="0.001" asserts="4">
                        <categories>
                          <category name="MobileNotWorking" />
                        </categories>
                      </test-case>
                    </results>
                  </test-suite>
                  <test-suite name="InterlockedTest" success="True" time="0.041" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Threading.InterlockedTest.CompareExchange_Generic" executed="True" success="True" time="0.001" asserts="8" />
                      <test-case name="MonoTests.System.Threading.InterlockedTest.Exchange_Generic" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Threading.InterlockedTest.TestAdd_Int32" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Threading.InterlockedTest.TestAdd_Int64" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Threading.InterlockedTest.TestCompareExchange_Dbl" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Threading.InterlockedTest.TestCompareExchange_Failed_Dbl" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Threading.InterlockedTest.TestCompareExchange_Failed_Flt" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Threading.InterlockedTest.TestCompareExchange_Failed_Int32" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Threading.InterlockedTest.TestCompareExchange_Failed_Int64" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Threading.InterlockedTest.TestCompareExchange_Failed_Iptr" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Threading.InterlockedTest.TestCompareExchange_Failed_Obj" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Threading.InterlockedTest.TestCompareExchange_Flt" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Threading.InterlockedTest.TestCompareExchange_Int32" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Threading.InterlockedTest.TestCompareExchange_Int64" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Threading.InterlockedTest.TestCompareExchange_Iptr" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Threading.InterlockedTest.TestCompareExchange_Obj" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Threading.InterlockedTest.TestDecrement_Int32" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Threading.InterlockedTest.TestDecrement_Int64" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Threading.InterlockedTest.TestExchange_Dbl" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Threading.InterlockedTest.TestExchange_Flt" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Threading.InterlockedTest.TestExchange_Int32" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Threading.InterlockedTest.TestExchange_Int64" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Threading.InterlockedTest.TestExchange_Iptr" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Threading.InterlockedTest.TestExchange_Obj" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Threading.InterlockedTest.TestIncrement_Int32" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Threading.InterlockedTest.TestIncrement_Int64" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Threading.InterlockedTest.TestRead_Int64" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="LazyInitializerTest" success="True" time="0.006" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Threading.LazyInitializerTest.EnsureInitialized_FactoryIsNull" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Threading.LazyInitializerTest.EnsureInitialized_NullLock" executed="True" success="True" time="0.002" asserts="8" />
                      <test-case name="MonoTests.System.Threading.LazyInitializerTest.EnsureInitialized_Simple" executed="True" success="True" time="0.001" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="ManualResetEventSlimTests" success="True" time="3.294" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Threading.ManualResetEventSlimTests.Constructor_Defaults" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Threading.ManualResetEventSlimTests.Constructor_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.ManualResetEventSlimTests.Dispose" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Threading.ManualResetEventSlimTests.Dispose_Double" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.ManualResetEventSlimTests.IsSetTestCase" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Threading.ManualResetEventSlimTests.SetAfterDisposeTest" executed="True" success="True" time="0.022" asserts="1500" />
                      <test-case name="MonoTests.System.Threading.ManualResetEventSlimTests.Wait_Expired" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="MonoTests.System.Threading.ManualResetEventSlimTests.Wait_SetConcurrent" executed="True" success="True" time="0.087" asserts="20000" />
                      <test-case name="MonoTests.System.Threading.ManualResetEventSlimTests.WaitAfterDisposeTest" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Threading.ManualResetEventSlimTests.WaitHandle_Initialized" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Threading.ManualResetEventSlimTests.WaitHandle_NotInitialized" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Threading.ManualResetEventSlimTests.WaitHandleConsistencyTest" executed="True" success="True" time="0.104" asserts="10000" />
                      <test-case name="MonoTests.System.Threading.ManualResetEventSlimTests.WaitTest" executed="True" success="True" time="0.052" asserts="2" />
                      <test-case name="MonoTests.System.Threading.ManualResetEventSlimTests.WaitWithCancellationTokenAndCancel" executed="True" success="True" time="1.002" asserts="0" />
                      <test-case name="MonoTests.System.Threading.ManualResetEventSlimTests.WaitWithCancellationTokenAndNotImmediateSetTest" executed="True" success="True" time="1.001" asserts="1" />
                      <test-case name="MonoTests.System.Threading.ManualResetEventSlimTests.WaitWithCancellationTokenAndTimeout" executed="True" success="True" time="1.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="MonitorTest" success="True" time="0.048" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Threading.MonitorTest.Enter_bool" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Threading.MonitorTest.Enter_bool_argcheck" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.MonitorTest.Enter_bool_argcheck_fastpath" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.MonitorTest.Enter_Exit" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Threading.MonitorTest.Enter_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.MonitorTest.Exit_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.MonitorTest.Pulse" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.MonitorTest.Pulse_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.MonitorTest.Pulse_Unlocked" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.MonitorTest.PulseAll" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.MonitorTest.PulseAll_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.MonitorTest.PulseAll_Unlocked" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.MonitorTest.TryEnter" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Threading.MonitorTest.TryEnter_Int" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Threading.MonitorTest.TryEnter_Int_Negative" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Threading.MonitorTest.TryEnter_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.MonitorTest.TryEnter_Null_Int" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.MonitorTest.TryEnter_Null_TimeSpan" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.MonitorTest.TryEnter_Null_TimeSpan_TooLarge" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Threading.MonitorTest.TryEnter_TimeSpan" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Threading.MonitorTest.TryEnter_TimeSpan_Negative" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.MonitorTest.TryEnter_TimeSpan_TooLarge" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.MonitorTest.Wait_Int" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Threading.MonitorTest.Wait_Int_Negative" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.MonitorTest.Wait_Int_Unlocked" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.MonitorTest.Wait_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.MonitorTest.Wait_Null_Int" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.MonitorTest.Wait_Null_TimeSpan" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.MonitorTest.Wait_Null_TimeSpan_TooLarge" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.MonitorTest.Wait_TimeSpan" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Threading.MonitorTest.Wait_TimeSpan_Negative" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.MonitorTest.Wait_TimeSpan_TooLarge" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.MonitorTest.Wait_TimeSpan_Unlocked" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.MonitorTest.Wait_Unlocked" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="MutexTest" success="True" time="0.010" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Threading.MutexTest.DoubleRelease" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Threading.MutexTest.TestCtor1" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.MutexTest.TestHandle" executed="True" success="True" time="0.000" asserts="0">
                        <categories>
                          <category name="TargetJvmNotSupported" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Threading.MutexTest.TestWaitAndFoget1" executed="True" success="True" time="0.006" asserts="1" />
                      <test-case name="MonoTests.System.Threading.MutexTest.TestWaitAndSignal1" executed="True" success="True" time="0.002" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="ReaderWriterLockTest" success="True" time="6.622" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Threading.ReaderWriterLockTest.DowngradeTest" executed="True" success="True" time="0.002" asserts="16" />
                      <test-case name="MonoTests.System.Threading.ReaderWriterLockTest.TestAcquireLocks" executed="True" success="True" time="0.601" asserts="5" />
                      <test-case name="MonoTests.System.Threading.ReaderWriterLockTest.TestBug_475124" executed="True" success="True" time="0.001" asserts="18" />
                      <test-case name="MonoTests.System.Threading.ReaderWriterLockTest.TestBug_55909" executed="True" success="True" time="2.001" asserts="0" />
                      <test-case name="MonoTests.System.Threading.ReaderWriterLockTest.TestBug_55909_bis" executed="True" success="True" time="3.001" asserts="0" />
                      <test-case name="MonoTests.System.Threading.ReaderWriterLockTest.TestBug_55911" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.ReaderWriterLockTest.TestIsReaderLockHeld" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Threading.ReaderWriterLockTest.TestIsWriterLockHeld" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Threading.ReaderWriterLockTest.TestReaderInsideWriter" executed="True" success="True" time="0.000" asserts="10" />
                      <test-case name="MonoTests.System.Threading.ReaderWriterLockTest.TestReaderMustWaitWriter" executed="True" success="True" time="0.401" asserts="0" />
                      <test-case name="MonoTests.System.Threading.ReaderWriterLockTest.TestReleaseRestoreReaderLock" executed="True" success="True" time="0.201" asserts="3" />
                      <test-case name="MonoTests.System.Threading.ReaderWriterLockTest.TestReleaseRestoreWriterLock" executed="True" success="True" time="0.201" asserts="5" />
                      <test-case name="MonoTests.System.Threading.ReaderWriterLockTest.TestUpgradeDowngradeLock" executed="True" success="True" time="0.202" asserts="8" />
                    </results>
                  </test-suite>
                  <test-suite name="SemaphoreSlimTests" success="True" time="0.086" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Threading.SemaphoreSlimTests.CurrentCountMaxTestCase" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="MonoTests.System.Threading.SemaphoreSlimTests.CurrentCountTestCase" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Threading.SemaphoreSlimTests.WaitStressTest" executed="True" success="True" time="0.083" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite name="SpinLockTests" success="True" time="0.363" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Threading.SpinLockTests.FirstTakenParameterTest" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Threading.SpinLockTests.IsHeldByCurrentThreadTest" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="MonoTests.System.Threading.SpinLockTests.LockUnicityTest" executed="True" success="True" time="0.323" asserts="200" />
                      <test-case name="MonoTests.System.Threading.SpinLockTests.RecursionExceptionTest" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Threading.SpinLockTests.SecondTakenParameterTest" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Threading.SpinLockTests.SemanticCorrectnessTest" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Threading.SpinLockTests.SimpleEnterExitSchemeTest" executed="True" success="True" time="0.033" asserts="50000" />
                    </results>
                  </test-suite>
                  <test-suite name="Tasks" success="True" time="12.528" asserts="0">
                    <results>
                      <test-suite name="ConcurrentExclusiveSchedulerPairTest" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Threading.Tasks.ConcurrentExclusiveSchedulerPairTest.BasicConcurrentUsageTest" executed="False">
                            <reason>
                              <message><![CDATA[Not implemented yet]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Threading.Tasks.ConcurrentExclusiveSchedulerPairTest.BasicExclusiveUsageTest" executed="False">
                            <reason>
                              <message><![CDATA[Not implemented yet]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Threading.Tasks.ConcurrentExclusiveSchedulerPairTest.ConcurrentUsageTest" executed="False">
                            <reason>
                              <message><![CDATA[Not implemented yet]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Threading.Tasks.ConcurrentExclusiveSchedulerPairTest.ConcurrentUsageWithExclusiveExecutingTest" executed="False">
                            <reason>
                              <message><![CDATA[Not implemented yet]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Threading.Tasks.ConcurrentExclusiveSchedulerPairTest.ExclusiveUsageTest" executed="False">
                            <reason>
                              <message><![CDATA[Not implemented yet]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Threading.Tasks.ConcurrentExclusiveSchedulerPairTest.ExclusiveUsageWithConcurrentExecutingTest" executed="False">
                            <reason>
                              <message><![CDATA[Not implemented yet]]></message>
                            </reason>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite name="ParallelTests" success="True" time="3.856" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Threading.Tasks.ParallelTests.BasicInvokeTest" executed="True" success="True" time="0.004" asserts="2" />
                          <test-case name="MonoTests.System.Threading.Tasks.ParallelTests.InvokeWithExceptions" executed="True" success="True" time="0.004" asserts="3" />
                          <test-case name="MonoTests.System.Threading.Tasks.ParallelTests.InvokeWithNullActions" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Threading.Tasks.ParallelTests.InvokeWithNullOptions" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Threading.Tasks.ParallelTests.InvokeWithOneNullActionTest" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Threading.Tasks.ParallelTests.OneActionInvokeTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Threading.Tasks.ParallelTests.ParallelForEachExceptionTestCase" executed="True" success="True" time="0.021" asserts="0" />
                          <test-case name="MonoTests.System.Threading.Tasks.ParallelTests.ParallelForEachTestCase" executed="True" success="True" time="0.886" asserts="1000" />
                          <test-case name="MonoTests.System.Threading.Tasks.ParallelTests.ParallelForExceptionTestCase" executed="True" success="True" time="0.005" asserts="0" />
                          <test-case name="MonoTests.System.Threading.Tasks.ParallelTests.ParallelForNestedTest" executed="True" success="True" time="0.229" asserts="1" />
                          <test-case name="MonoTests.System.Threading.Tasks.ParallelTests.ParallelForNoOperationTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Threading.Tasks.ParallelTests.ParallelForSmallRangeTest" executed="True" success="True" time="0.074" asserts="500" />
                          <test-case name="MonoTests.System.Threading.Tasks.ParallelTests.ParallelForTestCase" executed="True" success="True" time="2.585" asserts="1000" />
                          <test-case name="MonoTests.System.Threading.Tasks.ParallelTests.ParallerForEach_UserType" executed="True" success="True" time="0.018" asserts="10" />
                        </results>
                      </test-suite>
                      <test-suite name="Task_T_Tests" success="True" time="0.399" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Threading.Tasks.Task_T_Tests.FaultedFutureTest" executed="True" success="True" time="0.003" asserts="8" />
                          <test-case name="MonoTests.System.Threading.Tasks.Task_T_Tests.NestedFutureTest" executed="True" success="True" time="0.388" asserts="150" />
                          <test-case name="MonoTests.System.Threading.Tasks.Task_T_Tests.SimpleTaskTestCase" executed="True" success="True" time="0.004" asserts="2" />
                          <test-case name="MonoTests.System.Threading.Tasks.Task_T_Tests.TaskContinueWithTestCase" executed="True" success="True" time="0.001" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="TaskCompletionSourceTests" success="True" time="0.066" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Threading.Tasks.TaskCompletionSourceTests.ContinuationTest" executed="True" success="True" time="0.002" asserts="4" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskCompletionSourceTests.CreationCheckTest" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskCompletionSourceTests.CtorInvalidOptions" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskCompletionSourceTests.FaultedFutureTest" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskCompletionSourceTests.SetCanceledTest" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskCompletionSourceTests.SetExceptionAndUnobservedEvent" executed="False">
                            <reason>
                              <message><![CDATA[#4550, Mono GC is lame]]></message>
                            </reason>
                          </test-case>
                          <test-case name="MonoTests.System.Threading.Tasks.TaskCompletionSourceTests.SetExceptionInvalid" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskCompletionSourceTests.SetExceptionTest" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskCompletionSourceTests.SetResultExceptionTest" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskCompletionSourceTests.SetResultTest" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskCompletionSourceTests.WaitingTest" executed="True" success="True" time="0.050" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="TaskFactory_T_Tests" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Threading.Tasks.TaskFactory_T_Tests.ConstructorTest" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskFactory_T_Tests.FromAsync_ArgumentsCheck" executed="True" success="True" time="0.003" asserts="0" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskFactory_T_Tests.FromAsync_CompletedSynchronously" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskFactory_T_Tests.FromAsync_CompletedSynchronously_with_Callback" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskFactory_T_Tests.FromAsync_SimpleAsyncResult" executed="True" success="True" time="0.004" asserts="2" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskFactory_T_Tests.NoDefaultScheduler" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskFactory_T_Tests.StartNewCancelled" executed="True" success="True" time="0.001" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="TaskFactoryTests" success="True" time="0.059" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Threading.Tasks.TaskFactoryTests.ContinueWhenAll_InvalidArguments" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskFactoryTests.ContinueWhenAll_Simple" executed="True" success="True" time="0.003" asserts="6" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskFactoryTests.ContinueWhenAll_WithExceptions" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskFactoryTests.ContinueWhenAll_WithMixedCompletionState" executed="True" success="True" time="0.004" asserts="2" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskFactoryTests.ContinueWhenAny_InvalidArguments" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskFactoryTests.ContinueWhenAny_Simple" executed="True" success="True" time="0.002" asserts="4" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskFactoryTests.ContinueWhenAny_WithResult" executed="True" success="True" time="0.003" asserts="1" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskFactoryTests.FromAsync_ArgumentsCheck" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskFactoryTests.FromAsync_BeginCallback" executed="True" success="True" time="0.002" asserts="6" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskFactoryTests.FromAsync_Completed" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskFactoryTests.FromAsync_CompletedCanceled" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskFactoryTests.FromAsync_CompletedWithException" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskFactoryTests.FromAsync_ResultException" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskFactoryTests.FromAsync_ReturnInt" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskFactoryTests.FromAsync_Scheduler_Explicit" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskFactoryTests.FromAsync_Scheduler_Implicit" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskFactoryTests.FromAsync_SimpleAsyncResult" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskFactoryTests.FromAsyncBeginInvoke_WithResult" executed="True" success="True" time="0.002" asserts="6" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskFactoryTests.FromAsyncBeginMethod_DirectResult" executed="True" success="True" time="0.002" asserts="3" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskFactoryTests.FromAsyncBeginMethod_Exception" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskFactoryTests.NoDefaultScheduler" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskFactoryTests.StartNewCancelled" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskFactoryTests.StartNewTest" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="TaskSchedulerTests" success="True" time="0.008" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Threading.Tasks.TaskSchedulerTests.BasicRunSynchronouslyTest" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskSchedulerTests.DefaultBehaviourTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskSchedulerTests.FromCurrentSynchronizationContextTest_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskSchedulerTests.FromUserSynchronizationContext" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskSchedulerTests.RunSynchronouslyButNoExecutionTest" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskSchedulerTests.RunSynchronouslyTaskStatusTest" executed="True" success="True" time="0.001" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="TaskTests" success="True" time="8.107" asserts="0">
                        <results>
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.AlreadyCompletedChildTaskShouldRunContinuationImmediately" executed="True" success="True" time="0.052" asserts="1" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.AsyncWaitHandleSet" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.CancelBeforeStart" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.CanceledContinuationExecuteSynchronouslyTest" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.ContinuationOnBrokenScheduler" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.ContinueWith_CustomScheduleRejected" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.ContinueWith_StateValue" executed="True" success="True" time="0.002" asserts="9" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.ContinueWith_StateValueGeneric" executed="True" success="True" time="0.003" asserts="12" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.ContinueWithChildren" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.ContinueWithDifferentOptionsAreCanceledTest" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.ContinueWithInvalidArguments" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.ContinueWithOnAbortedTestCase" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.ContinueWithOnAnyTestCase" executed="True" success="True" time="0.026" asserts="2500" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.ContinueWithOnCompletedSuccessfullyTestCase" executed="True" success="True" time="0.018" asserts="2500" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.ContinueWithOnFailedTestCase" executed="True" success="True" time="0.038" asserts="2000" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.ContinueWithWithStart" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.CreationWhileInitiallyCanceled" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.Delay_Cancelled" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.Delay_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.Delay_Simple" executed="True" success="True" time="0.300" asserts="2" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.Delay_Start" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.Delay_TimeManagement" executed="True" success="True" time="0.026" asserts="2" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.DenyChildAttachTest" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.DisposeUnstartedTest" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.DoubleTimeoutedWaitTest" executed="True" success="True" time="0.100" asserts="2" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.DoubleWaitTest" executed="True" success="True" time="0.003" asserts="40" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.FromResult" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.HideSchedulerTest" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.InlineNotTrashingParentRelationship" executed="True" success="True" time="0.101" asserts="2" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.LazyCancelationTest" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.LongRunning" executed="True" success="True" time="0.002" asserts="6" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.MultipleTasks" executed="True" success="True" time="0.005" asserts="300" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.Run" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.Run_ArgumentCheck" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.Run_Cancel" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.Run_ExistingTask" executed="True" success="True" time="0.003" asserts="1" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.Run_ExistingTaskT" executed="True" success="True" time="0.003" asserts="2" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.RunSynchronously" executed="True" success="True" time="0.102" asserts="3" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.RunSynchronously_SchedulerException" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.RunSynchronouslyArgumentChecks" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.RunSynchronouslyOnContinuation" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.RunSynchronouslyWithAttachedChildren" executed="True" success="True" time="0.501" asserts="1" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.Start_NullArgument" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.StartFinishedTaskTest" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.StartOnBrokenScheduler" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.TaskContinuationChainLeak" executed="True" success="True" time="0.053" asserts="1">
                            <categories>
                              <category name="MobileNotWorking" />
                            </categories>
                          </test-case>
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.ThrowingUnrelatedCanceledExceptionTest" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.UnobservedExceptionOnFinalizerThreadTest" executed="True" success="True" time="2.043" asserts="1" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.Wait_CancelledTask" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.Wait_Inlined" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WaitAll_Cancelled" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WaitAll_CancelledAndTimeout" executed="True" success="True" time="0.010" asserts="1" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WaitAll_ManyTasks" executed="True" success="True" time="1.014" asserts="2000" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WaitAll_StartedUnderWait" executed="True" success="True" time="0.021" asserts="1" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WaitAll_TimeoutWithExceptionsAfter" executed="True" success="True" time="1.001" asserts="3" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WaitAll_TimeoutWithExceptionsBefore" executed="True" success="True" time="1.001" asserts="3" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WaitAll_WithExceptions" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WaitAll_Zero" executed="True" success="True" time="0.011" asserts="2" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WaitAllExceptionThenCancelled" executed="True" success="True" time="0.003" asserts="4" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WaitAllTest" executed="True" success="True" time="0.032" asserts="500" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WaitAny_Cancelled" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WaitAny_CancelledWithoutExecution" executed="True" success="True" time="0.021" asserts="2" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WaitAny_Empty" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WaitAny_ManyCanceled" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WaitAny_OneException" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WaitAny_SingleCanceled" executed="True" success="True" time="0.201" asserts="1" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WaitAny_WithNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WaitAny_Zero" executed="True" success="True" time="0.021" asserts="2" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WaitAnyTest" executed="True" success="True" time="0.025" asserts="1500" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WaitChildTestCase" executed="True" success="True" time="0.101" asserts="60" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WaitChildWithContinuationAttachedTest" executed="True" success="True" time="0.402" asserts="1" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WaitChildWithContinuationNotAttachedTest" executed="True" success="True" time="0.201" asserts="1" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WaitChildWithNesting" executed="True" success="True" time="0.501" asserts="2" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WaitingForChildrenToComplete" executed="True" success="True" time="0.012" asserts="7" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WhenAll" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WhenAll_Cancelled" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WhenAll_Empty" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WhenAll_Faulted" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WhenAll_Start" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WhenAll_WithNull" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WhenAllResult" executed="True" success="True" time="0.004" asserts="5" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WhenAllResult_Cancelled" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WhenAllResult_Completed" executed="True" success="True" time="0.002" asserts="4" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WhenAllResult_Empty" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WhenAllResult_WithNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WhenAny" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WhenAny_Cancelled" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WhenAny_Faulted" executed="True" success="True" time="0.002" asserts="4" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WhenAny_Start" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WhenAny_WithNull" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WhenAnyResult" executed="True" success="True" time="0.004" asserts="3" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WhenAnyResult_Cancelled" executed="True" success="True" time="0.004" asserts="3" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WhenAnyResult_Faulted" executed="True" success="True" time="0.003" asserts="4" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WhenAnyResult_Start" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WhenAnyResult_WithNull" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WhenChildTaskErrorIsThrownNotOnFaultedContinuationShouldNotBeExecuted" executed="True" success="True" time="0.002" asserts="3" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WhenChildTaskErrorIsThrownOnlyOnFaultedContinuationShouldExecute" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WhenChildTaskErrorIsThrownParentTaskShouldBeFaulted" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="MonoTests.System.Threading.Tasks.TaskTests.WhenChildTaskSeveralLevelsDeepHandlesAggregateExceptionErrorStillBubblesToParent" executed="True" success="True" time="0.001" asserts="2" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="ThreadApartmentTest" success="True" time="0.022" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Threading.ThreadApartmentTest.ApartmentState_BackGround" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Threading.ThreadApartmentTest.ApartmentState_StoppedThread" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Threading.ThreadApartmentTest.Culture" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Threading.ThreadApartmentTest.ParametrizedThreadStart" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Threading.ThreadApartmentTest.SetNameTpThread" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.ThreadApartmentTest.TestApartmentState" executed="True" success="True" time="0.001" asserts="10" />
                      <test-case name="MonoTests.System.Threading.ThreadApartmentTest.TestSetApartmentStateDiffState" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Threading.ThreadApartmentTest.TestSetApartmentStateSameState" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Threading.ThreadApartmentTest.TestTrySetApartmentState" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Threading.ThreadApartmentTest.TestTrySetApartmentStateRunning" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Threading.ThreadApartmentTest.ThreadStartSimple" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Threading.ThreadApartmentTest.Volatile" executed="True" success="True" time="0.001" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="ThreadLocalTests" success="True" time="0.025" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Threading.ThreadLocalTests.DefaultThreadLocalInitTest" executed="True" success="True" time="0.002" asserts="2" />
                      <test-case name="MonoTests.System.Threading.ThreadLocalTests.DisposedOnIsValueCreatedTest" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Threading.ThreadLocalTests.DisposedOnValueTest" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.ThreadLocalTests.InitializeThrowingTest" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="MonoTests.System.Threading.ThreadLocalTests.MultipleReferenceToValueTest" executed="True" success="True" time="0.000" asserts="0">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Threading.ThreadLocalTests.PerThreadException" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="MonoTests.System.Threading.ThreadLocalTests.SingleThreadTest" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Threading.ThreadLocalTests.ThreadedTest" executed="True" success="True" time="0.001" asserts="10" />
                    </results>
                  </test-suite>
                  <test-suite name="ThreadPoolTests" success="True" time="0.006" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Threading.ThreadPoolTests.RegisterWaitForSingleObject_InvalidArguments" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.ThreadPoolTests.UnsafeQueueUserWorkItem_InvalidArguments" executed="True" success="True" time="0.003" asserts="0" />
                      <test-case name="MonoTests.System.Threading.ThreadPoolTests.UnsafeQueueUserWorkItem_MulticastDelegate" executed="True" success="True" time="0.001" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="ThreadStateTest" success="True" time="0.002" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Threading.ThreadStateTest.IsBackGround" executed="True" success="True" time="0.002" asserts="13" />
                    </results>
                  </test-suite>
                  <test-suite name="ThreadTest" success="True" time="0.886" asserts="0">
                    <categories>
                      <category name="MobileNotWorking" />
                    </categories>
                    <results>
                      <test-case name="MonoTests.System.Threading.ThreadTest.AbortUnstarted" executed="True" success="True" time="0.000" asserts="0">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Threading.ThreadTest.CurrentPrincipal_PrincipalPolicy_NoPrincipal" executed="False">
                        <reason>
                          <message><![CDATA[see comment below.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Threading.ThreadTest.CurrentPrincipal_PrincipalPolicy_UnauthenticatedPrincipal" executed="False">
                        <reason>
                          <message><![CDATA[see comment below.]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Threading.ThreadTest.CurrentPrincipal_PrincipalPolicy_WindowsPrincipal" executed="True" success="True" time="0.003" asserts="7" />
                      <test-case name="MonoTests.System.Threading.ThreadTest.GetHashCodeTest" executed="True" success="True" time="0.001" asserts="9" />
                      <test-case name="MonoTests.System.Threading.ThreadTest.GetNamedDataSlotTest" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Threading.ThreadTest.IPrincipal_CopyOnNewThread" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Threading.ThreadTest.Join_Int32_Negative" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.ThreadTest.Join_TimeSpan_Negative" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.ThreadTest.Join_TimeSpan_SmallNegative" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.ThreadTest.Join_TimeSpan_TooLarge" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.ThreadTest.ManagedThreadId" executed="True" success="True" time="0.001" asserts="5" />
                      <test-case name="MonoTests.System.Threading.ThreadTest.Name" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="MonoTests.System.Threading.ThreadTest.ReName" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="MonoTests.System.Threading.ThreadTest.Sleep_Int32_Negative" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.ThreadTest.Sleep_TimeSpan_Negative" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.ThreadTest.Sleep_TimeSpan_SmallNegative" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.ThreadTest.Sleep_TimeSpan_TooLarge" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.ThreadTest.SpinWait" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.ThreadTest.Test_Interrupt" executed="True" success="True" time="0.101" asserts="1" />
                      <test-case name="MonoTests.System.Threading.ThreadTest.Test_InterruptCurrentThread" executed="True" success="True" time="0.000" asserts="0">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Threading.ThreadTest.TestApartmentState" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Threading.ThreadTest.TestCtor1" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="MonoTests.System.Threading.ThreadTest.TestIsBackground1" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="MonoTests.System.Threading.ThreadTest.TestIsBackground2" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Threading.ThreadTest.TestJoin1" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Threading.ThreadTest.TestName" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="MonoTests.System.Threading.ThreadTest.TestNestedThreads1" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Threading.ThreadTest.TestNestedThreads2" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Threading.ThreadTest.TestPriority1" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Threading.ThreadTest.TestQueueUserWorkItemNullCallback" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.ThreadTest.TestStart" executed="True" success="True" time="0.001" asserts="2">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Threading.ThreadTest.TestSuspend" executed="True" success="True" time="0.402" asserts="5" />
                      <test-case name="MonoTests.System.Threading.ThreadTest.TestSuspendAbort" executed="True" success="True" time="0.321" asserts="7">
                        <categories>
                          <category name="NotDotNet" />
                        </categories>
                      </test-case>
                      <test-case name="MonoTests.System.Threading.ThreadTest.TestThreadState" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Threading.ThreadTest.TestUndivisibleByPageSizeMaxStackSize" executed="True" success="True" time="0.001" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="ThreadTest_ManagedThreadId" success="True" time="0.652" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Threading.ThreadTest_ManagedThreadId.ManagedThreadId_AppDomains" executed="True" success="True" time="0.651" asserts="12" />
                    </results>
                  </test-suite>
                  <test-suite name="TimerTest" success="True" time="10.098" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Threading.TimerTest.Change_IntInt_Infinite" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.TimerTest.Change_IntInt_MaxValue" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.TimerTest.Change_LongLong_Infinite" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.TimerTest.Change_LongLong_MaxValue" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.TimerTest.Change_LongLong_UInt32MaxValue" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.TimerTest.Change_LongLong_UInt32MaxValueMinusOne" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.TimerTest.Change_TimeSpanTimeSpan_Infinite" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Threading.TimerTest.Change_TimeSpanTimeSpan_MaxValue" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.TimerTest.Change_TimeSpanTimeSpan_UInt32MaxValue" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.TimerTest.Change_UIntUInt_Infinite" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.TimerTest.Change_UIntUInt_MaxValue" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.TimerTest.DisposeNullWaitHandle" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="MonoTests.System.Threading.TimerTest.TestChange" executed="True" success="True" time="1.001" asserts="2" />
                      <test-case name="MonoTests.System.Threading.TimerTest.TestDelayZeroPeriodZero" executed="True" success="True" time="0.100" asserts="1" />
                      <test-case name="MonoTests.System.Threading.TimerTest.TestDispose" executed="True" success="True" time="0.421" asserts="2" />
                      <test-case name="MonoTests.System.Threading.TimerTest.TestDispose2" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.TimerTest.TestDisposeOnCallback" executed="False">
                        <reason>
                          <message><![CDATA[]]></message>
                        </reason>
                      </test-case>
                      <test-case name="MonoTests.System.Threading.TimerTest.TestDueTime" executed="True" success="True" time="1.751" asserts="4" />
                      <test-case name="MonoTests.System.Threading.TimerTest.TestHeavyCreationLoad" executed="True" success="True" time="1.002" asserts="1" />
                      <test-case name="MonoTests.System.Threading.TimerTest.TestInt32MaxDelay" executed="True" success="True" time="0.050" asserts="1" />
                      <test-case name="MonoTests.System.Threading.TimerTest.TestInt32MaxPeriod" executed="True" success="True" time="0.050" asserts="1" />
                      <test-case name="MonoTests.System.Threading.TimerTest.TestNegativeDelay" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.TimerTest.TestNegativePeriod" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.TimerTest.TestQuickDisposeDeadlockBug" executed="True" success="True" time="5.501" asserts="0" />
                      <test-case name="MonoTests.System.Threading.TimerTest.TestZeroDueTime" executed="True" success="True" time="0.201" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="VolatileTest" success="True" time="0.008" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Threading.VolatileTest.ReadPrimitives" executed="True" success="True" time="0.002" asserts="14" />
                      <test-case name="MonoTests.System.Threading.VolatileTest.WritePrimitives" executed="True" success="True" time="0.003" asserts="14" />
                    </results>
                  </test-suite>
                  <test-suite name="WaitHandleTest" success="True" time="0.352" asserts="0">
                    <results>
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.InterrupedWaitAll" executed="True" success="True" time="0.103" asserts="2" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.InterrupedWaitAny" executed="True" success="True" time="0.102" asserts="2" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.InterrupedWaitOne" executed="True" success="True" time="0.101" asserts="2" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.WaitAll_Empty" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.WaitAll_WaitHandle" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.WaitAll_WaitHandle_Empty" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.WaitAll_WaitHandle_Empty_Int" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.WaitAll_WaitHandle_Empty_TimeSpan" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.WaitAll_WaitHandle_Int" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.WaitAll_WaitHandle_Int_Negative" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.WaitAll_WaitHandle_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.WaitAll_WaitHandle_TimeSpan" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.WaitAll_WaitHandle_TimeSpan_MaxValue" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.WaitAll_WaitHandle_TimeSpan_Negative" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.WaitAll_WaitHandle_TooLarge" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.WaitAll_WaitHandle_TooLarge_Int" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.WaitAll_WaitHandle_TooLarge_TimeSpan" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.WaitAll_WaitHandleNull_Int" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.WaitAll_WaitHandleNull_TimeSpan" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.WaitAny_Empty" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.WaitAny_WaitHandle" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.WaitAny_WaitHandle_Empty" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.WaitAny_WaitHandle_Empty_Int" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.WaitAny_WaitHandle_Empty_TimeSpan" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.WaitAny_WaitHandle_Int" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.WaitAny_WaitHandle_Int_Negative" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.WaitAny_WaitHandle_Null" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.WaitAny_WaitHandle_TimeSpan" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.WaitAny_WaitHandle_TimeSpan_MaxValue" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.WaitAny_WaitHandle_TimeSpan_Negative" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.WaitAny_WaitHandle_TooLarge" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.WaitAny_WaitHandle_TooLarge_Int" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.WaitAny_WaitHandle_TooLarge_TimeSpan" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.WaitAny_WaitHandleNull_Int" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.WaitAny_WaitHandleNull_TimeSpan" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.WaitOne" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.WaitOne_Int" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.WaitOne_Int_Negative" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.WaitOne_TimeSpan" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.WaitOne_TimeSpan_MaxValue" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="MonoTests.System.Threading.WaitHandleTest.WaitOne_TimeSpan_Negative" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="TimeSpanTest" success="True" time="0.084" asserts="0">
                <results>
                  <test-case name="MonoTests.System.TimeSpanTest.DaysOverflow" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.TimeSpanTest.FromDays_MaxValue" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.TimeSpanTest.FromDays_MinValue" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.TimeSpanTest.FromDays_NaN" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.TimeSpanTest.FromDays_NegativeInfinity" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.TimeSpanTest.FromDays_PositiveInfinity" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.TimeSpanTest.FromHours_MaxValue" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.TimeSpanTest.FromHours_MinValue" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.TimeSpanTest.FromHours_NaN" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.TimeSpanTest.FromHours_NegativeInfinity" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.TimeSpanTest.FromHours_PositiveInfinity" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.TimeSpanTest.FromMilliseconds_MaxValue" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.TimeSpanTest.FromMilliseconds_MinValue" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.TimeSpanTest.FromMilliseconds_NaN" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.TimeSpanTest.FromMilliseconds_NegativeInfinity" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.TimeSpanTest.FromMilliseconds_PositiveInfinity" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.TimeSpanTest.FromMinutes_MaxValue" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.TimeSpanTest.FromMinutes_MinValue" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.TimeSpanTest.FromMinutes_NaN" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.TimeSpanTest.FromMinutes_NegativeInfinity" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.TimeSpanTest.FromMinutes_PositiveInfinity" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.TimeSpanTest.FromSeconds_MaxValue" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.TimeSpanTest.FromSeconds_MinValue" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.TimeSpanTest.FromSeconds_NaN" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.TimeSpanTest.FromSeconds_NegativeInfinity" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.TimeSpanTest.FromSeconds_PositiveInfinity" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.TimeSpanTest.MaxDays" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.TimeSpanTest.MaxHours_TooLong" executed="False">
                    <reason>
                      <message><![CDATA[too long]]></message>
                    </reason>
                  </test-case>
                  <test-case name="MonoTests.System.TimeSpanTest.MaxMilliseconds" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.TimeSpanTest.MaxMinutes_TooLong" executed="False">
                    <reason>
                      <message><![CDATA[too long]]></message>
                    </reason>
                  </test-case>
                  <test-case name="MonoTests.System.TimeSpanTest.MaxSeconds" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.TimeSpanTest.MinDays" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.TimeSpanTest.MinHours_TooLong" executed="False">
                    <reason>
                      <message><![CDATA[too long]]></message>
                    </reason>
                  </test-case>
                  <test-case name="MonoTests.System.TimeSpanTest.MinMilliseconds" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.TimeSpanTest.MinMinutes_TooLong" executed="False">
                    <reason>
                      <message><![CDATA[too long]]></message>
                    </reason>
                  </test-case>
                  <test-case name="MonoTests.System.TimeSpanTest.MinSeconds" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.TimeSpanTest.NegativeTimeSpan" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="MonoTests.System.TimeSpanTest.NoNegateMinValue" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.TimeSpanTest.Parse_Days_WithoutColon" executed="True" success="True" time="0.002" asserts="1" />
                  <test-case name="MonoTests.System.TimeSpanTest.Parse_InvalidValuesAndFormat_ExceptionOrder" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.TimeSpanTest.Parse_MinMaxValues" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.TimeSpanTest.Parse_OverMaxValue" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.TimeSpanTest.Parse_UnderMinValue" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.TimeSpanTest.ParseExact" executed="True" success="True" time="0.002" asserts="118" />
                  <test-case name="MonoTests.System.TimeSpanTest.ParseExactCustomFormats" executed="True" success="True" time="0.006" asserts="227" />
                  <test-case name="MonoTests.System.TimeSpanTest.ParseExactExceptions" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.TimeSpanTest.ParseExactMultipleFormats" executed="True" success="True" time="0.010" asserts="26" />
                  <test-case name="MonoTests.System.TimeSpanTest.ParseMissingSeconds" executed="True" success="True" time="0.001" asserts="11" />
                  <test-case name="MonoTests.System.TimeSpanTest.TestFromXXXX" executed="True" success="True" time="0.001" asserts="11" />
                  <test-case name="MonoTests.System.TimeSpanTest.TestParse" executed="True" success="True" time="0.001" asserts="49" />
                  <test-case name="MonoTests.System.TimeSpanTest.ToString_Constants" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.TimeSpanTest.ToStringCustomFormats" executed="True" success="True" time="0.003" asserts="27" />
                  <test-case name="MonoTests.System.TimeSpanTest.ToStringOverloads" executed="True" success="True" time="0.001" asserts="11" />
                  <test-case name="MonoTests.System.TimeSpanTest.ToStringOverloadsErrors" executed="True" success="True" time="0.002" asserts="0" />
                  <test-case name="MonoTests.System.TimeSpanTest.TryParse" executed="True" success="True" time="0.006" asserts="17" />
                  <test-case name="MonoTests.System.TimeSpanTest.TryParseErrors" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.TimeSpanTest.TryParseExact" executed="True" success="True" time="0.001" asserts="73" />
                  <test-case name="MonoTests.System.TimeSpanTest.TryParseOverloads" executed="True" success="True" time="0.001" asserts="3" />
                </results>
              </test-suite>
              <test-suite name="TimeZoneTest" success="True" time="0.308" asserts="0">
                <results>
                  <test-case name="MonoTests.System.TimeZoneTest.CurrentTimeZone_SerializationRoundtrip" executed="True" success="True" time="0.016" asserts="2">
                    <categories>
                      <category name="TargetJvmNotWorking" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.TimeZoneTest.FindSystemTimeZoneById" executed="True" success="True" time="0.282" asserts="3" />
                  <test-case name="MonoTests.System.TimeZoneTest.GetUtcOffsetAtDSTBoundary" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.TimeZoneTest.StaticProperties" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.TimeZoneTest.TestCtors" executed="True" success="True" time="0.003" asserts="14" />
                  <test-case name="MonoTests.System.TimeZoneTest.ToLocalTimeAtDSTBoundaries" executed="True" success="True" time="0.001" asserts="5" />
                </results>
              </test-suite>
              <test-suite name="TupleTest" success="True" time="0.003" asserts="0">
                <results>
                  <test-case name="MonoTests.System.TupleTest.ToStringTest" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.TupleTest.TupleWithRest_Invalid" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.TupleTest.TupleWithRest_InvalidDueToNull" executed="True" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
              <test-suite name="TypeTest" success="True" time="0.306" asserts="0">
                <results>
                  <test-case name="MonoTests.System.TypeTest.Bug506757" executed="True" success="True" time="0.002" asserts="2" />
                  <test-case name="MonoTests.System.TypeTest.ByrefType" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.TypeTest.ByrefTypes" executed="True" success="True" time="0.001" asserts="9" />
                  <test-case name="MonoTests.System.TypeTest.CannotMakeDerivedTypesFromTypedByRef" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.TypeTest.CreateValueTypeNoCtor" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.TypeTest.CreateValueTypeNoCtorArgs" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.TypeTest.CustomAttributeWithNestedArrayOfEnum" executed="True" success="True" time="0.001" asserts="7" />
                  <test-case name="MonoTests.System.TypeTest.DeclaringMethodOnlyWorksWithGenericArgs" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.TypeTest.DeclaringTypeOfGenericNestedTypeInstanceIsOpen" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.TypeTest.Equals_Type_Null" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.TypeTest.EqualsUnderlyingType" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.TypeTest.EqualsUserType" executed="True" success="True" time="0.002" asserts="1" />
                  <test-case name="MonoTests.System.TypeTest.ExerciseFilterName" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.TypeTest.ExerciseFilterNameIgnoreCase" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.TypeTest.FilterAttribute_Invalid" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.TypeTest.FullNameGenerics" executed="True" success="True" time="0.001" asserts="20" />
                  <test-case name="MonoTests.System.TypeTest.GenericByRef" executed="True" success="True" time="0.001" asserts="12" />
                  <test-case name="MonoTests.System.TypeTest.GenericParameterMemberType" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.TypeTest.GenericParameterNamespace" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.TypeTest.GenericParameterPositionUserType" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.TypeTest.GetArrayRankThrowsForNonArrayType" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.TypeTest.GetConstructor_TakeInt_Object" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.TypeTest.GetConstructor1" executed="True" success="True" time="0.001" asserts="16" />
                  <test-case name="MonoTests.System.TypeTest.GetConstructor1_Types_ItemNull" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.TypeTest.GetConstructor1_Types_Null" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.TypeTest.GetConstructor2_Types_ItemNull" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.TypeTest.GetConstructor3_Types_ItemNull" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.TypeTest.GetConstructorNullInTypes" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.TypeTest.GetCustomAttributes_All" executed="True" success="True" time="0.001" asserts="11" />
                  <test-case name="MonoTests.System.TypeTest.GetCustomAttributes_Type" executed="True" success="True" time="0.005" asserts="71" />
                  <test-case name="MonoTests.System.TypeTest.GetCustomAttributesGenericInstance" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.TypeTest.GetElementType_Bug63841" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.TypeTest.GetEnumNames" executed="True" success="True" time="0.002" asserts="6" />
                  <test-case name="MonoTests.System.TypeTest.GetEnumNamesSortsByUnsignedValue" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.TypeTest.GetEnumUnderlyingType" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.TypeTest.GetEnumValue" executed="True" success="True" time="0.003" asserts="25" />
                  <test-case name="MonoTests.System.TypeTest.GetEnumValues" executed="True" success="True" time="0.002" asserts="5" />
                  <test-case name="MonoTests.System.TypeTest.GetEvents" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.TypeTest.GetFieldIgnoreCase" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.TypeTest.GetGenericArguments_ArgumentsHaveAttributes" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.TypeTest.GetGenericMethodDefinitionOverInflatedMethodOnGTD" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.TypeTest.GetGenericTypeDefinitionUserType" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.TypeTest.GetHashCodeUserType" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.TypeTest.GetInterfaceCompareAgainstGTDNames" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.TypeTest.GetInterfaceMapOnInterface" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.TypeTest.GetInterfaceMapWorksWithVariantIfaces" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.TypeTest.GetInterfaces" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.TypeTest.GetInterfacesGenericVarWithConstraints" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.TypeTest.GetMember_DoesntReturnPrivatePropOfParent" executed="True" success="True" time="0.002" asserts="3" />
                  <test-case name="MonoTests.System.TypeTest.GetMembers_GenericArgument" executed="True" success="True" time="0.002" asserts="2" />
                  <test-case name="MonoTests.System.TypeTest.GetMethod_Bug77367" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.TypeTest.GetMethodsReturnPublicMethodsInInterfaces" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.TypeTest.GetProperties" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.TypeTest.GetProperties_Flags" executed="True" success="True" time="0.016" asserts="420" />
                  <test-case name="MonoTests.System.TypeTest.GetProperty1_Name_Null" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.TypeTest.GetProperty2" executed="True" success="True" time="0.013" asserts="420" />
                  <test-case name="MonoTests.System.TypeTest.GetProperty2_Name_Null" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.TypeTest.GetProperty3_Name_Null" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.TypeTest.GetProperty4_Name_Null" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.TypeTest.GetProperty5_Name_Null" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.TypeTest.GetProperty6_Name_Null" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.TypeTest.GetProperty7_Name_Null" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.TypeTest.GetProperty8_PropertyType" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.TypeTest.GetPropertyAccessorModifiers" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.TypeTest.GetType1_TypeName_Null" executed="True" success="True" time="0.009" asserts="4" />
                  <test-case name="MonoTests.System.TypeTest.GetType2_TypeName_Null" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.TypeTest.GetType3_TypeName_Null" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.TypeTest.GetTypeArray_Args_Null" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.TypeTest.GetTypeCalledUsingReflection" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.TypeTest.GetTypeCode" executed="True" success="True" time="0.001" asserts="18" />
                  <test-case name="MonoTests.System.TypeTest.GetTypeFromHandle_Handle_Zero" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.TypeTest.GetTypeHandle_O_Null" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.TypeTest.GetTypeNonVectorArray" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.TypeTest.GetTypeParseGenericCorrectly" executed="True" success="True" time="0.001" asserts="15" />
                  <test-case name="MonoTests.System.TypeTest.GetTypeWithDelegates" executed="True" success="True" time="0.010" asserts="13" />
                  <test-case name="MonoTests.System.TypeTest.GetTypeWithDelegatesAndUserTypes" executed="True" success="True" time="0.002" asserts="2" />
                  <test-case name="MonoTests.System.TypeTest.InvokeMember_GetSetField" executed="True" success="True" time="0.001" asserts="9" />
                  <test-case name="MonoTests.System.TypeTest.InvokeMember_GetSetProperty" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.TypeTest.InvokeMember_InvokeMethod_Set" executed="True" success="True" time="0.003" asserts="10" />
                  <test-case name="MonoTests.System.TypeTest.InvokeMember_MatchPrimitiveTypeWithInterface" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.TypeTest.InvokeMember_Name_Null" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.TypeTest.InvokeMember_NoOperation" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.TypeTest.InvokeMember_OutParam" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.TypeTest.InvokeMember_SetField_ProvidedArgs" executed="True" success="True" time="0.005" asserts="10" />
                  <test-case name="MonoTests.System.TypeTest.InvokeMember_SetFieldProperty" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.TypeTest.InvokeMember_VarArgs" executed="True" success="True" time="0.001" asserts="4">
                    <categories>
                      <category name="NotDotNet" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.TypeTest.InvokeMember_WithoutDefaultValue" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.TypeTest.IsAbstract" executed="True" success="True" time="0.001" asserts="7" />
                  <test-case name="MonoTests.System.TypeTest.IsAssignable" executed="True" success="True" time="0.001" asserts="9" />
                  <test-case name="MonoTests.System.TypeTest.IsAssignableFromWithNullable" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.TypeTest.IsAssignableFromWithVariantDelegate" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.TypeTest.IsAssignableFromWorksCorrectlyWithByRefs" executed="True" success="True" time="0.001" asserts="22" />
                  <test-case name="MonoTests.System.TypeTest.IsCOMObject" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.TypeTest.IsDefined" executed="True" success="True" time="0.001" asserts="16" />
                  <test-case name="MonoTests.System.TypeTest.IsDefined_AttributeType_Null" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.TypeTest.IsEnumDefined" executed="True" success="True" time="0.002" asserts="6" />
                  <test-case name="MonoTests.System.TypeTest.IsGenericTypeDefinitionUserType" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.TypeTest.IsGenericTypeUserType" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.TypeTest.IsImport" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.TypeTest.IsInstanceOf" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.TypeTest.IsInstanceOfArrayOfNullable" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.TypeTest.IsInstanceOfType_Null" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.TypeTest.IsInterface" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.TypeTest.IsPrimitive" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.TypeTest.IsValueType" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.TypeTest.MakeArrayTypeOfOneDimension" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.TypeTest.MakeArrayTypeTest" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.TypeTest.MakeByRefByRef" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.TypeTest.MakeGenericType_BadUserType" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.TypeTest.MakeGenericType_UserDefinedType" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.TypeTest.MakeGenericType_WrongNumOfArguments" executed="True" success="True" time="0.009" asserts="0" />
                  <test-case name="MonoTests.System.TypeTest.Name" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="MonoTests.System.TypeTest.Namespace" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.TypeTest.NewGetTypeErrors" executed="True" success="True" time="0.003" asserts="0" />
                  <test-case name="MonoTests.System.TypeTest.NewV4EqualsBehavior" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="MonoTests.System.TypeTest.ReflectionOnlyGetType" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.TypeTest.ReflectionOnlyGetTypeDoNotThrow" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.TypeTest.ReflectionOnlyGetTypeNullTypeName" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.TypeTest.ReflectionOnlyGetTypeThrow" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="MonoTests.System.TypeTest.RuntimeCorrectlyNormalizeGenericTypes" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.TypeTest.StructLayoutAttribute" executed="True" success="True" time="0.002" asserts="6" />
                  <test-case name="MonoTests.System.TypeTest.TestAssemblyQualifiedName" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.TypeTest.TestGetMethodImpl" executed="True" success="True" time="0.001" asserts="7" />
                  <test-case name="MonoTests.System.TypeTest.TestGetPropertyImpl" executed="True" success="True" time="0.001" asserts="3">
                    <categories>
                      <category name="TargetJvmNotWorking" />
                    </categories>
                  </test-case>
                  <test-case name="MonoTests.System.TypeTest.TestIsAssignableFrom" executed="True" success="True" time="0.004" asserts="35" />
                  <test-case name="MonoTests.System.TypeTest.TestIsSubclassOf" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="MonoTests.System.TypeTest.TestMissing" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.TypeTest.TestNestedTypes" executed="True" success="True" time="0.001" asserts="7" />
                  <test-case name="MonoTests.System.TypeTest.TypeFromCLSID" executed="True" success="True" time="0.004" asserts="3" />
                  <test-case name="MonoTests.System.TypeTest.TypeGetMemberReturnTypeTest" executed="True" success="True" time="0.001" asserts="9" />
                  <test-case name="MonoTests.System.TypeTest.TypeNameStartsWithSpace" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="MonoTests.System.TypeTest.TypeParameterIsNotGeneric" executed="True" success="True" time="0.001" asserts="4" />
                </results>
              </test-suite>
              <test-suite name="UInt16Test" success="True" time="0.013" asserts="0">
                <results>
                  <test-case name="MonoTests.System.UInt16Test.TestCompareTo" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.UInt16Test.TestEquals" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.UInt16Test.TestGetHashCode" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UInt16Test.TestMinMax" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.UInt16Test.TestParse" executed="True" success="True" time="0.001" asserts="12" />
                  <test-case name="MonoTests.System.UInt16Test.TestParseExponent" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.UInt16Test.TestToString" executed="True" success="True" time="0.002" asserts="36" />
                  <test-case name="MonoTests.System.UInt16Test.ToString_Defaults" executed="True" success="True" time="0.001" asserts="7" />
                </results>
              </test-suite>
              <test-suite name="UInt32Test" success="True" time="0.030" asserts="0">
                <results>
                  <test-case name="MonoTests.System.UInt32Test.TestCompareTo" executed="True" success="True" time="0.002" asserts="12" />
                  <test-case name="MonoTests.System.UInt32Test.TestEquals" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.UInt32Test.TestGetHashCode" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UInt32Test.TestMinMax" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.UInt32Test.TestParse" executed="True" success="True" time="0.001" asserts="16" />
                  <test-case name="MonoTests.System.UInt32Test.TestParseExponent" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.UInt32Test.TestToString" executed="True" success="True" time="0.016" asserts="36" />
                  <test-case name="MonoTests.System.UInt32Test.TestTryParse" executed="True" success="True" time="0.002" asserts="42" />
                  <test-case name="MonoTests.System.UInt32Test.ToString_Defaults" executed="True" success="True" time="0.001" asserts="7" />
                </results>
              </test-suite>
              <test-suite name="UInt64Test" success="True" time="0.016" asserts="0">
                <results>
                  <test-case name="MonoTests.System.UInt64Test.TestCompareTo" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.UInt64Test.TestEquals" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.UInt64Test.TestGetHashCode" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UInt64Test.TestMinMax" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.UInt64Test.TestParse" executed="True" success="True" time="0.002" asserts="17" />
                  <test-case name="MonoTests.System.UInt64Test.TestParseExponent" executed="True" success="True" time="0.001" asserts="10" />
                  <test-case name="MonoTests.System.UInt64Test.TestToString" executed="True" success="True" time="0.001" asserts="36" />
                  <test-case name="MonoTests.System.UInt64Test.TestTryParse" executed="True" success="True" time="0.003" asserts="42" />
                  <test-case name="MonoTests.System.UInt64Test.ToString_Defaults" executed="True" success="True" time="0.001" asserts="7" />
                </results>
              </test-suite>
              <test-suite name="UIntPtrTest" success="True" time="0.002" asserts="0">
                <results>
                  <test-case name="MonoTests.System.UIntPtrTest.Test64on32" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="MonoTests.System.UIntPtrTest.Test64on64" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="MonoTests.System.UIntPtrTest.TestUlongOn32" executed="True" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
              <test-suite name="ValueTypeTest" success="True" time="0.002" asserts="0">
                <results>
                  <test-case name="MonoTests.System.ValueTypeTest.TestEmptyStructHashCode" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.ValueTypeTest.TestEquals" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.ValueTypeTest.TestEquals_Nullable" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="MonoTests.System.ValueTypeTest.TestGetHash" executed="True" success="True" time="0.001" asserts="4" />
                </results>
              </test-suite>
              <test-suite name="VersionTest" success="True" time="0.022" asserts="0">
                <results>
                  <test-case name="MonoTests.System.VersionTest.CompareTo" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.VersionTest.HashCode" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="MonoTests.System.VersionTest.MajorMinorRevisions" executed="True" success="True" time="0.001" asserts="12" />
                  <test-case name="MonoTests.System.VersionTest.Parse" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="MonoTests.System.VersionTest.TestClone" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="MonoTests.System.VersionTest.TestCompareTo" executed="True" success="True" time="0.001" asserts="14" />
                  <test-case name="MonoTests.System.VersionTest.TestCtors" executed="True" success="True" time="0.001" asserts="16" />
                  <test-case name="MonoTests.System.VersionTest.TestEquals" executed="True" success="True" time="0.000" asserts="8" />
                  <test-case name="MonoTests.System.VersionTest.TestStringCtor" executed="True" success="True" time="0.001" asserts="12" />
                  <test-case name="MonoTests.System.VersionTest.TestToString" executed="True" success="True" time="0.002" asserts="8" />
                  <test-case name="MonoTests.System.VersionTest.TryParse" executed="True" success="True" time="0.002" asserts="24" />
                </results>
              </test-suite>
              <test-suite name="WeakReferenceTest" success="True" time="0.050" asserts="0">
                <results>
                  <test-case name="MonoTests.System.WeakReferenceTest.WeakReference_IsAlive_Finalized" executed="True" success="True" time="0.042" asserts="1" />
                  <test-case name="MonoTests.System.WeakReferenceTest.WeakReference_Object" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.WeakReferenceTest.WeakReference_Object_Null" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.WeakReferenceTest.WeakReference_Object_Null_TrackResurrection_False" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.WeakReferenceTest.WeakReference_Object_Null_TrackResurrection_True" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.WeakReferenceTest.WeakReference_Object_TrackResurrection_False" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.WeakReferenceTest.WeakReference_Object_TrackResurrection_True" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="MonoTests.System.WeakReferenceTest.WeakReferenceT_TryGetTarget_NullTarget" executed="True" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>